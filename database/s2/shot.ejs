<!DOCTYPE html>

<html>

<head>
    <title>Shot Skills Tree</title>
    <link rel="icon" type="image/x-icon" href="../images/favicon.ico">
    <%- include('../../templates/headers/metadata') %>

        <link rel="stylesheet" href="../../templates/functions-skills-list/skills.css">

        <script src="../templates/axios.min.js"></script>
        <script>
            // wew have works to do
            function roundToTwoDecimals(value) {
                return Math.round(value * 100) / 100;
            }
        </script>
</head>

<body>
    <%- include('../../templates/headers/header') %>

        <div id="content">
            <div class="container">
                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/powershot.png" width="34" height="34">
                                Power Shot
                            </p>
                            <p class="medium">
                                Skill Power Shot Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>16</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Shoot the target with stronger power. The charge time reduces as the skill levels up.
                                Chance to inflict [Tumble] on the target. Critical rate increases on Slowed targets.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Tumble Rate +40%</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Charge Time is shortened.<br>
                                <b style="color: #E77577">Tumble Rate -40%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="powerShotWeapon" onchange="calcPowerShotValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="powerShotArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="powerShotLevel" onchange="calcPowerShotValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Power Shot Boost" Registlet Level:</b></span>
                        <select id="powerShotRegistlet" onchange="calcPowerShotValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                        </select><br>
                        <span class="sub-title"><b>Target is afflicted with [Slow]:</b></span>
                        <input type="checkbox" id="powerShotSlow" onchange="calcPowerShotValues()"><br>
                        <div id="tumbleInput" style="display: none;">
                            <span class="sub-title"><b>[Tumble] inflicted successfully:</b></span>
                            <input type="checkbox" id="powerShotTumble" onchange="calcPowerShotValues()"><br>
                        </div>
                        <br>
                        <span id="powerShotValues">
                            <li><b>Skill Constant: </b> 130</li>
                            <li><b>Skill Multiplier:</b> 1.75</li><br>
                            <li><b>Motion Speed</b> of <b>Power Shot</b> -50%</li>
                            <li><b>Tumble Chance:</b> 90%</li>
                            <li><b>Tumble Duration:</b> 3 seconds</li>
                            <li><b>Resistance Duration on Difficulties:</b> 6 seconds (<b>Easy</b> and <b>Normal</b>); 9
                                seconds (<b>Hard</b>); 15 seconds (<b>Nightmare</b>); 21 seconds (<b>Ultimate</b>)</li>
                            <br><b>Extra info:</b>
                            <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding
                                ailment; most ailments have the same resistance duration as their own duration, unless
                                stated otherwise</li>
                            <li>This skill has a "Charge Time" gauge; this is <b>only an indication of the skill's
                                    Motion Speed</b>, however, <b>not the skill's cast time</b>. Therefore, this gauge's
                                speed can be affected by <b>Motion Speed</b> stat, but <b>not CSPD</b> stat</li>
                        </span>

                        <script>
                            function powerShotWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function powerShotTumbleCheck(registlet, tumbleSection) {
                                if (registlet > 0) { tumbleSection.style = "display: block" }
                                else { tumbleSection.style = "display: none" }
                            }

                            function calcPowerShotConstant(level, result) {
                                var constant = Math.floor(50 + 8 * level)
                                result.innerHTML = `<li><b>Skill Constant: </b> ${constant}</li>`
                            }

                            function calcPowerShotMultiplier(level, registlet, weapon, tumble, result) {
                                var skillMultiplier = 1.25 + (0.05 * level)
                                if (tumble && registlet > 0) { skillMultiplier += (0.15 * registlet) }
                                skillMultiplier = Math.round(skillMultiplier * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${skillMultiplier}</li><br>`
                            }

                            function calcPowerShotMotionSpeed(level, weapon, result) {
                                var motion = 155 - 10.5 * level
                                if (weapon == "BG") { motion -= 50 }
                                motion = Math.floor(motion)
                                if (motion != 0) { result.innerHTML += `<li><b>Motion Speed</b> of <b>Power Shot</b> -${motion}%</li>` }
                            }

                            function calcPowerShotCritRate(level, slow, result) {
                                var critRate = 5 * level
                                if (slow) { result.innerHTML += `<li><b>Critical Rate</b> of <b>Power Shot</b> +${critRate}</li>` }
                            }

                            function calcPowerShotTumbleChance(level, weapon, result) {
                                var chance = 20 + 3 * level
                                if (weapon == "Bow") { chance += 40 }
                                else if (weapon == "BG") {
                                    chance -= 40
                                    if (chance < 0) { chance = 0 }
                                }
                                result.innerHTML += `<li><b>Tumble Chance:</b> ${chance}%</li>
                    <li><b>Tumble Duration:</b> 3 seconds</li>
                    <li><b>Resistance Duration on Difficulties:</b> 6 seconds (<b>Easy</b> and <b>Normal</b>); 9 seconds (<b>Hard</b>); 15 seconds (<b>Nightmare</b>); 21 seconds (<b>Ultimate</b>)</li>`
                            }

                            function addPowerShotExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>
                    <li>This skill has a "Charge Time" gauge; this is <b>only an indication of the skill's Motion Speed</b>, however, <b>not the skill's cast time</b>. Therefore, this gauge's speed can be affected by <b>Motion Speed</b> stat, but <b>not CSPD</b> stat</li>`
                            }

                            function calcPowerShotValues() {
                                var weaponSelector = document.getElementById("powerShotWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("powerShotArrowInput")
                                var levelSelector = document.getElementById("powerShotLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var registletSelector = document.getElementById("powerShotRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var slow = document.getElementById("powerShotSlow").checked
                                var tumbleSection = document.getElementById("tumbleInput")
                                var tumble = document.getElementById("powerShotTumble").checked
                                var result = document.getElementById("powerShotValues")
                                powerShotWeaponCheck(weapon, subArrowSection)
                                powerShotTumbleCheck(registlet, tumbleSection)
                                calcPowerShotConstant(level, result)
                                calcPowerShotMultiplier(level, registlet, weapon, tumble, result)
                                calcPowerShotMotionSpeed(level, weapon, result)
                                calcPowerShotCritRate(level, slow, result)
                                calcPowerShotTumbleChance(level, weapon, result)
                                addPowerShotExtraInfo(result)
                            }

                            calcPowerShotValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/bullseye.png" width="34" height="34">
                                Bullseye
                            </p>
                            <p class="medium">
                                Skill Bullseye Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Consecutively shoot at a point. The damage dealt increases attack by attack.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +75</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Boost on Physical Pierce</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="bullseyeWeapon" onchange="calcBullseyeValue()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="bullseyeArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="bullseyeLevel" onchange="calcBullseyeValue()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Bullseye Enhancer" Registlet Level:</b></span>
                        <select id="bullseyeRegistlet" onchange="calcBullseyeValue()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                        </select><br>
                        <br>
                        <span id="bullseyeValues">
                            <li><b>Skill Constant: </b> 70; constant for each hit</li>
                            <li><b>Skill Multiplier:</b> 1; multiplier for each hit</li>
                            <li><b>Hit Count:</b> 3 hits; dodge, Evasion, Guard, Anticipate, Guard Break and critical
                                calculations are done <b>for the first hit</b>, then <b>copied for the other hits</b>;
                                the rest of damage calculation is done for each hit</li><br>
                            <li><b>Physical Pierce</b> of the <b>second hit</b> +40%</li>
                            <li><b>Physical Pierce</b> of the <b>third hit</b> +80%</li>
                        </span>

                        <script>
                            function bullseyeWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function calcBullseyeConstant(level, result) {
                                var constant = Math.floor(30 + (4 * level))
                                result.innerHTML = `<li><b>Skill Constant: </b> ${constant}; constant for each hit</li>`
                            }

                            function calcBullseyeMultiplier(level, registlet, weapon, result) {
                                var multiplier = 0.25 + (0.05 * level) + (0.05 * registlet)
                                if (weapon == "Bow") { multiplier += 0.25 }
                                multiplier = Math.round(multiplier * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; multiplier for each hit</li>
                    <li><b>Hit Count:</b> 3 hits; dodge, Evasion, Guard, Anticipate, Guard Break and critical calculations are done <b>for the first hit</b>, then <b>copied for the other hits</b>; the rest of damage calculation is done for each hit</li><br>`
                            }

                            function calcBullseyePierce(level, weapon, result) {
                                var pierceSecondHit = 4 * level
                                if (weapon == "BG") { pierceSecondHit += 10 }
                                var pierceThirdHit = 8 * level
                                if (weapon == "BG") { pierceThirdHit += 20 }
                                result.innerHTML += `<li><b>Physical Pierce</b> of the <b>second hit</b> +${pierceSecondHit}%</li>
                    <li><b>Physical Pierce</b> of the <b>third hit</b> +${pierceThirdHit}%</li>`
                            }

                            function calcBullseyeValue() {
                                var weaponSelector = document.getElementById("bullseyeWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("bullseyeArrowInput")
                                var levelSelector = document.getElementById("bullseyeLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var registletSelector = document.getElementById("bullseyeRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var result = document.getElementById("bullseyeValues")
                                bullseyeWeaponCheck(weapon, subArrowSection)
                                calcBullseyeConstant(level, result)
                                calcBullseyeMultiplier(level, registlet, weapon, result)
                                calcBullseyePierce(level, weapon, result)
                            }

                            calcBullseyeValue() 
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/arrowrain.png" width="34" height="34">
                                Arrow Rain
                            </p>
                            <p class="medium">
                                Skill Arrow Rain Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>300</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Shoot a lot of arrows to the sky. The arrows fall down at intervals and deal damage.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Boost on the Number of Attacks+<br>Boosts on Attack Speed<br>Range (Radius) +2m</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +70</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="arrowRainWeapon" onchange="calcArrowRainValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="arrowRainArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="arrowRainLevel" onchange="calcArrowRainValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Arrow Rain Enhancer" Registlet Level:</b></span>
                        <select id="arrowRainRegistlet" onchange="calcArrowRainValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                        </select><br>
                        <br>
                        <span id="arrowRainValues">
                            <li><b>Skill Constant: </b> 100; constant for each hit</li>
                            <li><b>Skill Multiplier:</b> 1.3; multiplier for each hit</li>
                            <li><b>Hit Count:</b> 8 hits; damage calculation is done for each hit; animation is adapted
                                to fire two hits successively per tick instead of one</li><br>
                            <li><b>Hit Range (radius):</b> 5m, around the <b>main target's position on cast</b></li>
                            <li>This skill is a <b>placed skill</b>, making it unaffected by <b>Whack</b>, <b>Long Range
                                    passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>
                        </span>

                        <script>
                            function arrowRainWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function calcArrowRainConstant(level, result) {
                                var constant = 50 + Math.floor((1 + level * 1) / 2) * 10
                                result.innerHTML = `<li><b>Skill Constant: </b> ${constant}; constant for each hit</li>`
                            }

                            function calcArrowRainMultiplier(level, registlet, weapon, result) {
                                var multiplier = 1 + Math.floor(level / 2) * 0.06
                                if (weapon == "BG") { multiplier += 0.7 }
                                multiplier = Math.round(multiplier * 100) / 100
                                //put the multiplier back into HTML
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; multiplier for each hit</li>`

                                var hitCount = 1 + level / 3 + registlet * 1
                                hitCount = Math.floor(hitCount)
                                if (weapon == "Bow") { hitCount *= 2 }

                                var HTML = `<li><b>Hit Count:</b> ${hitCount} hit`
                                if (hitCount != 1) { HTML += `s` }
                                HTML += `; damage calculation is done for each hit`
                                if (weapon == "Bow") { HTML += `; animation is adapted to fire two hits successively per tick instead of one` }
                                HTML += `</li><br>`
                                result.innerHTML += HTML
                            }

                            function calcArrowRainHitRange(level, weapon, result) {
                                var hitRange = 1.5 + 0.5 * Math.floor((level * 1 - 1) / 3)
                                if (weapon == "Bow") { hitRange += 2 }
                                result.innerHTML += `<li><b>Hit Range (radius):</b> ${hitRange}m, around the <b>main target's position on cast</b></li>`
                            }

                            function addArrowRainPlacedInfo(result) {
                                result.innerHTML += `<li>This skill is a <b>placed skill</b>, making it unaffected by <b>Whack</b>, <b>Long Range passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>`
                            }

                            function calcArrowRainValues() {
                                var weaponSelector = document.getElementById("arrowRainWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("arrowRainArrowInput")
                                var levelSelector = document.getElementById("arrowRainLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var registletSelector = document.getElementById("arrowRainRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var result = document.getElementById("arrowRainValues")
                                arrowRainWeaponCheck(weapon, subArrowSection)
                                calcArrowRainConstant(level, result)
                                calcArrowRainMultiplier(level, registlet, weapon, result)
                                calcArrowRainHitRange(level, weapon, result)
                                addArrowRainPlacedInfo(result)
                            }

                            calcArrowRainValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/snipe.png" width="34" height="34">
                                Snipe
                            </p>
                            <p class="medium">
                                Skill Snipe Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>16</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Snipe a weak point. The charge time decreases as the skill levels up. Chance to inflict
                                [Armor Break]. 100% chance to hit Blind targets.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +200<br>Armor Break Rate +30%<br>Reduction on Critical Rate Debuff</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +300<br>
                                Stability +20%<br>
                                A little shorter Charge Time<br>
                                <b style="color: #E77577">Armor Break Rate -60%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="snipeWeapon" onchange="calcSnipeValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="snipeArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="snipeLevel" onchange="calcSnipeValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total Critical Rate</b></span>
                        <input type="number" style="width: 50px;" id="snipeCritValues" onchange="calcSnipeValues()"
                            min="25" value="25"><br>
                        <span class="sub-title"><b>Target is afflicted with [Blind]:</b></span>
                        <input type="checkbox" id="snipeBlind" onchange="calcSnipeValues()"><br>
                        <br>
                        <span id="snipeValues">
                            <li><b>Skill Constant: </b> 400 </li>
                            <li><b>Skill Multiplier:</b> 10</li>
                            <li><b>Charge Time:</b> 1 second; <b>unaffected</b> by neither CSPD nor Motion Speed stats
                            </li><br>
                            <li><b>Total Critical Rate</b> of <b>Snipe</b>: 25</li>
                            <li><b>Armor Break Chance:</b> 100%</li>
                            <li><b>Armor Break Duration:</b> 5 seconds</li><br>Credits to <b>Phantom Library</b> and
                            Xenesis5 for the info about Critical Rate penalty formulae
                        </span>

                        <script>
                            function snipeWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function calcSnipeConstant(level, result) {
                                var constant = 300 + 10 * level
                                result.innerHTML = `<li><b>Skill Constant: </b> ${constant} </li>`
                            }

                            function calcSnipeMultiplier(level, weapon, result) {
                                var multiplier = 7 + (0.1 * level)
                                if (weapon == "Bow") { multiplier += 2 }
                                else if (weapon == "BG") { multiplier += 3 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li>`
                            }

                            function calcSnipeChargeTime(level, weapon, result) {
                                var chargeTime = 5.5 - 0.5 * level + 0.5 * Math.min(1, level / 6)
                                chargeTime = Math.round(chargeTime)
                                if (weapon == "BG") { chargeTime -= 0.5 }
                                var HTML = `<li><b>Charge Time:</b> ${chargeTime} second`
                                if (chargeTime != 1) { HTML += `s` }
                                HTML += `; <b>unaffected</b> by neither CSPD nor Motion Speed stats</li><br>`
                                result.innerHTML += HTML
                            }

                            function calcSnipeCritRatePenalty(level, weapon, totalCr, result) {
                                var critPenalty
                                var critRate
                                //Bonus Crit Rate for Bow
                                if (weapon == "Bow") { critPenalty = 10 - level }
                                else { critPenalty = 25 - Math.floor(level / 2) }
                                critRate = totalCr * (100 - critPenalty) / 100
                                critRate = Math.floor(critRate)
                                result.innerHTML += `<li><b>Total Critical Rate</b> of <b>Snipe</b>: ${critRate}</li>`
                            }

                            function addSnipeStabInfo(weapon, result) {
                                if (weapon == "BG") { result.innerHTML += `<li><b>Stability</b> of <b>Snipe</b> +20%</li>` }
                            }

                            function addSnipeBlindInfo(blind, result) {
                                if (blind) { result.innerHTML += `<li>This skill gains the <b>Perfect Aim</b> attribute: it cannot [Miss] or [Graze], but can be [Evaded]</li>` }
                            }

                            function calcSnipeArmorBreakChance(level, weapon, result) {
                                var chance = 50 + 2 * level
                                if (weapon == "Bow") { chance += 30 }
                                else if (weapon == "BG") { chance -= 60 }
                                if (chance < 0) { chance = 0 }
                                if (chance != 0) {
                                    result.innerHTML += `<li><b>Armor Break Chance:</b> ${chance}%</li>
                    <li><b>Armor Break Duration:</b> 5 seconds</li>`}
                            }

                            function calcSnipeValues() {
                                var weaponSelector = document.getElementById("snipeWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("snipeArrowInput")
                                var levelSelector = document.getElementById("snipeLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var totalCr = document.getElementById('snipeCritValues').value
                                var blind = document.getElementById("snipeBlind").checked
                                var result = document.getElementById("snipeValues")
                                snipeWeaponCheck(weapon, subArrowSection)
                                calcSnipeConstant(level, result)
                                calcSnipeMultiplier(level, weapon, result)
                                calcSnipeChargeTime(level, weapon, result)
                                calcSnipeCritRatePenalty(level, weapon, totalCr, result)
                                addSnipeStabInfo(weapon, result)
                                addSnipeBlindInfo(blind, result)
                                calcSnipeArmorBreakChance(level, weapon, result);
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> and Xenesis5 for the info about Critical Rate penalty formulae</li>`
                            }

                            calcSnipeValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/crossfire.png" width="34" height="34">
                                Cross Fire
                            </p>
                            <p class="medium">
                                Skill Cross Fire Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Charge Skill (<b style="color: gold">5 Levels</b>). Attack toward a target and deal
                                damage to the enemies on the straight line. Power increases as the charge level
                                increases and add an attack. Add another attack by meeting certain conditions.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +50<br>Power increases depending on DEX.<br>Range (Horizontal) +1m</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power of Additional Bullets +100<br>Penetrability of additional bullets increases
                                depending on DEX.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="crossFireWeapon" onchange="calcCrossFireValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="crossFireLevel" onchange="calcCrossFireValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Buff cast's Combo Tag:</b></span>
                        <select id="crossFireBuffComboTag" onchange="calcCrossFireValues()">
                            <option value="None" selected="">None</option>
                            <option value="Cons">Consecutive</option>
                            <option value="Mind">Mind's Eye</option>
                            <option value="Save">Save</option>
                            <option value="Swift">Swift</option>
                            <option value="Smite">Smite</option>
                            <option value="Tenacity">Tenacity</option>
                            <option value="Invincible">Invincible</option>
                            <option value="Bloodsuck">Bloodsucker</option>
                            <option value="Tough">Tough</option>
                            <option value="Reflect">Reflection</option>
                        </select><br>
                        <div id="buffCastBloodspiritActive" style="display: none;">
                            <span class="sub-title"><b>Spirit buff is active:</b></span>
                            <input type="checkbox" id="buffBloodSpirit" onchange="calcCrossFireValues()"><br>
                        </div>
                        <div id="buffCastComboCount" style="display: none;">
                            <span class="sub-title"><b>Buff cast's Combo count:</b></span>
                            <input type="number" id="comboCount1" min="2" max="10" value="2" style="width: 3em"
                                onchange="calcCrossFireValues()">
                            <span class="sub-title">(nth skill in the combo)</span><br>
                        </div>
                        <div id="buffCastConsCount" style="display: none;">
                            <span class="sub-title"><b>Buff cast's Consecutive Tag count:</b></span>
                            <input type="number" id="consCount1" min="1" max="9" value="1" style="width: 2em"
                                onchange="calcCrossFireValues()">
                            <span class="sub-title">(nth Consecutive Tag in the combo)</span><br>
                        </div>
                        <div id="buffCastSmiteLast" style="display: none;">
                            <span class="sub-title"><b>Last skill of combo:</b></span>
                            <input type="checkbox" id="buffSmiteLast" onchange="calcCrossFireValues()"><br>
                        </div>
                        <div id="buffCastTenacityCost" style="display: none;">
                            <span class="sub-title"><b>Remaining MP before Buff cast:</b></span>
                            <select id="tenaRemainingMP" onchange="calcCrossFireValues()">
                                <option value="4" selected="">400 or more</option>
                                <option value="3">300 - 399</option>
                                <option value="2">200 - 299</option>
                                <option value="1">100 - 199</option>
                                <option value="0">Less than 100</option>
                            </select><br>
                        </div>
                        <span class="sub-title"><b>Cross Fire buff is active:</b></span>
                        <input type="checkbox" id="crossFireBuffActive" onchange="calcCrossFireValues()"><br>
                        <div id="crossFireAttackInputs" style="display: none;">
                            <span class="sub-title"><b>Attack cast's Combo Tag:</b></span>
                            <select id="crossFireAttackComboTag" onchange="calcCrossFireValues()">
                                <option value="None" selected="">None</option>
                                <option value="Cons">Consecutive</option>
                                <option value="Mind">Mind's Eye</option>
                                <option value="Save">Save</option>
                                <option value="Swift">Swift</option>
                                <option value="Smite">Smite</option>
                                <option value="Tenacity">Tenacity</option>
                                <option value="Invincible">Invincible</option>
                                <option value="Bloodsuck">Bloodsucker</option>
                                <option value="Tough">Tough</option>
                                <option value="Reflect">Reflection</option>
                            </select><br>
                            <div id="attackCastComboCount" style="display: none;">
                                <span class="sub-title"><b>Attack cast's Combo count:</b></span>
                                <input type="number" id="comboCount2" min="2" max="10" value="2" style="width: 3em"
                                    onchange="calcCrossFireValues()">
                                <span class="sub-title">(nth skill in the combo)</span><br>
                            </div>
                            <div id="attackCastConsCount" style="display: none;">
                                <span class="sub-title"><b>Attack cast's Consecutive Tag count:</b></span>
                                <input type="number" id="consCount2" min="1" max="9" value="1" style="width: 2em"
                                    onchange="calcCrossFireValues()">
                                <span class="sub-title">(nth Consecutive Tag in the combo)</span><br>
                            </div>
                            <div id="attackCastBloodspiritActive" style="display: none;">
                                <span class="sub-title"><b>Spirit buff is active:</b></span>
                                <input type="checkbox" id="attackBloodSpirit" onchange="calcCrossFireValues()"><br>
                            </div>
                            <span class="sub-title"><b>Number of charges:</b></span>
                            <input type="number" id="crossFireBuffCharges" min="0" max="5" value="0" style="width: 3em"
                                onchange="calcCrossFireValues()"><br>
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="crossFireDexValue"
                                onchange="calcCrossFireValues()" style="width: 50px;"><br>
                            <span class="sub-title"><b>Decoy Shot is active:</b></span>
                            <input type="checkbox" id="crossFireDecoy" onchange="calcCrossFireValues()"><br>
                        </div>
                        <br>
                        <span id="crossFireValues">This skill can be used without requiring a target, and will
                            <b>activate the buff cast</b>:<li><b>MP Cost:</b> 400</li>
                            <li><b>Maximum Cast Range:</b> Unlimited</li>
                            <li>Grant <b>Cross Fire buff</b> that can be charged to a maximum of 5 charges</li>
                            <br><b>Extra info:</b>
                            <li>A note for this skill's info: Combo Tag effects in this section are under the assumption
                                that there are no other effects applied to this skill; certain effects can have
                                different interaction with the Combo tag effects applied to the casts</li>
                            <li><b>Zero Stance registlet</b> effect will only be applied if the attack cast is used out
                                of combo; using the buff cast out of combo will not activate the registlet's effect<ul>
                                    <li>&nbsp;&nbsp;&nbsp;- If the buff cast has a Combo tag, <b>Zero Stance effect will
                                            be overwritten if said Combo tag has a damage modifier effect</b>; it will
                                        work normally otherwise</li>
                                </ul>
                            </li>
                            <li>The buff cast is <b>unaffected by any motion speed modifier except Swift Combo tag</b>
                            </li>
                        </span>

                        <script>
                            function cFBuffCheck(cFBuff, crossFireAttackSection) {
                                if (cFBuff) { crossFireAttackSection.style = "display: block" }
                                else { crossFireAttackSection.style = "display: none" }
                            }

                            function comboTagCheck(buffTag, attackTag, comboCountBuffSection, consCountBuffSection, comboCountAttackSection, consCountAttackSection, smiteLastSection, tenacityCostSection, buffBloodSpiritSection, attackBloodSpiritSection, bloodspirit, cFBuff) {
                                if (((buffTag == "Cons" || buffTag == "Invincible") && !cFBuff) || (buffTag == "Bloodsuck" && bloodspirit)) { comboCountBuffSection.style = "display: block" }
                                else { comboCountBuffSection.style = "display: none" }
                                if (buffTag == "Cons" && cFBuff) { consCountBuffSection.style = "display: block" }
                                else { consCountBuffSection.style = "display: none" }
                                if (buffTag == "Smite" && !cFBuff) { smiteLastSection.style = "display: block" }
                                else { smiteLastSection.style = "display: none" }
                                if (buffTag == "Tenacity") { tenacityCostSection.style = "display: block" }
                                else { tenacityCostSection.style = "display: none" }
                                if (buffTag == "Bloodsuck") { buffBloodSpiritSection.style = "display: block" }
                                else { buffBloodSpiritSection.style = "display: none" }
                                if ((attackTag == "Mind" || attackTag == "Invincible" || attackTag == "Bloodsuck") && attackTag != buffTag) { comboCountAttackSection.style = "display: block" }
                                else { comboCountAttackSection.style = "display: none" }
                                if (attackTag == "Cons" && buffTag != "Cons") { consCountAttackSection.style = "display: block" }
                                else { consCountAttackSection.style = "display: none" }
                                if (attackTag == "Bloodsuck" && buffTag != "Bloodsuck") { attackBloodSpiritSection.style = "display: block" }
                                else { attackBloodSpiritSection.style = "display: none" }
                            }

                            function changeMaxCharge(level, chargeInput) {
                                //The maximum amount of charges changes per level, so we need to adjust the input based on the level
                                var maxCharge = Math.floor(2 + 0.3 * level)
                                //Lowering the current value in case it exceeds the newest maximum
                                if (chargeInput.value > maxCharge) { chargeInput.value = maxCharge }
                                chargeInput.max = maxCharge
                            }

                            function calcBuffCastMpCost(buffTag, comboCountBuff, smiteLast, result) {
                                var mpCost = 400
                                var ccBuff = comboCountBuff.value
                                if (buffTag == "Cons") {
                                    mpCost -= 100 * (ccBuff - 1)
                                    if (mpCost < 0) { mpCost = 0 }
                                }
                                else if (buffTag == "Smite" && smiteLast) { mpCost *= 2 }
                                if (buffTag == "Save") { result.innerHTML += `<li><b>MP Cost:</b> 0; 400 MP is saved for the next skill(s) in combo if there is any</li>` }
                                else { result.innerHTML += `<li><b>MP Cost:</b> ${mpCost}</li>` }
                            }

                            function addBuffCastTagInfo(buffTag, comboCountBuff, remainingMP, bloodspirit, result) {
                                var HTML = ``
                                var ccBuff = comboCountBuff.value
                                var invChance = 20 * (ccBuff - 1)
                                var tenaMPCost = remainingMP * 100
                                var tenaHPCost = (4 - remainingMP) * 10
                                if (invChance > 100) { invChance = 100 }
                                var hpCost = 10 - (ccBuff * 1)
                                if (buffTag == "Swift") { HTML += `<li><b>Motion Speed</b> of the cast is set to 150%</li>` }
                                else if (buffTag == "Tenacity" && remainingMP < 4) {
                                    HTML += `<li>`
                                    if (remainingMP > 0) { HTML += `<b>${tenaMPCost} MP</b> and ` }
                                    HTML += `<b>${tenaHPCost}% of MaxHP</b> will be consumed instead of the usual MP Cost</li>`
                                }
                                else if (buffTag == "Invincible") { HTML += `<li>${invChance}% chance to gain [Invincible] until skill animation ends</li>` }
                                else if (buffTag == "Bloodsuck") {
                                    if (bloodspirit && hpCost > 0) { HTML += `<li><b>${hpCost}% of MaxHP</b> is consumed due to <b>Spirit</b> effect</li>` }
                                    else if (!bloodspirit) { HTML += `<li>Grant <b>Spirit buff</b> for 10 seconds</li>` }
                                }
                                else if (buffTag == "Tough") { HTML += `<li>All damage received during skill animation are reduced by 50%</li>` }
                                else if (buffTag == "Reflect") { HTML += `<li>Counterattack <b>once</b> upon getting hit during skill animation</li>` }
                                result.innerHTML += HTML
                            }

                            function addBuffCastSubSection(buffTag, comboCountBuff, smiteLast, remainingMP, bloodspirit, cFBuff, chargeInput, result) {
                                var maxCharge = chargeInput.max
                                if (!cFBuff) {
                                    result.innerHTML += `This skill can be used without requiring a target, and will <b>activate the buff cast</b>:`
                                    calcBuffCastMpCost(buffTag, comboCountBuff, smiteLast, result)
                                    result.innerHTML += `<li><b>Maximum Cast Range:</b> Unlimited</li>
                        <li>Grant <b>Cross Fire buff</b> that can be charged to a maximum of ${maxCharge} charges</li>`
                                    addBuffCastTagInfo(buffTag, comboCountBuff, remainingMP, bloodspirit, result)
                                }
                            }

                            function calcCrossFireMainBullet(level, weapon, chargeInput, dexValue) {
                                var charges = chargeInput.value
                                var constant = 300 + 10 * level
                                var multiplier = (4 + (0.5 * level)) * charges
                                if (weapon == "Bow") { multiplier += ((dexValue / 500) + 0.5) * charges }
                                constant = Math.floor(constant)
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                var HTML = ""
                                if (charges > 0) {
                                    HTML += `<br><li><b>Skill Constant (Main Bullet): </b> ${constant}</li>
                        <li><b>Skill Multiplier (Main Bullet): </b> ${multiplier}</li>`
                                }
                                return HTML
                            }

                            function calcCrossFireAddBullet(level, weapon, chargeInput, dexValue) {
                                var charges = chargeInput.value
                                var constantAdd = 300 + 10 * level
                                var multiplierAdd = 2
                                var pierceAdd = Math.floor(dexValue / 10)
                                if (weapon == "BG") { multiplierAdd += 1 }
                                constantAdd = Math.floor(constantAdd)
                                var HTML = ``
                                if (charges == 2) {
                                    HTML += `<li><b>Skill Constant (Additional Bullet): </b> ${constantAdd}</li>
                        <li><b>Skill Multiplier (Additional Bullet): </b> ${multiplierAdd}</li>`
                                    if (weapon == "BG") { HTML += `<li><b>Physical Pierce of Additional Bullet</b> +${pierceAdd}%</li>` }
                                }
                                else if (charges > 2) {
                                    HTML += `<li><b>Skill Constant (Additional Bullets): </b> ${constantAdd}; constant for each hit</li>
                        <li><b>Skill Multiplier (Additional Bullets): </b> ${multiplierAdd}; multiplier for each hit</li>`
                                    if (weapon == "BG") { HTML += `<li><b>Physical Pierce of Additional Bullets</b> +${pierceAdd}%</li>` }
                                }
                                return HTML
                            }

                            function calcCrossFireDecoyBullet(level, chargeInput, decoy) {
                                var charges = chargeInput.value
                                var constantDecoy = 60 + 2 * level
                                var multiplierDecoy = (0.8 + (0.1 * level)) * charges
                                constantDecoy = Math.floor(constantDecoy)
                                multiplierDecoy = Math.round(multiplierDecoy * 100) / 100
                                var HTML = ``
                                if (decoy && charges > 0) {
                                    HTML += `<li><b>Skill Constant (Decoy Bullet): </b> ${constantDecoy}</li>
                        <li><b>Skill Multiplier (Decoy Bullet): </b> ${multiplierDecoy}</li>`
                                }
                                return HTML
                            }

                            function addCrossFireHitCountInfo(chargeInput, decoy) {
                                var charges = chargeInput.value
                                var HTML = ``
                                if (charges > 0) {
                                    HTML += `<li><b>Hit Count:</b> 1 hit`
                                    if (decoy || charges > 1) { HTML += ` for each bullet; damage calculation is done for each hit` }
                                    HTML += `</li>`
                                }
                                return HTML
                            }

                            function calcBuffCastChargeTime(chargeInput) {
                                //Getting the current number of charges as well as the maximum charges
                                var charges = chargeInput.value
                                var maxCharge = chargeInput.max
                                //Calculating the charge time of buff and writing the results
                                var HTML = `<li>`
                                if (charges == maxCharge) { HTML += `The buff is at the <b>maximum amount of charges</b>` }
                                else {
                                    var chargeTime = 1 + charges * charges;
                                    HTML += `<b>Time for next charge:</b> ${chargeTime} second`
                                    if (chargeTime != 1) { HTML += `s` }
                                    if (charges > 0) { HTML += ` <b>after gaining the previous charge</b>` }
                                    else { HTML += ` <b>after gaining the buff</b>` }
                                }
                                HTML += `</li>`
                                return HTML
                            }

                            function addBuffChargeHitEffect(chargeInput) {
                                //Getting the current number of charges as well as the maximum charges
                                var charges = chargeInput.value
                                var maxCharge = chargeInput.max
                                //Adding effect on buff when taking damage if necessary
                                var HTML = ``
                                if (charges != maxCharge) {
                                    HTML += `<li><b>Getting hit</b> during this stage will `
                                    if (charges == 0) { HTML += `<b>remove the buff</b>` }
                                    else { HTML += `<b>make the buff stops charging</b>` }
                                    HTML += `</li>`
                                }
                                return HTML
                            }

                            function addCrossFireBuffDuration(chargeInput) {
                                //Adding the buff duration
                                var charges = chargeInput.value
                                var HTML = `<li><b>Buff Duration:</b> until <b>Cross Fire</b> is cast again (attack cast)`
                                if (charges == 0) { HTML += ` OR until you get hit` }
                                HTML += `</li>`
                                return HTML
                            }

                            function addAttackCastUseInfo(chargeInput, decoy) {
                                //Getting the current number of charges
                                var charges = chargeInput.value
                                //Adding the no charge info if necessary
                                var HTML = `<li>Using the attack cast during this stage will`
                                if (charges == 0) { HTML += ` <b>remove the buff and do nothing</b>, and the caster will look confused` }
                                else {
                                    HTML += ` <b>consume the buff</b> to <b>launch 1 Main Bullet`
                                    if (charges > 1) {
                                        var addHits = charges - 1
                                        HTML += ` and ${addHits} Additional Bullet`
                                        if (addHits > 1) { HTML += `s` }
                                    }
                                    HTML += `</b> from the caster`
                                    if (decoy) { HTML += `, and <b>1 Decoy Bullet</b> from the decoy` }
                                }
                                HTML += `</li>`
                                return HTML
                            }

                            function addAttackCastComboTagInfo(buffTag, buffTagName, attackTag, attackTagName, comboCountAttack, bloodspirit) {
                                var ccAttack = comboCountAttack.value
                                var absoAcc = 10 * ccAttack
                                var invChance = 20 * (ccAttack - 1)
                                if (invChance > 100) { invChance = 100 }
                                var vamp = 10 + (ccAttack * 1)
                                var HTML = ``
                                if (buffTag != "None" && attackTag != "None" && buffTag == attackTag) { HTML += `<li>&nbsp&nbsp- Due to the <b>buff cast's ${buffTagName} Combo Tag</b>, the <b>attack cast's ${attackTagName} Combo Tag is negated</b></li>` }
                                else if (attackTag != "None" && buffTag != attackTag) {
                                    if (attackTag == "Mind") { HTML += `<li>&nbsp&nbsp- This skill will <b>never miss</b> (at least [Graze] is guaranteed), but can be [Evaded]; in addition, this skill will gain an <b>Absolute Hit chance</b> of ${absoAcc}%</li>` }
                                    else if (attackTag == "Swift") { HTML += `<li>&nbsp&nbsp- <b>Motion Speed</b> of the cast is set to 150%</li>` }
                                    else if (attackTag == "Invincible") { HTML += `<li>&nbsp&nbsp- ${invChance}% chance to gain [Invincible] until skill animation ends</li>` }
                                    else if (attackTag == "Bloodsuck" && !bloodspirit) { HTML += `<li>&nbsp&nbsp- Heal yourself for ${vamp}% of the damage dealt by this skill, and grant <b>Spirit buff</b> for 10 seconds</li>` }
                                    else if (attackTag == "Tough") { HTML += `<li>&nbsp&nbsp- All damage received during skill animation are reduced by 50%</li>` }
                                    else if (attackTag == "Reflect") { HTML += `<li>&nbsp&nbsp- Counterattack <b>once</b> upon getting hit during skill animation</li>` }
                                }
                                return HTML
                            }

                            function addAttackCastComboMultiplierInfo(buffTag, comboCountBuff, consCountBuff, remainingMP, attackTag, comboCountAttack, consCountAttack, bloodspirit) {
                                var HTML = ``
                                var ccBuff = comboCountBuff.value
                                var consBuff = consCountBuff.value
                                var ccAttack = comboCountAttack.value
                                var consAttack = consCountAttack.value
                                var hpCost = 10 - (ccAttack * 1)
                                var damageMod = 100
                                if (buffTag == "Cons") { damageMod -= consBuff * 10 }
                                if (buffTag == "Save") { damageMod -= 80 }
                                if (buffTag == "Smite") { damageMod += 50 }
                                if (buffTag == "Tenacity") { damageMod -= (4 - remainingMP) * 10 }
                                if (buffTag == "Bloodsuck" && bloodspirit) { damageMod += 10 + (ccBuff * 1) }
                                if (attackTag != buffTag) {
                                    if (attackTag == "Cons") { damageMod -= consAttack * 10 }
                                    if (attackTag == "Save") { damageMod -= 80 }
                                    if (attackTag == "Smite") { damageMod += 50 }
                                    if (bloodspirit && attackTag == "Bloodsuck") { damageMod += 10 + (ccAttack * 1) }
                                }
                                if (damageMod < 10) { damageMod = 10 }
                                if (damageMod > 150) { damageMod = 150 }
                                if (damageMod != 100) {
                                    HTML += `<li>&nbsp&nbsp- <b>Damage dealt by this skill</b> is`
                                    if (damageMod > 100) { HTML += ` increased to` }
                                    else { HTML += ` decreased to` }
                                    HTML += ` ${damageMod}%</li>`
                                }
                                if (bloodspirit && hpCost > 0 && attackTag == "Bloodsuck" && buffTag != attackTag) { HTML += `<li>&nbsp&nbsp- <b>${hpCost}% of MaxHP</b> is consumed due to <b>Spirit</b> effect</li>` }
                                return HTML
                            }

                            function calcAttackCastHitRange(weapon, chargeInput, decoy) {
                                //Getting weapon info as well as the number of charges from selector
                                var charges = chargeInput.value
                                //Calculating the hit range
                                var width = 1
                                if (weapon == "Bow") { width += 1 }
                                //Writing the results if necessary
                                var HTML = ``
                                if (charges > 0) {
                                    if (!decoy && charges == 1) { HTML += `<li><b>Hit Range (Main Bullet):</b> Length of 100m and radius of ${width}m; from the <b>caster</b> towards the <b>main target</b></li>` }
                                    else {
                                        HTML += `<li><b>Hit Range:</b>
                            <ul><li>&nbsp&nbsp- <b>Main Bullet:</b> Length of 100m and radius of ${width}m; from the <b>caster</b> towards the <b>main target</b></li>`
                                        if (charges > 1) {
                                            HTML += `<li>&nbsp&nbsp- <b>Additional Bullet`
                                            if (charges > 2) { HTML += `s` }
                                            HTML += `:</b> <b>main target</b> only</li>`
                                        }
                                        if (decoy) { HTML += `<li>&nbsp&nbsp- <b>Decoy Bullet:</b> Length of 100m and radius of 1m; from the <b>decoy's position</b> towards the <b>main target</b></li>` }
                                        HTML += `</ul></li>`
                                    }
                                }
                                return HTML
                            }

                            function addAttackCastPlacedInfo(chargeInput, decoy) {
                                //Getting the current number of charges
                                var charges = chargeInput.value;
                                //Adding the attack cast's placed info if necessary
                                var HTML = ``
                                return HTML
                            }

                            function addAttackCastSubSection(cFBuff, level, weapon, chargeInput, dexValue, buffTag, buffTagName, comboCountBuff, consCountBuff, remainingMP, attackTag, attackTagName, comboCountAttack, consCountAttack, bloodspirit, decoy, result) {
                                //Initiating attack cast sub section
                                var charges = chargeInput.value
                                var HTML = `This skill requires a target to use, and will <b>activate the attack cast</b>:
                    <li><b>MP Cost:</b> 0</li>
                    <li><b>Maximum Cast Range:</b> 12m</li>
                    <li>The attack cast <b>cannot be used as the first skill of a combo</b></li>`
                                //Adding attack cast elements
                                HTML += calcCrossFireMainBullet(level, weapon, chargeInput, dexValue)
                                HTML += calcCrossFireAddBullet(level, weapon, chargeInput, dexValue)
                                HTML += calcCrossFireDecoyBullet(level, chargeInput, decoy)
                                HTML += addCrossFireHitCountInfo(chargeInput, decoy)
                                HTML += `<br>`
                                HTML += calcBuffCastChargeTime(chargeInput)
                                HTML += addBuffChargeHitEffect(chargeInput)
                                HTML += addAttackCastUseInfo(chargeInput, decoy)
                                HTML += calcAttackCastHitRange(weapon, chargeInput, decoy)
                                var comboTagInfo = addAttackCastComboTagInfo(buffTag, buffTagName, attackTag, attackTagName, comboCountAttack, bloodspirit)
                                var comboMultInfo = addAttackCastComboMultiplierInfo(buffTag, comboCountBuff, consCountBuff, remainingMP, attackTag, comboCountAttack, consCountAttack, bloodspirit)
                                if (charges > 0 && (comboTagInfo != "" || comboMultInfo != "")) {
                                    HTML += `<li><b>Attack cast Combo Tag modifier:</b><ul>`
                                    HTML += comboTagInfo
                                    HTML += comboMultInfo
                                    HTML += `</ul></li>`
                                }
                                HTML += addCrossFireBuffDuration(chargeInput)
                                HTML += addAttackCastPlacedInfo(chargeInput, decoy)
                                //Writing the sub section
                                if (cFBuff) { result.innerHTML += HTML }
                            }

                            function addCrossFireExtraInfo(cFBuff, chargeInput, decoy, result) {
                                var charges = chargeInput.value
                                var HTML = `<br><b>Extra info:</b>
                    <li>A note for this skill's info: Combo Tag effects in this section are under the assumption that there are no other effects applied to this skill; certain effects can have different interaction with the Combo tag effects applied to the casts</li>
                    <li><b>Zero Stance registlet</b> effect will only be applied if the attack cast is used out of combo; using the buff cast out of combo will not activate the registlet's effect<ul>
                    <li>&nbsp&nbsp&nbsp- If the buff cast has a Combo tag, <b>Zero Stance effect will be overwritten if said Combo tag has a damage modifier effect</b>; it will work normally otherwise</li>
                    </ul></li>`
                                if (cFBuff && charges > 0) {
                                    HTML += `<li>The <b>Main Bullet</b>`
                                    if (decoy) { HTML += ` and <b>Decoy Bullet</b> are` }
                                    else { HTML += ` is` }
                                    HTML += ` affected by <b>Whack</b>, <b>Long Range passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats`
                                    if (charges > 1) {
                                        HTML += `; the <b>Additional Bullet`
                                        if (charges > 2) { HTML += `s</b> are` }
                                        else { HTML += `</b> is` }
                                        HTML += ` only affected by <b>Whack</b>`
                                    }
                                }
                                else if (!cFBuff) { HTML += `<li>The buff cast is <b>unaffected by any motion speed modifier except Swift Combo tag</b></li>` }
                                result.innerHTML += HTML
                            }

                            function calcCrossFireValues() {
                                var weaponSelector = document.getElementById("crossFireWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var levelSelector = document.getElementById("crossFireLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var tenaCostSelector = document.getElementById("tenaRemainingMP")
                                var remainingMP = tenaCostSelector[tenaCostSelector.selectedIndex].value
                                var buffTagSelector = document.getElementById("crossFireBuffComboTag")
                                var buffTag = buffTagSelector[buffTagSelector.selectedIndex].value
                                var buffTagName = buffTagSelector[buffTagSelector.selectedIndex].text
                                var crossFireAttackSection = document.getElementById("crossFireAttackInputs")
                                var comboCountBuffSection = document.getElementById("buffCastComboCount")
                                var consCountBuffSection = document.getElementById("buffCastConsCount")
                                var smiteLastSection = document.getElementById("buffCastSmiteLast")
                                var buffBloodSpiritSection = document.getElementById("buffCastBloodspiritActive")
                                var attackBloodSpiritSection = document.getElementById("attackCastBloodspiritActive")
                                var tenacityCostSection = document.getElementById("buffCastTenacityCost")
                                var smiteLast = document.getElementById("buffSmiteLast").checked
                                var comboCountAttackSection = document.getElementById("attackCastComboCount")
                                var consCountAttackSection = document.getElementById("attackCastConsCount")
                                var cFBuff = document.getElementById("crossFireBuffActive").checked
                                var chargeInput = document.getElementById("crossFireBuffCharges")
                                var dexValue = document.getElementById("crossFireDexValue").value
                                var comboCountBuff = document.getElementById("comboCount1")
                                var comboCountAttack = document.getElementById("comboCount2")
                                var consCountBuff = document.getElementById("consCount1")
                                var consCountAttack = document.getElementById("consCount2")
                                var attackTagSelector = document.getElementById("crossFireAttackComboTag")
                                var attackTag = attackTagSelector[attackTagSelector.selectedIndex].value
                                var attackTagName = attackTagSelector[attackTagSelector.selectedIndex].text
                                var decoy = document.getElementById("crossFireDecoy").checked
                                var bloodspirit
                                if (buffTag == "Bloodsuck") { bloodspirit = document.getElementById("buffBloodSpirit").checked; }
                                else if (attackTag == "Bloodsuck") { bloodspirit = document.getElementById("attackBloodSpirit").checked }
                                var result = document.getElementById("crossFireValues")
                                result.innerHTML = ``
                                cFBuffCheck(cFBuff, crossFireAttackSection)
                                comboTagCheck(buffTag, attackTag, comboCountBuffSection, consCountBuffSection, comboCountAttackSection, consCountAttackSection, smiteLastSection, tenacityCostSection, buffBloodSpiritSection, attackBloodSpiritSection, bloodspirit, cFBuff)
                                changeMaxCharge(level, chargeInput)
                                addBuffCastSubSection(buffTag, comboCountBuff, smiteLast, remainingMP, bloodspirit, cFBuff, chargeInput, result)
                                addAttackCastSubSection(cFBuff, level, weapon, chargeInput, dexValue, buffTag, buffTagName, comboCountBuff, consCountBuff, remainingMP, attackTag, attackTagName, comboCountAttack, consCountAttack, bloodspirit, decoy, result)
                                addCrossFireExtraInfo(cFBuff, chargeInput, decoy, result)
                            }

                            calcCrossFireValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/vanquisher.png" width="34" height="34">
                                Vanquisher
                            </p>
                            <p class="medium">
                                Skill Vanquisher Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>Sub Ktn: 600; Other: 1200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>8</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Delivers a powerful blow to a small area. The power gets dispersed if there are multiple
                                targets within the area.<br>
                                If you have Ignite debuff, activating the skill will remove it, prevent the power
                                dispersion and guarantee hits.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/katana.png"></p>
                                <p>Katana</p>
                            </div>
                            <p>Loses the power increase based on DEX.<br>
                                MP Cost -600<br>
                                Skill Power -600</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Removes the debuff from running out of bolts and doubles the power.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/md.png"></p>
                                <p>Magic Device</p>
                            </div>
                            <p>Loses the power increase based on DEX.<br>
                                Power increases depending on INT.<br>
                                Skill Power -600</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="vanquisherWeapon" onchange="calcVanquisherValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                        </select><br>
                        <div id="vanquisherBowSubInput" style="display: block;">
                            <span class="sub-title"><b>Sub-Weapon:</b></span>
                            <select id="vanquisherBowSubWeapon" onchange="calcVanquisherValues()">
                                <option value="ktn">Katana</option>
                                <option value="other" selected="">Other</option>
                            </select>
                        </div>
                        <div id="vanquisherBowgunSubInput" style="display: none;">
                            <span class="sub-title"><b>Sub-Weapon:</b></span>
                            <select id="vanquisherBGSubWeapon" onchange="calcVanquisherValues()">
                                <option value="md">Magic Device</option>
                                <option value="other" selected="">Other</option>
                            </select>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="vanquisherSkillLevel" onchange="calcVanquisherValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <div id="vanquisherDexInput" style="display: block;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="vanquisherDexValue"
                                onchange="calcVanquisherValues()" style="width: 50px;">
                        </div>
                        <div id="vanquisherIntInput" style="display: none;">
                            <span class="sub-title"> <b>Base INT:</b></span>
                            <input type="number" value="247" min="1" max="510" id="vanquisherIntValue"
                                onchange="calcVanquisherValues()" style="width: 50px;">
                        </div>
                        <div id="vanquisherBowgunTwinStormInput" style="display: none;">
                            <span class="sub-title"><b>Twin Storm buff is on cooldown:</b></span>
                            <input type="checkbox" id="vanquisherTwin" onchange="calcVanquisherValues()">
                        </div>
                        <span class="sub-title"><b>Caster is afflicted with [Ignite]:</b></span>
                        <input type="checkbox" id="vanquisherIgnite" onchange="calcVanquisherValues()"><br>
                        <br>
                        <span id="vanquisherValues">
                            <li><b>MP Cost:</b> 1200</li>
                            <li><b>Skill Constant: </b> 1200</li>
                            <li><b>Skill Multiplier:</b> 17.55</li><br>
                            <li><b>Hit Range:</b> Length of 8m and radius of 0.5m; from the <b>caster</b> toward the
                                <b>main target</b>
                            </li>
                            <li>If this skill hits multiple enemies, the total damage will be <b>divided evenly</b>
                                between said enemies, but critical &amp; proration calculations are done separately for
                                each enemy</li>
                        </span>

                        <script>
                            function vanquisherMainWeaponCheck(weapon, bowSubSection, bgSubSection) {
                                if (weapon == "Bow") {
                                    bowSubSection.style = "display: block"
                                    bgSubSection.style = "display: none"
                                }
                                else {
                                    bowSubSection.style = "display: none"
                                    bgSubSection.style = "display: block"
                                }
                            }

                            function bowgunTwinStormCheck(weapon, bowgunTSSection) {
                                if (weapon == "BG") { bowgunTSSection.style = "display: block" }
                                else { bowgunTSSection.style = "display: none" }
                            }

                            function weaponStatScaleCheck(weapon, subBow, subBG, dexSection, intSection) {
                                if (weapon == "BG" && subBG == "md") { intSection.style = "display: block" }
                                else { intSection.style = "display: none" }
                                if ((weapon == "Bow" && subBow == "ktn") || (weapon == "BG" && subBG == "md")) { dexSection.style = "display: none" }
                                else { dexSection.style = "display: block" }
                            }

                            function calcVanquisherMpCost(weapon, subBow, result) {
                                var mpCost = 1200
                                if (weapon == "Bow" && subBow == "ktn") { mpCost -= 600 }
                                result.innerHTML = `<li><b>MP Cost:</b> ${mpCost}</li>`
                            }

                            function calcVanquisherConstant(weapon, subBow, subBG, result) {
                                var constant = 1200
                                if ((weapon == "Bow" && subBow == "ktn") || (weapon == "BG" && subBG == "md")) { constant -= 600 }
                                result.innerHTML += `<li><b>Skill Constant: </b> ${constant}</li>`
                            }

                            function calcVanquisherMultiplier(level, weapon, dexValue, intValue, subBow, subBG, twinstorm, result) {
                                var multiplier = 5 + 1 * level
                                if (weapon == "BG" && subBG == "md") { multiplier += intValue / 200 }
                                else if (weapon == "BG" || subBow != "ktn") { multiplier += dexValue / 100 }
                                if (weapon == "BG" && twinstorm) { multiplier *= 2 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li>`
                            }

                            function addVanquisherHitRange(result) {
                                result.innerHTML += `<br><li><b>Hit Range:</b> Length of 8m and radius of 0.5m; from the <b>caster</b> toward the <b>main target</b></li>`
                            }

                            function addVanquisherSkillInfo(ignite, result) {
                                if (ignite) {
                                    result.innerHTML += `<li>Removes [Ignite] from the <b>caster</b> upon cast</li>
                    <li>This skill gains the <b>Perfect Aim</b> attribute: it cannot [Miss] or [Graze], but can be [Evaded]</li>`}
                                else { result.innerHTML += `<li>If this skill hits multiple enemies, the total damage will be <b>divided evenly</b> between said enemies, but critical & proration calculations are done separately for each enemy</li>` }
                            }

                            function calcVanquisherTwinStormEffect(weapon, twinstorm, result) {
                                if (weapon == "BG" && twinstorm) { result.innerHTML += `<li>Removes the remaining cooldown of <b>Twin Storm buff</b> upon cast</li>` }
                            }

                            function calcVanquisherValues() {
                                var weaponSelector = document.getElementById("vanquisherWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var bowSubSection = document.getElementById("vanquisherBowSubInput")
                                var bgSubSection = document.getElementById("vanquisherBowgunSubInput")
                                var subBowSelector = document.getElementById("vanquisherBowSubWeapon")
                                var subBow = subBowSelector[subBowSelector.selectedIndex].value
                                var subBGSelector = document.getElementById("vanquisherBGSubWeapon")
                                var subBG = subBGSelector[subBGSelector.selectedIndex].value
                                var levelSelector = document.getElementById("vanquisherSkillLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var dexValue = document.getElementById("vanquisherDexValue").value
                                var intValue = document.getElementById("vanquisherIntValue").value
                                var bowgunTSSection = document.getElementById("vanquisherBowgunTwinStormInput")
                                var dexSection = document.getElementById("vanquisherDexInput")
                                var intSection = document.getElementById("vanquisherIntInput")
                                var twinstorm = document.getElementById("vanquisherTwin").checked
                                var ignite = document.getElementById("vanquisherIgnite").checked
                                var result = document.getElementById("vanquisherValues")
                                vanquisherMainWeaponCheck(weapon, bowSubSection, bgSubSection)
                                bowgunTwinStormCheck(weapon, bowgunTSSection)
                                weaponStatScaleCheck(weapon, subBow, subBG, dexSection, intSection)
                                calcVanquisherMpCost(weapon, subBow, result)
                                calcVanquisherConstant(weapon, subBow, subBG, result)
                                calcVanquisherMultiplier(level, weapon, dexValue, intValue, subBow, subBG, twinstorm, result)
                                addVanquisherHitRange(result)
                                addVanquisherSkillInfo(ignite, result)
                                calcVanquisherTwinStormEffect(weapon, twinstorm, result)
                            }

                            calcVanquisherValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/twinstorm.png" width="34" height="34">
                                Twin Storm
                            </p>
                            <p class="medium">
                                Skill Twin Storm Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><br>Bowgun only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Prepares 2 bowguns to enhance normal attack. The attack is enhanced further if MP is
                                full.<br>
                                <font style="color:#009fff">After a certain number of normal attacks, they'll run out of
                                    bolts and normal attacks turn weaker for a certain period of time.</font><br>
                                Not usable while it is in effect.
                            </p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/md.png"></p>
                                <p>Magic Device</p>
                            </div>
                            <p>Enhances Attack MP Recovery further.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/dagger.png"></p>
                                <p>Dagger</p>
                            </div>
                            <p>The power increases when MP is not fully restored.<br>
                                Alleviates the decrease in the power of normal attacks when running out of bolts.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/arrow.png"></p>
                                <p>Arrow</p>
                            </div>
                            <p>The number of attacks is tripled.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Sub-Weapon:</b></span>
                        <select id="twinStormWeapon" onchange="calcTwinStormValues()">
                            <option value="md">Magic Device</option>
                            <option value="dagger">Dagger</option>
                            <option value="arrow">Arrow</option>
                            <option value="other" selected="">Other</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="twinStormSkillLevel" onchange="calcTwinStormValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <div id="twinStormDaggerInput" style="display: none;">
                            <span class="sub-title"> <b>Dagger's WeaponATK:</b></span>
                            <input type="number" value="1" min="1" id="twinStormWatk" onchange="calcTwinStormValues()"
                                style="width: 50px;"><br>
                        </div>
                        <span class="sub-title"><b>Caster's MP is full:</b></span>
                        <input type="checkbox" id="twinStormMpFull" onchange="calcTwinStormValues()"><br>
                        <div id="twinStormDexInput" style="display: none;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="twinStormDexValue"
                                onchange="calcTwinStormValues()" style="width: 50px;">
                        </div>
                        <br>
                        <span id="twinStormValues">
                            <li><b>Auto Attack Skill Constant </b> +0; total constant increase for all hits of 1 auto
                                attack</li>
                            <li><b>Auto Attack Skill Multiplier </b> +1; total multiplier increase for all hits of 1
                                auto attack</li>
                            <li><b>Auto Attack Hit Count:</b> 2 hits; damage calculation is done once then spread evenly
                                between the hits</li><br><b>Skill Effect:</b>
                            <li>Grants <b>Twin Storm buff</b> with 30 stacks to the <b>caster</b> upon cast; each auto
                                attack will consume 2 stacks upon hitting a target</li>
                            <li>Grants different effects depending on whether the buff <b>has any stack/is on cooldown
                                    or not</b></li><br><b>Active Buff Effects:</b> Grants the following effects while
                            the buff is <b>not on cooldown</b> (still has stacks):
                            <li><b>Increases your Movement Speed</b> by 1.5 times</li>
                            <li><b>Attack MP Recovery</b> of your <b>auto attacks</b> is <b>doubled</b></li>
                            <li>Enhances the caster's auto attacks and change their hit counts; enhances the auto
                                attacks further <b>if the caster's MP is full</b></li>
                            <li><b>Buff Duration:</b> Until all stacks are consumed, after which the <b>cooldown</b>
                                will start immediately</li><br><b>Cooldown Effects:</b> Grants the following effects
                            while the buff is <b>on cooldown</b>:
                            <li><b>Attack MP Recovery</b> of your <b>auto attacks</b> -50%, down to a minimum of 10
                                (estimate)</li>
                            <li><b>Auto Attack Skill Multiplier</b> -0.9</li>
                            <li>All <b>Active Buff Effects</b> bonuses above are disabled</li>
                            <li><b>Cooldown Duration:</b> 10 seconds OR until <b>Vanquisher</b> is used</li><br><b>Extra
                                info:</b>
                            <li>This skill <b>cannot be recast</b> if the buff is <b>either active or on cooldown</b>;
                                it also <b>cannot be cast if another attack motion modifier skill is active</b> (e.g.
                                <b>Dual Shields</b>,...)
                            </li>
                            <li>Despite each enhanced auto attack dealing 2 hits and comsuming 2 stacks, <b>it is still
                                    considered as a single auto attack</b>; hence, effects that trigger/apply per auto
                                attack (e.g. Hidden Arm, Additional Melee/Magic, proration,...) will still only be
                                triggered/applied once per enhanced auto attack</li>
                            <li>Twin Storm Stack <b>will still be consumed</b> even if your auto attack [Missed] or was
                                [Evaded], but will not be consumed if your auto attack failed due to the target's
                                [Invincible] state</li>
                            <li>The buff changes both the <b>auto attack motion</b> and <b>movement motion during battle
                                    state</b> while it is active and <b>not on cooldown</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- The duration of the <b>new auto attack motion</b> is
                                        noticeably shorter than that of the regular auto attack motions, effectively
                                        making your auto attacks "faster" while not actually giving any Motion Speed
                                        bonus</li>
                                    <li>&nbsp;&nbsp;&nbsp;- The <b>new movement motion</b> is purely aesthetic and has
                                        no other effect on gameplay</li>
                                </ul>
                            </li>
                            <li>The <b>Movement Speed modifier</b> effect only applies <b>during combat</b></li>
                            <li>Neither <b>Power Wave</b> nor <b>Shukuchi</b> will be disabled while the buff is active
                            </li>
                            <li>The decoy from <b>Decoy Shot</b> is <b>unaffected by any of this skill's effects</b>
                            </li>
                            <li>The last enhanced auto attack seems to be bugged: its damage is treated as if the buff
                                is still active, but its Attack MP Recovery is treated as if the buff is already on
                                cooldown</li>
                        </span>

                        <script>
                            function mpFullDexCheck(mpFull, dexSection) {
                                if (mpFull) { dexSection.style = "display: block" }
                                else { dexSection.style = "display: none" }
                            }

                            function daggerWatkCheck(weapon, daggerSection) {
                                if (weapon == "dagger") { daggerSection.style = "display: block" }
                                else { daggerSection.style = "display: none" }
                            }

                            function calcTwinStormAAConstant(level, weapon, mpFull, dexValue, result) {
                                var constant = 0
                                if (mpFull) { constant += Math.floor(dexValue / 2) }
                                result.innerHTML = `<li><b>Auto Attack Skill Constant </b> +${constant}; total constant increase for all hits of 1 auto attack</li>`
                            }

                            function calcTwinStormAAMultiplier(level, weapon, watk, mpFull, result) {
                                var multiplier = 1
                                if (weapon == "dagger") { multiplier += watk / 100 }
                                if (mpFull) { multiplier = 4 + 0.5 * level }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.0099) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Auto Attack Skill Multiplier </b> +${multiplier}; total multiplier increase for all hits of 1 auto attack</li>`
                            }

                            function calcTwinStormAAHitCount(result) {
                                result.innerHTML += `<li><b>Auto Attack Hit Count:</b> 2 hits; damage calculation is done once then spread evenly between the hits</li>`
                            }

                            function addTwinStormSkillEffect(level, weapon, result) {
                                var stack = 10 + 2 * level
                                if (weapon == "arrow") { stack *= 3 }
                                result.innerHTML += `<br><b>Skill Effect:</b>
                    <li>Grants <b>Twin Storm buff</b> with ${stack} stacks to the <b>caster</b> upon cast; each auto attack will consume 2 stacks upon hitting a target</li>
                    <li>Grants different effects depending on whether the buff <b>has any stack/is on cooldown or not</b></li>`
                            }

                            function calcTwinStormBuffEffect(level, weapon, result) {
                                var ampr = ``
                                if (weapon == "md") { ampr += `tripled` }
                                else { ampr += `doubled` }
                                result.innerHTML += `<br><b>Active Buff Effects:</b> Grants the following effects while the buff is <b>not on cooldown</b> (still has stacks):</li>
                    <li><b>Increases your Movement Speed</b> by 1.5 times</li>
                    <li><b>Attack MP Recovery</b> of your <b>auto attacks</b> is <b>${ampr}</b></li>
                    <li>Enhances the caster's auto attacks and change their hit counts; enhances the auto attacks further <b>if the caster's MP is full</b></li>
                    <li><b>Buff Duration:</b> Until all stacks are consumed, after which the <b>cooldown</b> will start immediately</li>`
                            }

                            function calcTwinStormCooldownEffect(level, weapon, result) {
                                var ampr = 100 - 5 * level
                                var aa = 1 - 0.01 * level
                                if (weapon == "dagger") { aa -= 0.03 * level }
                                aa = Math.round(aa * 100) / 100
                                var cooldown = 20 - 1 * level
                                result.innerHTML += `<br><b>Cooldown Effects:</b> Grants the following effects while the buff is <b>on cooldown</b>:</li>
                    <li><b>Attack MP Recovery</b> of your <b>auto attacks</b> -${ampr}%, down to a minimum of 10 (estimate)</li>
                    <li><b>Auto Attack Skill Multiplier</b> -${aa}</li>
                    <li>All <b>Active Buff Effects</b> bonuses above are disabled</li>
                    <li><b>Cooldown Duration:</b> ${cooldown} seconds OR until <b>Vanquisher</b> is used</li>`
                            }

                            function addTwinStormExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li>This skill <b>cannot be recast</b> if the buff is <b>either active or on cooldown</b>; it also <b>cannot be cast if another attack motion modifier skill is active</b> (e.g. <b>Dual Shields</b>,...)</li>
                    <li>Despite each enhanced auto attack dealing 2 hits and comsuming 2 stacks, <b>it is still considered as a single auto attack</b>; hence, effects that trigger/apply per auto attack (e.g. Hidden Arm, Additional Melee/Magic, proration,...) will still only be triggered/applied once per enhanced auto attack</li>
                    <li>Twin Storm Stack <b>will still be consumed</b> even if your auto attack [Missed] or was [Evaded], but will not be consumed if your auto attack failed due to the target's [Invincible] state</li>
                    <li>The buff changes both the <b>auto attack motion</b> and <b>movement motion during battle state</b> while it is active and <b>not on cooldown</b><ul>
                    <li>&nbsp&nbsp&nbsp- The duration of the <b>new auto attack motion</b> is noticeably shorter than that of the regular auto attack motions, effectively making your auto attacks "faster" while not actually giving any Motion Speed bonus</li>
                    <li>&nbsp&nbsp&nbsp- The <b>new movement motion</b> is purely aesthetic and has no other effect on gameplay</li>
                    </ul></li>
                    <li>The <b>Movement Speed modifier</b> effect only applies <b>during combat</b></li>
                    <li>Neither <b>Power Wave</b> nor <b>Shukuchi</b> will be disabled while the buff is active</li>
                    <li>The decoy from <b>Decoy Shot</b> is <b>unaffected by any of this skill's effects</b></li>
                    <li>The last enhanced auto attack seems to be bugged: its damage is treated as if the buff is still active, but its Attack MP Recovery is treated as if the buff is already on cooldown</li>`
                            }

                            function calcTwinStormValues() {
                                var weaponSelector = document.getElementById("twinStormWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var levelSelector = document.getElementById("twinStormSkillLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var daggerSection = document.getElementById("twinStormDaggerInput")
                                var watk = document.getElementById("twinStormWatk").value
                                var mpFull = document.getElementById("twinStormMpFull").checked
                                var dexSection = document.getElementById("twinStormDexInput")
                                var dexValue = document.getElementById("twinStormDexValue").value
                                var result = document.getElementById("twinStormValues")
                                mpFullDexCheck(mpFull, dexSection)
                                daggerWatkCheck(weapon, daggerSection)
                                calcTwinStormAAConstant(level, weapon, mpFull, dexValue, result)
                                calcTwinStormAAMultiplier(level, weapon, watk, mpFull, result)
                                calcTwinStormAAHitCount(result)
                                addTwinStormSkillEffect(level, weapon, result)
                                calcTwinStormBuffEffect(level, weapon, result)
                                calcTwinStormCooldownEffect(level, weapon, result)
                                addTwinStormExtraInfo(result)
                            }

                            calcTwinStormValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/retrogradeshot.png" width="34" height="34">
                                Retrograde Shot
                            </p>
                            <p class="medium">
                                Skill Retrograde Shot Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bow.png"><br>Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>300</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>A technique of shooting enemies while moving backward. Attacks in a linear range and the
                                target with the most HP that gets hit will be marked.<br>
                                <font style="color:#009fff">If you press the button for moving forward, the skill will
                                    activate without moving backward.</font>
                            </p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p><b style="color: gold">[Effects of the mark]</b><br>
                                Lowers the dodge rate of the marked target.<br>
                                <font style="color: gray">*The mark is visible to the party members too.</font><br><br>
                                Deals additional damage when the marked target is hit with a Shot Skill or Hunter Skill
                                and the power continues to increase up to a certain number of times.
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="retrogradeShotSkillLevel" onchange="calcRetrogradeShotValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total STR:</b></span>
                        <input type="number" value="247" min="1" id="retrogradeShotStrValue"
                            onchange="calcRetrogradeShotValues()" style="width: 4em; text-align: right;"><br>
                        <span class="sub-title"><b>Base DEX:</b></span>
                        <input type="number" value="255" min="1" max="510" id="retrogradeShotDexValue"
                            onchange="calcRetrogradeShotValues()" style="width: 4em; text-align: right;"><br>
                        <span class="sub-title"><b>Total Percentage DEX Bonus:</b></span>
                        <input type="number" value="0" id="retrogradeShotPercentDex"
                            onchange="calcRetrogradeShotValues()" style="width: 4em; text-align: right;"><br>
                        <span class="sub-title"><b>Total Flat DEX Bonus:</b></span>
                        <input type="number" value="0" id="retrogradeShotFlatDex" onchange="calcRetrogradeShotValues()"
                            style="width: 4em; text-align: right;"><br>
                        <span class="sub-title"><b>Shot/Hunter Skills Hit Count on Marked Target:</b></span>
                        <select id="retrogradeShotAddHitCount" onchange="calcRetrogradeShotValues()">
                            <option value="0" selected="">0</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5+</option>
                        </select><br>
                        <br>
                        <span id="retrogradeShotValues">
                            <li><b>Skill Constant (Main Hit):</b> 300</li>
                            <li><b>Skill Constant (Additional Damage):</b> 0; constant for each hit</li>
                            <li><b>Skill Multiplier (Main Hit):</b> 12.55</li>
                            <li><b>Skill Multiplier (Additional Damage):</b> 1</li>
                            <li><b>Physical Pierce</b> of <b>Additional Damage</b> +50%</li><br>
                            <li><b>Hit Range (Main Hit):</b> Length of 100m and radius of 2.5m; from the <b>caster</b>
                                toward the <b>main target</b></li>
                            <li>Causes the <b>caster</b> to slide back 5m; holding the forward movement input <b>until
                                    the skill is cast</b> will prevent the slide from occuring</li>
                            <li>Reduces damage taken to 0 <b>once</b> during the slide; this can prevent <b>Cross Fire
                                    buff</b> from stopping charging, but <b>cannot</b> preserve any other buffs that can
                                be removed upon taking damage</li>
                            <li>Inflicts <b>Retrograde mark</b> on the target upon hit; if the skill hits multiple
                                enemies, only the one with the <b>highest HP</b> will be marked</li><br><b>Mark
                                Effect:</b>
                            <li><b>Dodge</b> -20%</li>
                            <li>Inflict <b>Additional Damage</b> upon getting hit by an attack skill from <b>Shot
                                    Skills</b> or <b>Hunter Skills</b> trees; the damage increases after each hit, up to
                                a maximum of 5 times</li>
                            <li><b>Mark Duration:</b> 30 seconds</li><br><b>Extra info:</b>
                            <li>Only the <b>caster</b> can trigger the <b>Additional Damage</b> with their own skills
                            </li>
                            <li>The <b>Additional Damage</b> is triggered <b>per hit</b>, not per skill; as a result,
                                skills that can deal multiple hits such as <b>Arrow Rain</b> or <b>Cross Fire</b> can
                                rapidly power-up the damage, as well as triggering it as many times</li>
                            <li>The <b>Additional Damage</b> is affected by <b>Short Range Damage</b> and <b>Long Range
                                    Damage</b> stats, but not <b>Long Range passive</b>; it's also unaffected by Combo
                                tags</li>
                            <li>The <b>Additional Damage</b> uses <b>Physical Proration</b> for its damage calculation,
                                but <b>does not inflict proration</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- Any skill that can trigger the <b>Additional Damage</b> will
                                        apply its proration first before the damage calculation of the <b>Additional
                                            Damage</b> starts, changing the proration bonus for the latter depending on
                                        the skill's proration type</li>
                                </ul>
                            </li>
                            <li>Hitting a marked target with this skill again will reset the mark, along with the power
                                of the <b>Additional Damage</b> on said target</li>
                            <li>Strangely, the <b>Additional Damage</b> is always affected by <b>Zero Stance
                                    registlet</b>, whether <b>Retrograde Shot</b> or the skill that triggers these
                                hit(s) is used out of combo or not; possibly because the attack is treated as "skill
                                that is used out of combo" by the game</li><br>Credits to <b>Cy's Grimoire</b> and <a
                                href="https://forum.gamer.com.tw/Co.php?bsn=28271&amp;sn=43239" style="color:blue;">this
                                post</a> for the info about Dodge reduction
                        </span>

                        <script>
                            function calcRetrogradeShotConstant(result) {
                                var constant = 300
                                result.innerHTML = `<li><b>Skill Constant (Main Hit):</b> ${constant}</li>
                    <li><b>Skill Constant (Additional Damage):</b> 0; constant for each hit</li>`
                            }

                            function calcRetrogradeShotMultiplier(level, baseDex, percentDex, flatDex, addHit, result) {
                                var totalDex = baseDex * (100 + percentDex * 1) / 100 + flatDex * 1
                                if (totalDex - Math.floor(totalDex) < 0.99999999) { totalDex = Math.floor(totalDex) }
                                else { totalDex = Math.round(totalDex) }
                                if (addHit > Math.floor(level / 4) + 3) { addHit = Math.floor(level / 4) + 3 }
                                var multiplier1 = 5 + 0.5 * level + baseDex / 100
                                var multiplier2 = 1 + addHit * totalDex * level / 10000

                                function rounding(value) {
                                    if (value - Math.floor(value * 100) / 100 < 0.0099) { value = Math.floor(value * 100) / 100 }
                                    else { value = Math.round(value * 100) / 100 }
                                    return value
                                }

                                multiplier1 = rounding(multiplier1)
                                multiplier2 = rounding(multiplier2)
                                result.innerHTML += `<li><b>Skill Multiplier (Main Hit):</b> ${multiplier1}</li>
                    <li><b>Skill Multiplier (Additional Damage):</b> ${multiplier2}</li>
                    <li><b>Physical Pierce</b> of <b>Additional Damage</b> +50%</li><br>`
                            }

                            function calcRetrogradeShotHitRange(result) {
                                result.innerHTML += `<li><b>Hit Range (Main Hit):</b> Length of 100m and radius of 2.5m; from the <b>caster</b> toward the <b>main target</b></li>`
                            }

                            function calcRetrogradeShotSkillEffect(result) {
                                result.innerHTML += `<li>Causes the <b>caster</b> to slide back 5m; holding the forward movement input <b>until the skill is cast</b> will prevent the slide from occuring</li>
                    <li>Reduces damage taken to 0 <b>once</b> during the slide; this can prevent <b>Cross Fire buff</b> from stopping charging, but <b>cannot</b> preserve any other buffs that can be removed upon taking damage</li>
                    <li>Inflicts <b>Retrograde mark</b> on the target upon hit; if the skill hits multiple enemies, only the one with the <b>highest HP</b> will be marked</li>`
                            }

                            function calcRetrogradeShotMarkEffect(level, totalStr, baseDex, percentDex, flatDex, result) {
                                var totalDex = baseDex * (100 + percentDex * 1) / 100 + flatDex * 1
                                if (totalDex - Math.floor(totalDex) < 0.99999999) { totalDex = Math.floor(totalDex) }
                                else { totalDex = Math.round(totalDex) }
                                var dodge = Math.floor((totalStr * 4 + totalDex * 4) / 100)
                                var maxHit = Math.floor(level / 4) + 3
                                var duration = 10 + 2 * level
                                result.innerHTML += `<br><b>Mark Effect:</b>
                    <li><b>Dodge</b> -${dodge}%</li>
                    <li>Inflict <b>Additional Damage</b> upon getting hit by an attack skill from <b>Shot Skills</b> or <b>Hunter Skills</b> trees; the damage increases after each hit, up to a maximum of ${maxHit} times</li>
                    <li><b>Mark Duration:</b> ${duration} seconds</li>`
                            }

                            function addRetrogradeShotExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li>Only the <b>caster</b> can trigger the <b>Additional Damage</b> with their own skills</li>
                    <li>The <b>Additional Damage</b> is triggered <b>per hit</b>, not per skill; as a result, skills that can deal multiple hits such as <b>Arrow Rain</b> or <b>Cross Fire</b> can rapidly power-up the damage, as well as triggering it as many times</li>
                    <li>The <b>Additional Damage</b> is affected by <b>Short Range Damage</b> and <b>Long Range Damage</b> stats, but not <b>Long Range passive</b>; it's also unaffected by Combo tags</li>
                    <li>The <b>Additional Damage</b> uses <b>Physical Proration</b> for its damage calculation, but <b>does not inflict proration</b><ul>
                    <li>&nbsp&nbsp&nbsp- Any skill that can trigger the <b>Additional Damage</b> will apply its proration first before the damage calculation of the <b>Additional Damage</b> starts, changing the proration bonus for the latter depending on the skill's proration type</li>
                    </ul></li>
                    <li>Hitting a marked target with this skill again will reset the mark, along with the power of the <b>Additional Damage</b> on said target</li>
                    <li>Strangely, the <b>Additional Damage</b> is always affected by <b>Zero Stance registlet</b>, whether <b>Retrograde Shot</b> or the skill that triggers these hit(s) is used out of combo or not; possibly because the attack is treated as "skill that is used out of combo" by the game</li>`
                            }

                            function calcRetrogradeShotValues() {
                                let levelSelector = document.getElementById("retrogradeShotSkillLevel")
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let totalStr = document.getElementById("retrogradeShotStrValue").value
                                let baseDex = document.getElementById("retrogradeShotDexValue").value
                                let percentDex = document.getElementById("retrogradeShotPercentDex").value
                                let flatDex = document.getElementById("retrogradeShotFlatDex").value
                                let addHitSelector = document.getElementById("retrogradeShotAddHitCount")
                                let addHit = addHitSelector[addHitSelector.selectedIndex].value
                                let result = document.getElementById("retrogradeShotValues")
                                calcRetrogradeShotConstant(result)
                                calcRetrogradeShotMultiplier(level, baseDex, percentDex, flatDex, addHit, result)
                                calcRetrogradeShotHitRange(result)
                                calcRetrogradeShotSkillEffect(result)
                                calcRetrogradeShotMarkEffect(level, totalStr, baseDex, percentDex, flatDex, result)
                                addRetrogradeShotExtraInfo(result)
                                result.innerHTML += `<br>Credits to <b>Cy's Grimoire</b> and <a href="https://forum.gamer.com.tw/Co.php?bsn=28271&sn=43239" style="color:blue;">this post</a> for the info about Dodge reduction`
                            }

                            calcRetrogradeShotValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/crossfire.png" width="34" height="34">
                                Quick Loader
                            </p>
                            <p class="medium">
                                Skill Quick Loader Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Activates Cross Fire and increases its charge by 1 level if is not fully charged.<br>
                                This skill is not overwritten.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Activating the skill will also activate the Sneak Attack that has been acquired at the
                                same time.<br>
                                <font style="color:#009fff">Activation level will not exceed the level of Quick Loader.
                                </font>
                            </p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Activating the skill will also activate the Sneak Attack that has been acquired at the
                                same time.<br>
                                <font style="color:#009fff">Activation level will not exceed the level of Quick Loader.
                                </font><br><br>
                                <b style="color:#E77577">No. of Stacks Gained -1</b>
                            </p>
                        </div>
                    </div>
                </div>


                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/moebashot.png" width="34" height="34">
                                Moeba Shot
                            </p>
                            <p class="medium">
                                Skill Moeba Shot Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Water</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>14</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Shoot with sticky liquid. Water element attack. <b>Dual Element</b> with <b
                                    style="color: gold">Arrow</b>. Chance to inflict [Slow Down] on the target and when
                                successful, damage dealt greatly increases.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Slow Down Rate +30%</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +50<br>
                                <b style="color: #E77577">Slow Down Rate -30%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="moebaWeapon" onchange="calcMoebaValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="moebaShotArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="moebaLevel" onchange="calcMoebaValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>[Slow] inflicted successfully:</b></span>
                        <input type="checkbox" id="moebaSlow" onchange="calcMoebaValues()"><br>
                        <div id="moebaDexInput" style="display: none;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="moebaDexValue"
                                onchange="calcMoebaValues()" style="width: 50px;">
                        </div>
                        <br>
                        <span id="moebaValues">
                            <li><b>Skill Constant:</b> 100</li>
                            <li><b>Skill Multiplier:</b> 1.5</li><br>
                            <li>This skill has the <b>Dual Element</b> attribute: it gains the element from the
                                <b>equipped Arrow</b> in addition to its default <b>Water</b> element; whichever of the
                                two provides better damage will be selected for damage calculation
                            </li>
                            <li><b>Slow Chance:</b> 100%</li>
                            <li><b>Slow Duration:</b> 10 seconds</li><br>Credits to <b>Phantom Library</b> for the info
                            about [Slow] bonus
                        </span>

                        <script>
                            function toggleMoebaArrow(weapon) {
                                //If the weapon selected is an Arrow, the "No Arrow" option makes no sense; we thus remove it; we add it back if the weapon selected changes
                                //Don't need this anymore, though, since it hides an important piece of info with unnecessary choices; still, gotta keep this just in case we need the codes again
                                var arrowSelector = document.getElementById("moebaArrow")
                                if (weapon == "Arrow") {
                                    if (arrowSelector.options[arrowSelector.selectedIndex].value == "None") {
                                        //Reselecting to "Neutral" in case "No Arrow" is selected
                                        arrowSelector.options[0].selected = false
                                        arrowSelector.options[1].selected = true
                                    }
                                    //Removing the "No Arrow" option if it's there
                                    if (arrowSelector.options[0].value == "None") { arrowSelector.remove(0) }
                                }
                                else {
                                    //Adding the "No Arrow" option if it isn't there
                                    if (arrowSelector.options[0].value != "None") {
                                        var option = document.createElement("option");
                                        option.value = "None"
                                        option.text = "No Arrow"
                                        arrowSelector.add(option, arrowSelector[0])
                                    }
                                }
                            }

                            function moebaShotWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function slowDexCheck(slow, dexSection) {
                                if (slow) { dexSection.style = "display: block" }
                                else { dexSection.style = "display: none" }
                            }

                            function calcMoebaConstant(level, result) {
                                var constant = 50 + 5 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcMoebaMultiplier(level, weapon, slow, dexValue, result) {
                                var multiplier = 1 + (0.05 * level)
                                if (weapon == "BG") { multiplier += 0.5 }
                                if (slow) { multiplier += 0.5 + dexValue / 100 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function addMoebaDualElementInfo(result) {
                                result.innerHTML += `<li>This skill has the <b>Dual Element</b> attribute: it gains the element from the <b>equipped Arrow</b> in addition to its default <b>Water</b> element; whichever of the two provides better damage will be selected for damage calculation</li>`
                            }

                            function calcMoebaSlowChance(level, weapon, result) {
                                var chance = 50 + 2 * level
                                if (weapon == "Bow") { chance += 30 }
                                else if (weapon == "BG") { chance -= 30 }
                                result.innerHTML += `<li><b>Slow Chance:</b> ${chance}%</li>
                    <li><b>Slow Duration:</b> 10 seconds</li>`
                            }

                            function calcMoebaValues() {
                                var weaponSelector = document.getElementById("moebaWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("moebaShotArrowInput")
                                var levelSelector = document.getElementById("moebaLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var slow = document.getElementById("moebaSlow").checked
                                var dexSection = document.getElementById("moebaDexInput")
                                var dexValue = document.getElementById("moebaDexValue").value
                                var result = document.getElementById("moebaValues")
                                moebaShotWeaponCheck(weapon, subArrowSection)
                                slowDexCheck(slow, dexSection)
                                calcMoebaConstant(level, result)
                                calcMoebaMultiplier(level, weapon, slow, dexValue, result)
                                addMoebaDualElementInfo(result)
                                calcMoebaSlowChance(level, weapon, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> for the info about [Slow] bonus`
                            }

                            calcMoebaValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/paralysisshot.png" width="34" height="34">
                                Paralysis Shot
                            </p>
                            <p class="medium">
                                Skill Paralysis Shot Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Wind</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>300</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>14</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Shoot the target with a paralysis poison. Wind element attack. <b>Dual Element</b> with
                                <b style="color: gold">Arrow</b>. Chance to inflict [Paralysis] on the target and when
                                successful, damage dealt greatly increases. Increase your Stability for a while.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +100<br>Paralyze Rate +20%</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +150<br>
                                <b style="color: #E77577">Paralyze Rate -20%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="paraShotWeapon" onchange="calcParaShotValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="paraShotArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="paraShotLevel" onchange="calcParaShotValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Paralysis Shot Extender" Registlet Level:</b></span>
                        <select id="paraShotRegistlet" onchange="calcParaShotValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select><br>
                        <span class="sub-title"><b>[Paralysis] inflicted successfully:</b></span>
                        <input type="checkbox" id="paraShotPara" onchange="calcParaShotValues()"><br>
                        <div id="paraShotDexInput" style="display: none;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="paraShotDexValue"
                                onchange="calcParaShotValues()" style="width: 50px;">
                        </div>
                        <br>
                        <span id="paraShotValues">
                            <li><b>Skill Constant:</b> 300</li>
                            <li><b>Skill Multiplier:</b> 2.6</li><br>
                            <li>This skill has the <b>Dual Element</b> attribute: it gains the element from the
                                <b>equipped Arrow</b> in addition to its default <b>Wind</b> element; whichever of the
                                two provides better damage will be selected for damage calculation</li>
                            <li>Grants <b>Paralysis Shot buff</b> upon successful cast</li>
                            <li><b>Paralysis Chance:</b> 90%</li>
                            <li><b>Paralysis Duration:</b> 10 seconds</li><br><b>Buff Effect:</b>
                            <li><b>Stability</b> +10%</li>
                            <li><b>Buff Duration:</b> 10 seconds</li><br>Credits to <b>Phantom Library</b> for the info
                            about [Paralysis] bonus
                        </span>

                        <script>
                            function paraShotWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function paraShotDexCheck(para, dexSection) {
                                if (para) { dexSection.style = "display: block" }
                                else { dexSection.style = "display: none" }
                            }

                            function calcParaShotConstant(level, result) {
                                var constant = 100 + 20 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcParaShotMultiplier(level, weapon, para, dexValue, result) {
                                var multiplier = 1.1 + (0.05 * level)
                                if (weapon == "Bow") { multiplier += 1 }
                                else if (weapon == "BG") { multiplier += 1.5 }
                                if (para) { multiplier += 1 + dexValue / 100 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function addParaShotDualElementInfo(result) {
                                result.innerHTML += `<li>This skill has the <b>Dual Element</b> attribute: it gains the element from the <b>equipped Arrow</b> in addition to its default <b>Wind</b> element; whichever of the two provides better damage will be selected for damage calculation</li>
                    <li>Grants <b>Paralysis Shot buff</b> upon successful cast</li>`
                            }

                            function calcParaShotParalysisChance(level, weapon, result) {
                                var chance = 50 + 2 * level
                                if (weapon == "Bow") { chance += 20 }
                                else if (weapon == "BG") { chance -= 20 }
                                result.innerHTML += `<li><b>Paralysis Chance:</b> ${chance}%</li>
                    <li><b>Paralysis Duration:</b> 10 seconds</li>`
                            }

                            function calcParaShotStabilityBuff(level, registlet, result) {
                                var stability = 1 * level
                                var duration = 10 + registlet * 1
                                result.innerHTML += `<br><b>Buff Effect:</b>
                    <li><b>Stability</b> +${stability}%</li>
                    <li><b>Buff Duration:</b> ${duration} seconds</li>`
                            }

                            function calcParaShotValues() {
                                var weaponSelector = document.getElementById("paraShotWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("paraShotArrowInput")
                                var levelSelector = document.getElementById("paraShotLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                //var arrowSelector = document.getElementById("paraShotArrow")
                                //var arrowElement = arrowSelector[arrowSelector.selectedIndex].value
                                var registletSelector = document.getElementById("paraShotRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var para = document.getElementById("paraShotPara").checked
                                var dexSection = document.getElementById("paraShotDexInput")
                                var dexValue = document.getElementById("paraShotDexValue").value
                                var result = document.getElementById("paraShotValues")
                                paraShotWeaponCheck(weapon, subArrowSection)
                                paraShotDexCheck(para, dexSection)
                                calcParaShotConstant(level, result)
                                calcParaShotMultiplier(level, weapon, para, dexValue, result)
                                addParaShotDualElementInfo(result)
                                calcParaShotParalysisChance(level, weapon, result)
                                calcParaShotStabilityBuff(level, registlet, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> for the info about [Paralysis] bonus`
                            }

                            calcParaShotValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/smokedust.png" width="34" height="34">
                                Smoke Dust
                            </p>
                            <p class="medium">
                                Skill Smoke Dust Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Dark</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>500</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>14</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>An attack with a smokescreen. Dark Element attack. <b>Dual Element</b> with <b
                                    style="color: gold">Arrow</b>. Chance to inflict [Blind] on the target and when
                                successful, damage dealt greatly increases. Increase accuracy rate for a while.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +200<br>Blind Rate +20%</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +250<br>
                                <b style="color: #E77577">Blind Rate -20%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="smokeDustWeapon" onchange="calcSmokeDustValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="smokeDustArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="smokeDustLevel" onchange="calcSmokeDustValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Smoke Dust Extender" Registlet Level:</b></span>
                        <select id="smokeDustRegistlet" onchange="calcSmokeDustValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select><br>
                        <span class="sub-title"><b>[Blind] inflicted successfully:</b></span>
                        <input type="checkbox" id="smokeDustBlind" onchange="calcSmokeDustValues()"><br>
                        <div id="smokeDustDexInput" style="display: none;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="smokeDustDexValue"
                                onchange="calcSmokeDustValues()" style="width: 50px;">
                        </div>
                        <br>
                        <span id="smokeDustValues">
                            <li><b>Skill Constant:</b> 500</li>
                            <li><b>Skill Multiplier:</b> 3.7</li><br>
                            <li>This skill has the <b>Dual Element</b> attribute: it gains the element from the
                                <b>equipped Arrow</b> in addition to its default <b>Dark</b> element; whichever of the
                                two provides better damage will be selected for damage calculation</li>
                            <li>Grants <b>Smoke Dust buff</b> upon successful cast</li>
                            <li><b>Blind Chance:</b> 90%</li>
                            <li><b>Blind Duration:</b> 10 seconds</li><br><b>Buff Effect:</b>
                            <li><b>Accuracy</b> +100</li>
                            <li><b>Buff Duration:</b> 10 seconds</li><br>Credits to <b>Phantom Library</b> for the info
                            about [Blind] bonus
                        </span>

                        <script>
                            function smokeDustWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function smokeDustDexCheck(blind, dexSection) {
                                if (blind) { dexSection.style = "display: block" }
                                else { dexSection.style = "display: none" }
                            }

                            function calcSmokeDustConstant(level, result) {
                                var constant = 200 + 30 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcSmokeDustMultiplier(level, weapon, blind, dexValue, result) {
                                var multiplier = 1.2 + (0.05 * level)
                                if (weapon == "Bow") { multiplier += 2 }
                                else if (weapon == "BG") { multiplier += 2.5 }
                                if (blind) { multiplier += 2 + dexValue / 100 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                //put the multiplier back into HTML
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function addSmokeDustDualElementInfo(result) {
                                result.innerHTML += `<li>This skill has the <b>Dual Element</b> attribute: it gains the element from the <b>equipped Arrow</b> in addition to its default <b>Dark</b> element; whichever of the two provides better damage will be selected for damage calculation</li>
                    <li>Grants <b>Smoke Dust buff</b> upon successful cast</li>`
                            }

                            function calcSmokeDustBlindChance(level, weapon, result) {
                                var chance = 50 + 2 * level
                                if (weapon == "Bow") { chance += 20 }
                                else if (weapon == "BG") { chance -= 20 }
                                result.innerHTML += `<li><b>Blind Chance:</b> ${chance}%</li>
                    <li><b>Blind Duration:</b> 10 seconds</li>`
                            }

                            function calcSmokeDustAccuracyBuff(level, registlet, result) {
                                var accuracy = Math.floor(level * level / 2 + level * 5)
                                var duration = 10 + registlet * 1
                                result.innerHTML += `<br><b>Buff Effect:</b>
                    <li><b>Accuracy</b> +${accuracy}</li>
                    <li><b>Buff Duration:</b> ${duration} seconds</li>`
                            }

                            function calcSmokeDustValues() {
                                var weaponSelector = document.getElementById("smokeDustWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("smokeDustArrowInput")
                                var levelSelector = document.getElementById("smokeDustLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var registletSelector = document.getElementById("smokeDustRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var blind = document.getElementById("smokeDustBlind").checked
                                var dexSection = document.getElementById("smokeDustDexInput")
                                var dexValue = document.getElementById("smokeDustDexValue").value
                                var result = document.getElementById("smokeDustValues")
                                smokeDustWeaponCheck(weapon, subArrowSection)
                                smokeDustDexCheck(blind, dexSection)
                                calcSmokeDustConstant(level, result)
                                calcSmokeDustMultiplier(level, weapon, blind, dexValue, result)
                                addSmokeDustDualElementInfo(result)
                                calcSmokeDustBlindChance(level, weapon, result)
                                calcSmokeDustAccuracyBuff(level, registlet, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> for the info about [Blind] bonus`
                            }

                            calcSmokeDustValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/armbreak.png" width="34" height="34">
                                Arm Break
                            </p>
                            <p class="medium">
                                Skill Arm Break Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>700</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>14</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Attack a target's arm and reduce its attack power. Neutral element attack. <b>Dual
                                    Element</b> with <b style="color: gold">Arrow</b>. Chance to inflict
                                <b>[Lethargy]</b> on the target and when successful, damage dealt greatly increases.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>Power +300<br>Lethargy Rate +20%</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>Power +350<br>
                                <b style="color: #E77577">Lethargy Rate -20%</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="armBreakWeapon" onchange="calcArmBreakValues()">
                            <option value="Bow" selected="">Bow</option>
                            <option value="BG">Bowgun</option>
                            <option value="Other">Other</option>
                        </select><br>
                        <div id="armBreakArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="armBreakLevel" onchange="calcArmBreakValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>[Lethargy] inflicted successfully:</b></span>
                        <input type="checkbox" id="armBreakLethargy" onchange="calcArmBreakValues()"><br>
                        <div id="armBreakDexInput" style="display: none;">
                            <span class="sub-title"> <b>Base DEX:</b></span>
                            <input type="number" value="255" min="1" max="510" id="armBreakDexValue"
                                onchange="calcArmBreakValues()" style="width: 50px;">
                        </div>
                        <br>
                        <span id="armBreakValues">
                            <li><b>Skill Constant:</b> 700</li>
                            <li><b>Skill Multiplier:</b> 6.5</li><br>
                            <li>This skill has the <b>Dual Element</b> attribute: it gains the element from the
                                <b>equipped Arrow</b> in addition to its default <b>Neutral</b> element; whichever of
                                the two provides better damage will be selected for damage calculation</li>
                            <li><b>Lethargy Chance:</b> 90%</li>
                            <li><b>Lethargy Duration:</b> 10 seconds</li><br>Credits to <b>Phantom Library</b> for the
                            info about [Lethargy] bonus
                        </span>

                        <script>
                            function armBreakWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "Other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function lethargyDexCheck(lethargy, dexSection) {
                                if (lethargy) { dexSection.style = "display: block" }
                                else { dexSection.style = "display: none" }
                            }

                            function calcArmBreakConstant(level, result) {
                                var constant = 300 + 40 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcArmBreakMultiplier(level, weapon, lethargy, dexValue, result) {
                                var multiplier = 3 + (0.05 * level)
                                if (weapon == "Bow") { multiplier += 3 }
                                else if (weapon == "BG") { multiplier += 3.5 }
                                if (lethargy) { multiplier += 1.3 + dexValue / 100 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function addArmBreakDualElementInfo(result) {
                                result.innerHTML += `<li>This skill has the <b>Dual Element</b> attribute: it gains the element from the <b>equipped Arrow</b> in addition to its default <b>Neutral</b> element; whichever of the two provides better damage will be selected for damage calculation</li>`
                            }

                            function calcArmBreakLethargyChance(level, weapon, result) {
                                var chance = 50 + 2 * level
                                if (weapon == "Bow") { chance += 20 }
                                else if (weapon == "BG") { chance -= 20 }
                                result.innerHTML += `<li><b>Lethargy Chance:</b> ${chance}%</li>
                    <li><b>Lethargy Duration:</b> 10 seconds</li>`
                            }

                            function calcArmBreakValues() {
                                var weaponSelector = document.getElementById("armBreakWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("armBreakArrowInput")
                                var levelSelector = document.getElementById("armBreakLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var lethargy = document.getElementById("armBreakLethargy").checked
                                var dexSection = document.getElementById("armBreakDexInput")
                                var dexValue = document.getElementById("armBreakDexValue").value
                                var result = document.getElementById("armBreakValues")
                                armBreakWeaponCheck(weapon, subArrowSection)
                                lethargyDexCheck(lethargy, dexSection)
                                calcArmBreakConstant(level, result)
                                calcArmBreakMultiplier(level, weapon, lethargy, dexValue, result)
                                addArmBreakDualElementInfo(result)
                                calcArmBreakLethargyChance(level, weapon, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> for the info about [Lethargy] bonus`
                            }

                            calcArmBreakValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/parabolacannon.png" width="34" height="34">
                                Parabola Cannon
                            </p>
                            <p class="medium">
                                Skill Parabola Cannon Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/arrow.png"><img src="../../images/icon/bg.png"><img
                                src="../../images/icon/bow.png"><br>Arrow/Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>24</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Attacks by firing a projectile that follows a parabolic path. The attack range is always
                                the same, but the direction can be changed with the arrow keys when firing. Chance to
                                inflict [Silence].</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p><b style="color: gold">[Get the same effect when used with a Bowgun]</b><br>
                                When used on a target marked by Retrograde Shot, the attack direction is changed to the
                                target's feet.<br>
                                When no target gets hit, it will be set as a trap and its power increases.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="parabolaCannonWeapon" onchange="calcParabolaCannonValues()">
                            <option value="bowbg" selected="">Bow/Bowgun</option>
                            <option value="other">Other</option>
                        </select><br>
                        <div id="parabolaCannonArrowInput" style="display: none;">
                            <span class="sub-title"><b>Sub Arrow is mandatory in order to use this skill</b></span>
                        </div>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="parabolaCannonSkillLevel" onchange="calcParabolaCannonValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"> <b>Total DEX:</b></span>
                        <input type="number" value="255" id="parabolaCannonDexValue"
                            onchange="calcParabolaCannonValues()" style="width: 50px;"><br>
                        <div id="parabolaCannonWeaponInput" style="display: block;">
                            <span class="sub-title"><b>Weapon Auto-Attack Range (m):</b></span>
                            <input type="number" value="10" step="0.5" min="4" max="14" id="parabolaCannonWeaponRange"
                                onchange="calcParabolaCannonValues()" style="width: 50px;"><br>
                            <span class="sub-title"><b>Skill does not hit any enemy:</b></span>
                            <input type="checkbox" id="parabolaCannonTrap" onchange="calcParabolaCannonValues()"><br>
                        </div>
                        <br>
                        <span id="parabolaCannonValues">
                            <li><b>Skill Constant:</b> 400 </li>
                            <li><b>Skill Multiplier:</b> 12.55</li><br>
                            <li><b>Hit Range (radius):</b> 5m, around the <b> skill's landing position</b></li>
                            <li><b>Silence Chance:</b> 100%</li>
                            <li><b>Silence Duration:</b> 5 seconds</li>
                            <li><b>Resistance Duration:</b> 30 seconds</li><br><b>Skill Effect:</b>
                            <li>Fires an arrow upward that will always land at 10m in front of <b>the direction the
                                    caster is facing</b>; if the target has <b>Retrograde mark</b>, the arrow will land
                                at <b>that target's position on cast</b> instead</li>
                            <li>If there is no enemy within its hit range, it will <b>become a trap</b> upon landing
                            </li><br><b>Extra info:</b>
                            <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding
                                ailment; most ailments have the same resistance duration as their own duration, unless
                                stated otherwise</li>
                            <li>This skill is always affected by <b>Long Range Damage</b> stat regardless of the
                                distance between the <b>caster</b> and the <b>target</b></li>
                        </span>

                        <script>
                            function parabolaCannonWeaponCheck(weapon, subArrowSection) {
                                if (weapon == "other") { subArrowSection.style = "display: block" }
                                else { subArrowSection.style = "display: none" }
                            }

                            function weaponRangeCheck(weapon, weaponSection) {
                                if (weapon == "bowbg") { weaponSection.style = "display: block" }
                                else { weaponSection.style = "display: none" }
                            }

                            function calcParabolaCannonConstant(result) {
                                var constant = 400
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant} </li>`
                            }

                            function calcParabolaCannonMultiplier(level, weapon, dexValue, trap, result) {
                                var multiplier = 7.5 + 0.25 * level + dexValue / 100
                                if (weapon == "bowbg" && trap) { multiplier += 5 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function calcParabolaCannonHitRange(level, weapon, trap, result) {
                                var radius = 0.5 * level
                                var HTML = `<li><b>Hit Range (radius):</b> ${radius}m, around the <b>`
                                if (weapon == "bowbg" && trap) { HTML += ` trap's position` }
                                else { HTML += ` skill's landing position` }
                                HTML += `</b></li>`
                                result.innerHTML += HTML
                            }

                            function calcParabolaCannonSilenceChance(result) {
                                result.innerHTML += `<li><b>Silence Chance:</b> 100%</li>
                    <li><b>Silence Duration:</b> 5 seconds</li>
                    <li><b>Resistance Duration:</b> 30 seconds</li>`
                            }

                            function calcParabolaCannonSkillEffect(level, weapon, attackRange, trap, result) {
                                var range = 0
                                if (weapon == "bowbg") { range = attackRange }
                                else { range = 12 }
                                var HTML = `<br><b>Skill Effect:</b>`
                                if (weapon == "bowbg") { HTML += `<li>` }
                                else (HTML += ` `)
                                HTML += `Fires an arrow upward that will always land at ${range}m in front of <b>the direction the caster is facing</b>`
                                if (weapon == "bowbg") {
                                    HTML += `; if the target has <b>Retrograde mark</b>, the arrow will land at <b>that target's position on cast</b> instead`
                                    if (trap) {
                                        HTML += `<li>The arrow <b>becomes a trap</b> upon landing</li>
                        <li>The trap is immediately triggered if an enemy moves into <b>1m radius around the trap</b>; it will be broken instead if it is hit by enemy's Area of Effect attacks</li>
                        <li><b>Trap Duration:</b> 30 seconds OR until triggered/broken OR until this skill is used`}
                                    else { HTML += `<li>If there is no enemy within its hit range, it will <b>become a trap</b> upon landing` }
                                    HTML += `</li>`
                                }
                                else { HTML += `<br>` }
                                result.innerHTML += HTML
                            }

                            function addParabolaCannonExtraInfo(weapon, trap, result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>
                    <li>This skill is always affected by <b>Long Range Damage</b> stat regardless of the distance between the <b>caster</b> and the <b>target</b></li>`
                                if (weapon == "bowbg" && trap) {
                                    result.innerHTML += `<li>The trap set by this skill can still be disabled even when the arrow is still falling</li>
                    <li><b>Only one Parabola Cannon trap</b> can be set at a time; if <b>Parabola Cannon</b> is recast, the existing trap will <b>despawn</b></li>`}
                            }

                            function calcParabolaCannonValues() {
                                var weaponSelector = document.getElementById("parabolaCannonWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var subArrowSection = document.getElementById("parabolaCannonArrowInput")
                                var levelSelector = document.getElementById("parabolaCannonSkillLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var dexValue = document.getElementById("parabolaCannonDexValue").value
                                var weaponSection = document.getElementById("parabolaCannonWeaponInput")
                                let attackRange = document.getElementById('parabolaCannonWeaponRange').value
                                var trap = document.getElementById("parabolaCannonTrap").checked
                                var result = document.getElementById("parabolaCannonValues")
                                parabolaCannonWeaponCheck(weapon, subArrowSection)
                                weaponRangeCheck(weapon, weaponSection)
                                calcParabolaCannonConstant(result)
                                calcParabolaCannonMultiplier(level, weapon, dexValue, trap, result)
                                calcParabolaCannonHitRange(level, weapon, trap, result)
                                calcParabolaCannonSilenceChance(result)
                                calcParabolaCannonSkillEffect(level, weapon, attackRange, trap, result)
                                addParabolaCannonExtraInfo(weapon, trap, result)
                            }

                            calcParabolaCannonValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/shotmastery.png" width="34" height="34">
                                Shot Mastery
                            </p>
                            <p class="medium">
                                Skill Shot Mastery Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Get better at using bows and bowguns. ATK of Bows and Bowguns increases.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="shotMasteryLevel" onchange="calcShotMasteryValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="shotMasteryValues">
                            <li><b>ATK</b> +3%</li>
                            <li><b>Weapon ATK</b> +30%</li>
                        </span>

                        <script>
                            function calcShotMasteryATK(level, result) {
                                var ATK = 1 + Math.ceil((level - 2) / 5)
                                result.innerHTML = `<li><b>ATK</b> +${ATK}%</li>`
                            }

                            function calcShotMasteryWeaponATK(level, result) {
                                var weaponATK = 3 * level
                                result.innerHTML += `<li><b>Weapon ATK</b> +${weaponATK}%</li>`
                            }

                            function calcShotMasteryValues() {
                                var levelSelector = document.getElementById("shotMasteryLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var result = document.getElementById("shotMasteryValues")
                                calcShotMasteryATK(level, result)
                                calcShotMasteryWeaponATK(level, result)
                            }

                            calcShotMasteryValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/samuraiarchery.png" width="34" height="34">
                                Samurai Archery
                            </p>
                            <p class="medium">
                                Skill Samurai Archery Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/katana-sub.png"><br>Sub Katana only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Slightly raises ATK and stability if a bow and a katana are equipped at the same
                                time.<br>
                                If a normal attack is performed with the katana, the accuracy of the next skill used
                                increases.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="samuraiArcheryLevel" onchange="calcSamuraiArcheryValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Sub Katana's Base WeaponATK:</b></span>
                        <input type="number" value="100" min="1" id="samuraiArcheryKtnAtk"
                            onchange="calcSamuraiArcheryValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>Sub Katana's Base Stability (%):</b></span>
                        <input type="number" value="70" min="0" max="100" id="samuraiArcheryKtnStability"
                            onchange="calcSamuraiArcheryValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>Bow's Base WeaponATK:</b></span>
                        <input type="number" value="200" min="1" id="samuraiArcheryBowAtk"
                            onchange="calcSamuraiArcheryValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>Bow's Base Stability (%):</b></span>
                        <input type="number" value="60" min="0" max="100" id="samuraiArcheryBowStability"
                            onchange="calcSamuraiArcheryValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>Number of stacks:</b></span>
                        <input type="number" id="samuraiArcheryStackCount" value="0"
                            onchange="calcSamuraiArcheryValues()" style="width: 3em;" min="0" max="10"><br>
                        <br>
                        <span id="samuraiArcheryValues">
                            <li><b>Weapon ATK</b> +100 (cannot exceed 60% of the equipped Bow's Base WeaponATK)</li>
                            <li><b>Stability</b> +17%</li>
                            <li>Upon successfully landing a normal attack <b>with the Katana</b>, gains 1 <b>Samurai
                                    Archery buff stack</b>, up to a maximum of 10 stacks</li>
                        </span>

                        <script>
                            function calcSamuraiArcherySkillEffect(level, ktnAtk, ktnStab, bowAtk, bowStab, result) {
                                var atk = ktnAtk * 0.1 * level
                                var maxAtk = bowAtk * bowStab * 0.001 * level
                                if (atk > maxAtk) { atk = maxAtk }
                                var stab = ktnStab / 4

                                function roundflat(value) {
                                    if (value - Math.floor(value) < 0.9999) { value = Math.floor(value) }
                                    else { value = Math.round(value) }
                                    return value
                                }

                                atk = roundflat(atk)
                                stab = roundflat(stab)
                                result.innerHTML = `<li><b>Weapon ATK</b> +${atk} (cannot exceed ${bowStab}% of the equipped Bow's Base WeaponATK)</li>
                    <li><b>Stability</b> +${stab}%</li>
                    <li>Upon successfully landing a normal attack <b>with the Katana</b>, gains 1 <b>Samurai Archery buff stack</b>, up to a maximum of 10 stacks</li>`
                            }

                            function calcSamuraiArcheryBuffEffect(level, stack, result) {
                                var acc = level * stack
                                if (stack > 0) {
                                    result.innerHTML += `<br><b>Buff Effect:</b>
                    <li><b>Accuracy</b> +${acc}%</li>
                    <li><b>Buff Duration:</b> Until a skill is used</li>`}
                            }

                            function calcSamuraiArcheryValues() {
                                let levelSelector = document.getElementById("samuraiArcheryLevel")
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let ktnAtk = document.getElementById("samuraiArcheryKtnAtk").value
                                let ktnStab = document.getElementById("samuraiArcheryKtnStability").value
                                let bowAtk = document.getElementById("samuraiArcheryBowAtk").value
                                let bowStab = document.getElementById("samuraiArcheryBowStability").value
                                let stack = document.getElementById("samuraiArcheryStackCount").value
                                let result = document.getElementById("samuraiArcheryValues")
                                calcSamuraiArcherySkillEffect(level, ktnAtk, ktnStab, bowAtk, bowStab, result)
                                calcSamuraiArcheryBuffEffect(level, stack, result)
                            }

                            calcSamuraiArcheryValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/sneakattack.png" width="34" height="34">
                                Sneak Attack
                            </p>
                            <p class="medium">
                                Skill Sneak Attack Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>Bow/Bowgun: 200; Other: 400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Hide yourself and turn Aggro away. Certain attacks don't get Aggro after the skill.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bow.png"></p>
                                <p>Bow</p>
                            </div>
                            <p>MP Cost -200</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/bg.png"></p>
                                <p>Bowgun</p>
                            </div>
                            <p>MP Cost -200</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="sneakWeapon" onchange="calcSneakValues()">
                            <option value="bowbg" selected="">Bow/Bowgun</option>
                            <option value="other">Other</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="sneakLevel" onchange="calcSneakValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="sneakValues">
                            <li><b>MP Cost:</b> 200</li>
                            <li><b>Skill Effect:</b> Grants <b>Sneak Attack buff</b> with 10 stacks to the <b>caster</b>
                                upon successful cast</li>
                            <br><b>Buff Effect:</b>
                            <li>Your next 10 auto attacks and/or attacking skills will <b>not generate Aggro</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>Support skills</b> and <b>non-attacking skills</b>
                                        (including <b>Sneak Attack</b> itself) will still <b>generate Aggro</b>, but
                                        will <b>not consume a stack count</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>Multi-hit</b> attacks and <b>AoE</b> attacks that <b>hit
                                            multiple targets</b> will still <b>consume one stack count</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- Attacks that [Miss] or get [Evaded] and <b>AoE</b> attacks
                                        that <b>don't hit any target</b> will <b>not consume a stack count</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- Attacks and skills with <b>fixed aggro</b> will not be
                                        affected</li>
                                </ul>
                            </li>
                            <li><b>Buff Duration:</b> Until all stacks are consumed</li>
                        </span>

                        <script>
                            function calcSneakValues() {
                                var weaponSelector = document.getElementById("sneakWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var levelSelector = document.getElementById("sneakLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var result = document.getElementById("sneakValues")

                                var mpCost = 400
                                if (weapon == "bowbg") { mpCost -= 200 }
                                var HTML = `<li><b>MP Cost:</b> ${mpCost}</li>
                    <li><b>Skill Effect:</b> Grants <b>Sneak Attack buff</b> with ${level} stack`
                                if (level > 1) { HTML += `s` }
                                HTML += ` to the <b>caster</b> upon successful cast</li>
                    <br><b>Buff Effect:</b>
                    <li>Your next ${level}`
                                if (level > 1) { HTML += ` auto attacks and/or attacking skills` }
                                else { HTML += ` auto attack and/or attacking skill` }
                                HTML += ` will <b>not generate Aggro</b>
                    <ul><li>&nbsp&nbsp&nbsp- <b>Support skills</b> and <b>non-attacking skills</b> (including <b>Sneak Attack</b> itself) will still <b>generate Aggro</b>, but will <b>not consume a stack count</b></li>
                    <li>&nbsp&nbsp&nbsp- <b>Multi-hit</b> attacks and <b>AoE</b> attacks that <b>hit multiple targets</b> will still <b>consume one stack count</b></li>
                    <li>&nbsp&nbsp&nbsp- Attacks that [Miss] or get [Evaded] and <b>AoE</b> attacks that <b>don't hit any target</b> will <b>not consume a stack count</b></li>
                    <li>&nbsp&nbsp&nbsp- Attacks and skills with <b>fixed aggro</b> will not be affected</li>
                    </ul></li>
                    <li><b>Buff Duration:</b> Until all stacks are consumed</li>`
                                result.innerHTML = HTML
                            }

                            calcSneakValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/longrange.png" width="34" height="34">
                                Long Range
                            </p>
                            <p class="medium">
                                Skill Long Range Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>You become good at attacking from distance. Damage dealt from 8 meters or more away
                                increases. </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="longRangeLevel" onchange="calcLongRangeDamageUp()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="longRangeValues">Increases the damage of <b>all skills that have a maximum cast range
                                of 8m and higher</b> by +10% (excluding a few certain skills)<br><br>
                            <b>Important note:</b>
                            <li><b>The description of this passive is misleading</b>: despite being described similar to
                                <b>Long Range Damage</b> stat, the effect of this passive is <b>not the same as Long
                                    Range Damage stat</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- While <b>Long Range Damage</b> stat increases the damage of
                                        <b>attacks and skills</b> that are <b>used from 8m or further</b>, this passive
                                        increases the damage of <b>skills</b> that <b>have a maximum cast range of 8m or
                                            higher, regardless of where they are used</b></li>
                                </ul>
                            </li>
                            <li>Certain skills, such as <b>Placed Skills</b>, are unaffected by this passive's effect
                            </li>
                        </span>

                        <script>
                            function calcLongRangeDamageUp() {
                                var levelSelector = document.getElementById("longRangeLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var result = document.getElementById("longRangeValues")

                                var damageUp = 1 * level
                                result.innerHTML = `Increases the damage of <b>all skills that have a maximum cast range of 8m and higher</b> by +${damageUp}% (excluding a few certain skills)<br><br>
                    <b>Important note:</b><li><b>The description of this passive is misleading</b>: despite being described similar to <b>Long Range Damage</b> stat, the effect of this passive is <b>not the same as Long Range Damage stat</b><ul>
                    <li>&nbsp&nbsp&nbsp- While <b>Long Range Damage</b> stat increases the damage of <b>attacks and skills</b> that are <b>used from 8m or further</b>, this passive increases the damage of <b>skills</b> that <b>have a maximum cast range of 8m or higher, regardless of where they are used</b></li>
                    </ul></li>
                    <li>Certain skills, such as <b>Placed Skills</b>, are unaffected by this passive's effect</li>`
                            }

                            calcLongRangeDamageUp()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/quickdraw.png" width="34" height="34">
                                Quick Draw
                            </p>
                            <p class="medium">
                                Skill Quick Draw Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Quickly prepare for the next move. Chance to restore MP a little when succeeding in
                                attacking with a skill.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="quickDrawLevel" onchange="calcQuickDrawEffect()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="quickDrawValues">Whenever you use an <b>attacking skill</b> that <b>consumes MP</b>,
                            you have a 30% chance to <b>recover</b> 100 MP
                            <li><b>Support skills</b>, <b>non-attacking skills</b>, and <b>attacking skills</b> that
                                <b>do not consume MP</b> will <b>not trigger this effect</b></li>
                            <li>If the skill is a <b>placed skill</b>, the effect will only activate <b>after the placed
                                    skill's animation has ended completely<b></b></b></li>
                        </span>

                        <script>
                            function calcQuickDrawEffect() {
                                var levelSelector = document.getElementById("quickDrawLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var result = document.getElementById("quickDrawValues")

                                result.innerHTML = `Whenever you use an <b>attacking skill</b> that <b>consumes MP</b>, you have a ${3 * level}% chance to <b>recover</b> 100 MP
                    <li><b>Support skills</b>, <b>non-attacking skills</b>, and <b>attacking skills</b> that <b>do not consume MP</b> will <b>not trigger this effect</b></li>
                    <li>If the skill is a <b>placed skill</b>, the effect will only activate <b>after the placed skill's animation has ended completely<b></li>`
                            }

                            calcQuickDrawEffect()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/decoyshot.png" width="34" height="34">
                                Decoy Shot
                            </p>
                            <p class="medium">
                                Skill Decoy Shot Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>24</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Generate a clone and make it attack. The clone attacks enemies attacking within the
                                range. The clone's attack is normal attack but it has no proration.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="decoyWeapon" onchange="calcDecoyValues()">
                            <option value="BowBg" selected="">Bow/Bowgun</option>
                            <option value="DS">Dual Swords</option>
                            <option value="Other">Other</option>
                        </select><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="decoyLevel" onchange="calcDecoyValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Decoy Shot Compress" Registlet Level:</b></span>
                        <select id="decoyRegistlet" onchange="calcDecoyValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select><br>
                        <span class="sub-title"><b>Attack Speed:</b></span>
                        <input type="number" style="width:6em; text-align: right" value="0" id="decoyASPD"
                            onchange="calcDecoyValues()"><br>
                        <span class="sub-title"><b>Cast Speed:</b></span>
                        <input type="number" style="width:6em; text-align: right" value="0" id="decoyCSPD"
                            onchange="calcDecoyValues()"><br>
                        <br>
                        <span id="decoyValues">
                            <li><b>Decoy Auto Attack Multiplier:</b> 1</li>
                            <li><b>Decoy Hit Count:</b> 1 hit per Auto Attack</li>
                            <li><b>Decoy Hit Range:</b> maximum auto attack range of the caster's weapon</li>
                            <li><b>Cast Time</b>: 1 second (affected by CSPD)</li><br><b>Skill Effect:</b>
                            <li>Places a decoy up to 2m <b>in front of the caster</b>. Once the decoy is set, <b>it will
                                    stay there</b> until it disappears or the skill is reused</li>
                            <li>The decoy will attack - and only attacks - <b>the target the caster is attacking</b>,
                                and will only attack if said <b>target is within its range</b></li>
                            <li>The decoy's auto attacks <b>apply full Attack MP Recovery and Aggro</b></li>
                            <li><b>Delay between attacks:</b> 1.1 seconds (affected by ASPD)</li>
                            <li><b>Decoy's duration:</b> 60 seconds</li><br><b>Extra info:</b>
                            <li>The <b>decoy's attack animation</b> depends on the <b>weapon used</b>, and is unaffected
                                by <b>Motion Speed</b> nor any skill buff that <b>changes auto attack animation</b>.
                            </li>
                            <li><b>Power Wave</b> passive <b>does not affect</b> the decoy's attack range</li>
                            <li>The decoy uses <b>Normal Attack Proration</b> for its damage calculation, but <b>does
                                    not inflict proration</b></li>
                            <li>The decoy's damage is affected by the <b>Combo Tags</b> of this skill when it was cast,
                                but is unaffected by other auto attack damage modifiers</li>
                            <li>This skill and the decoy are <b>unaffected by Sneak Attack</b></li>
                            <li>The decoy is affected by all stats changes while active. ASPD is the only exception,
                                which requires the skill to be recast to apply the change</li>
                            <li>The decoy is <b>placed</b>, making it unaffected by <b>Whack</b>, <b>Long Range
                                    passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>
                            <li>If the <b>caster</b> is afflicted with [Poison] ailment, <b>all</b> auto attack of their
                                decoy are treated as separate actions for poison damage triggering, thus are able to
                                continuously lower their HP as long as the decoy can still attack</li>
                        </span>

                        <script>
                            //Might not need this line anymore <[]script src="skill.js">< [here to disable this line] /script>

                            function calcAttackDelay(ASPD) {
                                var attackDelay = 1100 - ASPD
                                if (attackDelay < 0) { attackDelay = 0 }
                                return attackDelay / 1000
                            }

                            function calcCastTime(baseCastTime, CSPD) {
                                var castTime = baseCastTime * 1
                                var modifier1 = CSPD / 2000
                                var modifier2 = (CSPD - 1000) / 18000
                                if (CSPD <= 1000) { castTime = castTime * (1 - modifier1) }
                                else { castTime = castTime * (1 - (0.5 + modifier2)) }
                                castTime = Math.ceil(castTime * 100) / 100
                                if (castTime < 0) { castTime = 0 }
                                return castTime
                            }

                            function calcDecoyMultiplier(level, weapon, registlet, result) {
                                var multiplier = 0.2 + (0.08 * level) + (0.1 * registlet)
                                multiplier = Math.round(multiplier * 100) / 100
                                result.innerHTML = `<li><b>Decoy Auto Attack Multiplier:</b> ${multiplier}</li>
                    <li><b>Decoy Hit Count:</b> 1 hit per Auto Attack</li>
                    <li><b>Decoy Hit Range:</b> maximum auto attack range of the caster's weapon</li>`
                            }

                            function calcDecoyChargeTime(CSPD, result) {
                                var chargeTime = calcCastTime(1, CSPD)
                                var HTML = `<li><b>Cast Time</b>: ${chargeTime} second`
                                if (chargeTime != 1) { HTML += `s` }
                                HTML += ` (affected by CSPD)</li>`
                                result.innerHTML += HTML
                            }

                            function addDecoyPositionInfo(result) {
                                result.innerHTML += `<br><b>Skill Effect:</b>
                    <li>Places a decoy up to 2m <b>in front of the caster</b>. Once the decoy is set, <b>it will stay there</b> until it disappears or the skill is reused</li>
                    <li>The decoy will attack - and only attacks - <b>the target the caster is attacking</b>, and will only attack if said <b>target is within its range</b></li>`
                            }

                            function addDecoyAMPRInfo(result) {
                                result.innerHTML += `<li>The decoy's auto attacks <b>apply full Attack MP Recovery and Aggro</b></li>`
                            }

                            function calcDecoyAttackDelay(ASPD, weapon, result) {
                                var attackDelay = (1100 - ASPD) / 1000
                                if (attackDelay < 0.001) { attackDelay = 0.001 }
                                var HTML = `<li><b>Delay between attacks:</b> ${attackDelay} second`
                                if (attackDelay != 1) { HTML += `s` }
                                HTML += ` (affected by ASPD)`
                                if (weapon != "BowBg") { HTML += `. If the decoy is hit by an AoE attack, the delay to the next attack is increased by 1 second (up to a maximum of 3 seconds)` }
                                HTML += `</li>`
                                result.innerHTML += HTML

                            }

                            function calcDecoyDuration(level, registlet, result) {
                                //const durationArray = [10, 12, 14, 18, 22, 28, 34, 42, 50, 60]
                                var duration = 10 + Math.floor(level * level * 0.5);
                                if (registlet > 0) { duration /= 2 }
                                result.innerHTML += `<li><b>Decoy's duration:</b> ${duration} seconds</li><br>`
                            }

                            function addDecoyExtraInfo(weapon, result) {
                                result.innerHTML += `<b>Extra info:</b>
                    <li>The <b>decoy's attack animation</b> depends on the <b>weapon used</b>, and is unaffected by <b>Motion Speed</b> nor any skill buff that <b>changes auto attack animation</b>.</li>`
                                if (weapon == "DS") { result.innerHTML += `<li>The decoy benefits from Dual Sword's doubled AMPR, but its damage only scales with the main hand ATK</li>` }
                                result.innerHTML += `<li><b>Power Wave</b> passive <b>does not affect</b> the decoy's attack range</li>
                    <li>The decoy uses <b>Normal Attack Proration</b> for its damage calculation, but <b>does not inflict proration</b></li>
                    <li>The decoy's damage is affected by the <b>Combo Tags</b> of this skill when it was cast, but is unaffected by other auto attack damage modifiers</li>
                    <li>This skill and the decoy are <b>unaffected by Sneak Attack</b></li>
                    <li>The decoy is affected by all stats changes while active. ASPD is the only exception, which requires the skill to be recast to apply the change</li>
                    <li>The decoy is <b>placed</b>, making it unaffected by <b>Whack</b>, <b>Long Range passive</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>
                    <li>If the <b>caster</b> is afflicted with [Poison] ailment, <b>all</b> auto attack of their decoy are treated as separate actions for poison damage triggering, thus are able to continuously lower their HP as long as the decoy can still attack</li>`
                            }

                            function calcDecoyValues() {
                                var weaponSelector = document.getElementById("decoyWeapon")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var levelSelector = document.getElementById("decoyLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var registletSelector = document.getElementById("decoyRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var ASPD = document.getElementById("decoyASPD").value
                                var CSPD = document.getElementById("decoyCSPD").value
                                var result = document.getElementById("decoyValues")
                                calcDecoyMultiplier(level, weapon, registlet, result)
                                calcDecoyChargeTime(CSPD, result)
                                addDecoyPositionInfo(result)
                                addDecoyAMPRInfo(result)
                                calcDecoyAttackDelay(ASPD, weapon, result)
                                calcDecoyDuration(level, registlet, result)
                                addDecoyExtraInfo(weapon, result)
                            }

                            calcDecoyValues()
                        </script>
                    </details>
                    <p></p>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/elementstarter.png" width="34" height="34">
                                Element Starter
                            </p>
                            <p class="medium">
                                Skill Element Starter Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>The element of bow or bowgun will be activated at the same time as the arrow. <b
                                    style="color:#E77577">*Not valid for dual element skills.</b><br>
                                Gets a small recovery barrier each time you deal damage to targets with the element you
                                are weak to.</p>
                        </div>
                    </div>
                </div>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/fatalshot.png" width="34" height="34">
                                Fatal Shot
                            </p>
                            <p class="medium">
                                Skill Fatal Shot Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/bg.png"><img src="../../images/icon/bow.png"><br>Bowgun/Bow only
                        </div>
                    </div>
                    <hr class="separator"/>

                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>14</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>A shot skill that pierces through a strong armor. It's a unique attack with a high
                                critical rate, but low accuracy. If it hits the target right, the tap time to break
                                monster's part will be extended.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="fatalShotLevel" onchange="calcFatalShotValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"> <b>Total STR:</b></span>
                        <input type="number" value="247" id="fatalShotStrValue" onchange="calcFatalShotValues()"
                            style="width: 50px;"><br>
                        <span class="sub-title"> <b>Total DEX:</b></span>
                        <input type="number" value="255" id="fatalShotDexValue" onchange="calcFatalShotValues()"
                            style="width: 50px;"><br>
                        <br>
                        <span id="fatalShotValues">
                            <li><b>Skill Constant:</b> 200</li>
                            <li><b>Skill Multiplier :</b> 8.51</li><br>
                            <li><b>Accuracy</b> of <b>Fatal Shot</b> -80%</li>
                            <li><b>Critical Rate</b> of <b>Fatal Shot</b> +75</li>
                            <li>If this skill deals a <b>successful hit</b> (not [Miss]/[Graze]/[Evaded]), tap break
                                time is extended by 5 seconds</li><br>Credits to <b>Phantom Library</b> and Xenesis5 for
                            the info of the skill
                        </span>

                        <script>
                            function calcFatalShotConstant(level, result) {
                                result.innerHTML = `<li><b>Skill Constant:</b> 200</li>`
                            }

                            function calcFatalShotMultiplier(level, dexValue, strValue, result) {
                                var multiplier = 5 + (0.1 * level) + dexValue / 200 + strValue / 200
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.009999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier :</b> ${multiplier}</li><br>`
                            }

                            function addFatalShotExtraInfo(level, result) {
                                var acc = 100 - 2 * level
                                var cr = 25 + 5 * level
                                var breakTime = Math.floor(level / 2)
                                HTML = `<li><b>Accuracy</b> of <b>Fatal Shot</b> -${acc}%</li>
                        <li><b>Critical Rate</b> of <b>Fatal Shot</b> +${cr}</li>`
                                if (breakTime > 0) {
                                    HTML += `<li>If this skill deals a <b>successful hit</b> (not [Miss]/[Graze]/[Evaded]), tap break time is extended by ${breakTime} second`
                                    if (breakTime != 1) { HTML += `s` }
                                    HTML += `</li>`
                                }
                                result.innerHTML += HTML
                            }

                            function calcFatalShotValues() {
                                var levelSelector = document.getElementById("fatalShotLevel")
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var dexValue = document.getElementById("fatalShotDexValue").value
                                var strValue = document.getElementById("fatalShotStrValue").value
                                var result = document.getElementById("fatalShotValues")
                                calcFatalShotConstant(level, result)
                                calcFatalShotMultiplier(level, dexValue, strValue, result)
                                addFatalShotExtraInfo(level, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> and Xenesis5 for the info of the skill`
                            }

                            calcFatalShotValues()
                        </script>
                    </details>
                    <p></p>
                </div>
            </div>
        </div>

</body>
