<!DOCTYPE html>

<html>

<head>
    <title>Halberd Skills Tree</title>
    <link rel="icon" type="image/x-icon" href="../images/favicon.ico">
    <%- include('../../templates/headers/metadata') %>

        <link rel="stylesheet" href="../../templates/functions-skills-list/skills.css">

        <script src="../templates/axios.min.js"></script>
        <script>
            // wew have works to do
            function roundToTwoDecimals(value) {
                return Math.round(value * 100) / 100;
            }
        </script>
</head>

<body>
    <%- include('../../templates/headers/header') %>

        <div id="content">
            <div class="container">
                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/flashstab.png" width="34" height="34">
                                Flash Stab
                            </p>
                            <p class="medium">
                                Skill Flash Stab Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/ohs.png"><img src="../../images/icon/halb.png"><br>1-Handed
                            Sword/Halberd
                            only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>2</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Sharply attack an enemy with a quick movement.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>Boost on Activation Speed.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="flashStabWeaponType" onchange="calcFlashStabValues()">
                            <option value="1h">1-Handed Sword</option>
                            <option value="hb" selected="">Halberd</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="flashStabSkillLevel" onchange="calcFlashStabValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Flash Stab Enhancer" Registlet Level:</b></span>
                        <select id="flashStabRegistlet" onchange="calcFlashStabValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                        </select><br>
                        <br>
                        <span id="flashStabValues">
                            <li><b>Skill Constant:</b> 100</li>
                            <li><b>Skill Multiplier:</b> 1.5</li><br>
                            <li><b>Motion Speed</b> of <b>Flash Stab</b> +50%</li><br>This skill's <b>maximum cast
                                range</b> is equal to the maximum auto attack range of the <b>main weapon</b>
                        </span>

                        <script>
                            function calcFlashStabConstant(level, result) {
                                let constant = 50 + 5 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcFlashStabMultiplier(level, registlet, result) {
                                let multiplier = 1 + 0.05 * level + 0.05 * registlet
                                multiplier = Math.round(multiplier * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function calcFlashStabMotion(weapon, result) {
                                var motionSpeed = 25
                                if (weapon == "hb") { motionSpeed += 25 }
                                result.innerHTML += `<li><b>Motion Speed</b> of <b>Flash Stab</b> +${motionSpeed}%</li>`
                            }

                            function calcFlashStabValues() {
                                let levelSelector = document.getElementById('flashStabSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('flashStabWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let result = document.getElementById('flashStabValues')
                                let registletSelector = document.getElementById("flashStabRegistlet");
                                let registlet = registletSelector[registletSelector.selectedIndex].value;
                                calcFlashStabConstant(level, result)
                                calcFlashStabMultiplier(level, registlet, result)
                                calcFlashStabMotion(weapon, result)
                                result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
                            }

                            calcFlashStabValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/cannonspear.png" width="34" height="34">
                                Cannon Spear
                            </p>
                            <p class="medium">
                                Skill Cannon Spear Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>4</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Attack an enemy by throwing the halberd. The range increases as the skill levels up.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="cannonSpearSkillLevel" onchange="calcCannonSpearValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Cannon Spear Enhancer" Registlet Level:</b></span>
                        <select id="cannonSpearRegistlet" onchange="calcCannonSpearValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select><br>
                        <br>
                        <span id="cannonSpearValues">
                            <li><b>Skill Constant (First Hit):</b> 200</li>
                            <li><b>Skill Constant (Toss):</b> 0</li>
                            <li><b>Skill Multiplier (First Hit):</b> 0.5</li>
                            <li><b>Skill Multiplier (Toss):</b> 2.5</li>
                            <li><b>Hit Count:</b> 2 hits on the main target; 1 hit on all other targets; damage
                                calculation is done for each hit</li><br>
                            <li><b>Hit Range (Toss):</b> Length of 12m and radius of 2m, from the <b>caster</b> towards
                                the <b>main target</b></li><br>This skill's <b>maximum cast range</b> is equal to the
                            maximum auto attack range of the <b>main weapon</b>
                        </span>

                        <script>
                            function calcCannonSpearConstant(level, result) {
                                let firstConstant = 100 + 10 * level
                                let tossConstant = 0
                                result.innerHTML = `<li><b>Skill Constant (First Hit):</b> ${firstConstant}</li>
                    <li><b>Skill Constant (Toss):</b> ${tossConstant}</li>`
                            }

                            function calcCannonSpearMultiplier(level, result) {
                                let firstMultiplier = 0.4 + 0.01 * level
                                let tossMultiplier = 1.5 + 0.1 * level
                                firstMultiplier = Math.floor(firstMultiplier * 100) / 100
                                tossMultiplier = Math.round(tossMultiplier * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier (First Hit):</b> ${firstMultiplier}</li>
                    <li><b>Skill Multiplier (Toss):</b> ${tossMultiplier}</li>
                    <li><b>Hit Count:</b> 2 hits on the main target; 1 hit on all other targets; damage calculation is done for each hit</li><br>`
                            }

                            function calcCannonSpearHitRange(level, result) {
                                let tossRange = 7 + Math.ceil(level / 2)
                                let tossRadius = 1 + Math.floor(level / 6)
                                result.innerHTML += `<li><b>Hit Range (Toss):</b> Length of ${tossRange}m and radius of ${tossRadius}m, from the <b>caster</b> towards the <b>main target</b></li>`
                            }

                            function calcCannonSpearFlinchChance(registlet, result) {
                                let flinchChance = 10 * registlet
                                if (registlet > 0) { result.innerHTML += `<li><b>Flinch Chance (First Hit):</b> ${flinchChance}%</li>` }
                            }

                            function calcCannonSpearValues() {
                                let levelSelector = document.getElementById('cannonSpearSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let registletSelector = document.getElementById("cannonSpearRegistlet")
                                let registlet = registletSelector[registletSelector.selectedIndex].value
                                let result = document.getElementById('cannonSpearValues')
                                calcCannonSpearConstant(level, result)
                                calcCannonSpearMultiplier(level, result)
                                calcCannonSpearHitRange(level, result)
                                calcCannonSpearFlinchChance(registlet, result)
                                result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
                            }

                            calcCannonSpearValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/dragontail.png" width="34" height="34">
                                Dragon Tail
                            </p>
                            <p class="medium">
                                Skill Dragon Tail Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>300</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>24</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Whirl around the Halberd and swipe enemies. While active, damage taken will be reduced 2
                                times. Chance to inflict [Tumble]. Unable to inflict Tumble on boss monsters.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="dragonTailSkillLevel" onchange="calcDragonTailValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>"Dragon Tail Enhancer" Registlet Level:</b></span>
                        <select id="dragonTailRegistlet" onchange="calcDragonTailValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                        </select><br>
                        <br>
                        <span id="dragonTailValues">
                            <li><b>Skill Constant (First Hit):</b> 100</li>
                            <li><b>Skill Constant (Second Hit):</b> 200</li>
                            <li><b>Skill Multiplier (First Hit):</b> 1 </li>
                            <li><b>Skill Multiplier (Second Hit):</b> 4 </li>
                            <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>
                            <li><b>Hit Range (radius):</b>
                                <ul>
                                    <li>&nbsp;&nbsp;- <b>First Hit:</b> 2.5m, around the <b>caster</b></li>
                                    <li>&nbsp;&nbsp;- <b>Second Hit:</b> 4m, around the <b>caster</b></li>
                                </ul>
                            </li>
                            <li>Grants <b>Dragon Tail buffs</b> upon <b>each hit animation</b></li>
                            <li><b>Tumble Chance:</b> 100%; unavailable on <b>bosses</b></li>
                            <li><b>Tumble Duration:</b> 3 seconds</li>
                            <li><b>Resistance Duration:</b> 6 second</li><br><b>Buff Effect:</b>
                            <li>Reduces <b>physical/magic damage received</b> once during <b>each hit animation of the
                                    skill</b>
                                <ul>
                                    <li>&nbsp;&nbsp;- During <b>First Hit's animation</b>: Reduces damage taken by 50%
                                    </li>
                                    <li>&nbsp;&nbsp;- During <b>Second Hit's animation</b>: Reduces damage taken by 100%
                                    </li>
                                    <li>&nbsp;&nbsp;- The damage reduction effect can only reduce received damage to a
                                        minimum of 1</li>
                                </ul>
                            </li>
                            <li><b>Buff Duration:</b> Until you get hit OR until the respective hit animation ends</li>
                            <br><b>Extra info:</b>
                            <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding
                                ailment; most ailments have the same resistance duration as their own duration, unless
                                stated otherwise</li>
                        </span>

                        <script>
                            function calcDragonTailConstant(level, result) {
                                let constant1 = 100
                                let constant2 = 50 + (15 * level)
                                result.innerHTML = `<li><b>Skill Constant (First Hit):</b> ${constant1}</li>
                    <li><b>Skill Constant (Second Hit):</b> ${constant2}</li>`
                            }

                            function calcDragonTailMultiplier(level, registlet, result) {
                                let multiplier1 = 0.7 + (0.03 * level)
                                let multiplier2 = 2 + (0.2 * level) + (0.05 * registlet)
                                multiplier1 = Math.round(multiplier1 * 100) / 100
                                multiplier2 = Math.round(multiplier2 * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier (First Hit):</b> ${multiplier1} </li>
                    <li><b>Skill Multiplier (Second Hit):</b> ${multiplier2} </li>
                    <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>`
                            }

                            function calcDragonTailHitRange(level, result) {
                                // initialize hit range into an array : 
                                let firstHit = 1.5 + Math.floor(level / 6)
                                let secondHit = 2 + 0.5 * Math.ceil(level / 3)
                                result.innerHTML += `<li><b>Hit Range (radius):</b><ul>
                    <li>&nbsp&nbsp- <b>First Hit:</b> ${firstHit}m, around the <b>caster</b></li>
                    <li>&nbsp&nbsp- <b>Second Hit:</b> ${secondHit}m, around the <b>caster</b></li>
                    </ul></li>`
                            }

                            function calcDragonTailAilmentChance(level, result) {
                                let ailmentChance = 10 * level
                                result.innerHTML += `<li>Grants <b>Dragon Tail buffs</b> upon <b>each hit animation</b></li>
                    <li><b>Tumble Chance:</b> ${ailmentChance}%; unavailable on <b>bosses</b></li>
                    <li><b>Tumble Duration:</b> 3 seconds</li>
                    <li><b>Resistance Duration:</b> 6 second</li>`
                            }

                            function calcDragonTailDamageCut(level, result) {
                                let damageCut1 = 50
                                let damageCut2 = 10 * level
                                result.innerHTML += `<br><b>Buff Effect:</b>
                    <li>Reduces <b>physical/magic damage received</b> once during <b>each hit animation of the skill</b><ul>
                    <li>&nbsp&nbsp- During <b>First Hit's animation</b>: Reduces damage taken by ${damageCut1}%</li>
                    <li>&nbsp&nbsp- During <b>Second Hit's animation</b>: Reduces damage taken by ${damageCut2}%</li>
                    <li>&nbsp&nbsp- The damage reduction effect can only reduce received damage to a minimum of 1</li>
                    </ul></li>
                    <li><b>Buff Duration:</b> Until you get hit OR until the respective hit animation ends</li>`
                            }

                            function addDragonTailExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>`
                            }

                            function calcDragonTailValues() {
                                let levelSelector = document.getElementById('dragonTailSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let registletSelector = document.getElementById("dragonTailRegistlet")
                                let registlet = registletSelector[registletSelector.selectedIndex].value
                                let result = document.getElementById('dragonTailValues')
                                calcDragonTailConstant(level, result)
                                calcDragonTailMultiplier(level, registlet, result)
                                calcDragonTailHitRange(level, result)
                                calcDragonTailAilmentChance(level, result)
                                calcDragonTailDamageCut(level, result)
                                addDragonTailExtraInfo(result)
                            }

                            calcDragonTailValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/diveimpact.png" width="34" height="34">
                                Dive Impact
                            </p>
                            <p class="medium">
                                Skill Dive Impact Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>4</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>The Halberd thrusted breaks the earth in time. Generates a mass explosion and deal
                                additional damage after a while with a chance to inflict [Dazzled] when the skill is
                                activated. Become invincible when activating the skill.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="diveImpactSkillLevel" onchange="calcDiveImpactValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total STR:</b></span>
                        <input type="number" value="255" id="diveImpactStrValues" onchange="calcDiveImpactValues()"
                            style="width: 50px;"><br>
                        <span class="sub-title"><b>Total INT:</b></span>
                        <input type="number" value="1" id="diveImpactIntValue" onchange="calcDiveImpactValues()"
                            style="width: 50px;"><br>
                        <span class="sub-title"><b>"Focus Dive Impact" Registlet Level:</b></span>
                        <select id="diveImpactRegistlet" onchange="calcDiveImpactValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                        </select><br>
                        <br>
                        <span id="diveImpactValues">
                            <li><b>Skill Constant (First Hit):</b> 400</li>
                            <li><b>Skill Constant (Second Hit):</b> 0</li>
                            <li><b>Skill Multiplier (First Hit):</b> 5.02</li>
                            <li><b>Skill Multiplier (Second Hit):</b> 6.01</li>
                            <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>
                            <li><b>Hit Range (radius):</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>First Hit:</b> 5m, around the <b>caster</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>Second Hit:</b> 7m around the <b>caster's position when
                                            the skill is cast</b></li>
                                </ul>
                            </li>
                            <li>Upon using this skill, gain [Invincible] for 3 seconds OR until you land</li>
                            <li><b>Dazzled Chance (Second Hit):</b> 100%</li>
                            <li><b>Dazzled Duration:</b> 10 seconds</li>
                            <li><b>Dazzled Resistance Duration:</b> 40 seconds</li><br><b>Extra Info:</b>
                            <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding
                                ailment; most ailments have the same resistance duration as their own duration, unless
                                stated otherwise</li>
                            <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the
                                <b>main weapon</b>
                            </li>
                            <li>The <b>second hit</b> detonates in 4 seconds <b>after the first hit</b></li>
                            <li>Both hits are affected by <b>Whack</b>, but only the first hit is affected by <b>Long
                                    Range Damage</b> and <b>Short Range Damage</b> stats</li>
                            <li>This skill is <b>unaffected by motion speed modifier</b></li>
                        </span>

                        <script>
                            function calcDiveImpactConstant(level, result) {
                                let constant1 = 200 + (20 * level)
                                let constant2 = 0
                                result.innerHTML = `<li><b>Skill Constant (First Hit):</b> ${constant1}</li>
                    <li><b>Skill Constant (Second Hit):</b> ${constant2}</li>`
                            }

                            function caclDiveImpactMultiplier(level, strValue, intValue, result) {
                                let multiplier1 = 2 + (0.2 * level) + (strValue / 250)
                                let multiplier2 = 2 + (0.4 * level) + (intValue / 100)
                                if (multiplier1 - Math.floor(multiplier1 * 100) / 100 < 0.00999999) { multiplier1 = Math.floor(multiplier1 * 100) / 100 }
                                else { multiplier1 = Math.round(multiplier1 * 100) / 100 }
                                multiplier2 = Math.round(multiplier2 * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier (First Hit):</b> ${multiplier1}</li>
                    <li><b>Skill Multiplier (Second Hit):</b> ${multiplier2}</li>
                    <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>`
                            }

                            function caclDiveImpactHitRange(level, registlet, result) {
                                let firstHitRange = 2.5 + (0.25 * level)
                                let secondHitRange = 4.5 + (0.25 * level)
                                if (registlet == 0) {
                                    result.innerHTML += `<li><b>Hit Range (radius):</b><ul>
                    <li>&nbsp&nbsp&nbsp- <b>First Hit:</b> ${firstHitRange}m, around the <b>caster</b></li>
                    <li>&nbsp&nbsp&nbsp- <b>Second Hit:</b> ${secondHitRange}m around the <b>caster's position when the skill is cast</b></li>
                    </ul></li>`}
                                else { result.innerHTML += `<li><b>Hit Range:</b> main target only</li>` }
                            }

                            function calcDiveImpactAilmentInfo(level, registlet, result) {
                                let ailmentChance = 10 * level
                                let ailmentResist = 40 - 2 * registlet
                                result.innerHTML += `<li>Upon using this skill, gain [Invincible] for 3 seconds OR until you land</li>
                    <li><b>Dazzled Chance (Second Hit):</b> ${ailmentChance}%</li>
                    <li><b>Dazzled Duration:</b> 10 seconds</li>
                    <li><b>Dazzled Resistance Duration:</b> ${ailmentResist} seconds</li>`
                            }

                            function diveImpactExtraInformation(result) {
                                result.innerHTML += `<br><b>Extra Info:</b>
                    <li><b>Ailment Resistance Duration</b> starts upon successfully inflicting the corresponding ailment; most ailments have the same resistance duration as their own duration, unless stated otherwise</li>
                    <li>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b></li>
                    <li>The <b>second hit</b> detonates in 4 seconds <b>after the first hit</b></li>
                    <li>Both hits are affected by <b>Whack</b>, but only the first hit is affected by <b>Long Range Damage</b> and <b>Short Range Damage</b> stats</li>
                    <li>This skill is <b>unaffected by motion speed modifier</b></li>`
                            }

                            function calcDiveImpactValues() {
                                let levelSelector = document.getElementById('diveImpactSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let strValue = document.getElementById('diveImpactStrValues').value
                                let intValue = document.getElementById('diveImpactIntValue').value
                                let registletSelector = document.getElementById("diveImpactRegistlet")
                                let registlet = registletSelector[registletSelector.selectedIndex].value
                                let result = document.getElementById('diveImpactValues')
                                calcDiveImpactConstant(level, result)
                                caclDiveImpactMultiplier(level, strValue, intValue, result)
                                caclDiveImpactHitRange(level, registlet, result)
                                calcDiveImpactAilmentInfo(level, registlet, result)
                                diveImpactExtraInformation(result)
                            }

                            calcDiveImpactValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/dragontooth.png" width="34" height="34">
                                Dragon Tooth
                            </p>
                            <p class="medium">
                                Skill Dragon Tooth Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>500</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Jump toward a target and attack. After using the skill, you will return to the original
                                place. It has high Defense Ignorance and Critical Rate but has no bonus on power.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="dragonToothSkillLevel" onchange="calcDragonToothValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <label for="weaponRange" class="sub-title"><b>Weapon Auto-Attack Range (m):</b></label>
                        <input type="number" value="3.5" step="0.5" min="1" max="6" id="dragonToothWeaponRange"
                            onchange="calcDragonToothValues()" style="width: 50px;"><br>
                        <br>
                        <span id="dragonToothValues">
                            <li><b>Skill Constant:</b> 0; constant for each hit</li>
                            <li><b>Skill Multiplier (First Hit):</b> 7.5</li>
                            <li><b>Skill Multiplier (Second Hit):</b> 7.5</li>
                            <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>
                            <li><b>Hit Range:</b> Single target, but has a <b>radius</b> of 4m around the <b>caster's
                                    landing position</b>; the hit will fail to land if the target is outside of this
                                range</li>
                            <li><b>Critical Rate</b> of <b>Dragon Tooth</b> +75</li>
                            <li><b>Physical Pierce</b> of <b>Dragon Tooth</b> +100% </li>
                            <li>The caster will first <b>jump</b> to roughly 0m in front of the target, then <b>jump</b>
                                back to the original position</li>
                            <li>Negate <b>[Flinch]</b>, <b>[Tumble]</b> and <b>[Stun]</b> during the skill's animation
                            </li><br><b>Extra info:</b>
                            <li>The said "0m from the target" of the <b>first jump</b> is the displayed distance from
                                the <b>caster</b> to the <b>edge of the target's circular hitbox</b> (vaguely indicated
                                by their target circle) after the <b>first jump</b>; if you are already within said
                                range, you will <b>jump</b> toward the <b>target's center</b> instead</li>
                            <li>This skill's jump speed is determined by <b>Motion Speed</b></li>
                        </span>

                        <script>
                            function calcDragonToothConstant(result) {
                                result.innerHTML = `<li><b>Skill Constant:</b> 0; constant for each hit</li>`
                            }

                            function calcDragonToothMultiplier(level, result) {
                                let firstHit = 0.75 * level
                                let secondHit = 7.5
                                result.innerHTML += `<li><b>Skill Multiplier (First Hit):</b> ${firstHit}</li>
                    <li><b>Skill Multiplier (Second Hit):</b> ${secondHit}</li>
                    <li><b>Hit Count:</b> 2 hits; damage calculation is done for each hit</li><br>`
                            }

                            function calcDragonToothHitRange(attackRange, result) {
                                let hitRange = 0.5 + 1 * attackRange
                                result.innerHTML += `<li><b>Hit Range:</b> Single target, but has a <b>radius</b> of ${hitRange}m around the <b>caster's landing position</b>; the hit will fail to land if the target is outside of this range</li>`
                            }

                            function calcDragonToothCrit(level, result) {
                                let baseCr = 65
                                let cr = baseCr + parseInt(level)
                                result.innerHTML += `<li><b>Critical Rate</b> of <b>Dragon Tooth</b> +${cr}</li>`
                            }

                            function calcDragonToothPhysPierce(level, result) {
                                let pysPierce = 10 * level
                                result.innerHTML += `<li><b>Physical Pierce</b> of <b>Dragon Tooth</b> +${pysPierce}% </li>`
                            }

                            function dragonToothSkillEffect(result) {
                                result.innerHTML += `<li>The caster will first <b>jump</b> to roughly 0m in front of the target, then <b>jump</b> back to the original position</li>
                    <li>Negate <b>[Flinch]</b>, <b>[Tumble]</b> and <b>[Stun]</b> during the skill's animation</li>`
                            }

                            function dragonToothExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li>The said "0m from the target" of the <b>first jump</b> is the displayed distance from the <b>caster</b> to the <b>edge of the target's circular hitbox</b> (vaguely indicated by their target circle) after the <b>first jump</b>; if you are already within said range, you will <b>jump</b> toward the <b>target's center</b> instead</li>
                    <li>This skill's jump speed is determined by <b>Motion Speed</b></li>`
                            }

                            function calcDragonToothValues() {
                                let levelSelector = document.getElementById('dragonToothSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let attackRange = document.getElementById('dragonToothWeaponRange').value
                                let result = document.getElementById('dragonToothValues')
                                calcDragonToothConstant(result)
                                calcDragonToothMultiplier(level, result)
                                calcDragonToothHitRange(attackRange, result)
                                calcDragonToothCrit(level, result)
                                calcDragonToothPhysPierce(level, result)
                                dragonToothSkillEffect(result)
                                dragonToothExtraInfo(result)
                            }

                            calcDragonToothValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/draconiccharge.png" width="34" height="34">
                                Draconic Charge
                            </p>
                            <p class="medium">
                                Skill Draconic Charge Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>300</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>24</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Unleashes the rage of a dragon. Activates when it is full or when you move. Accumulate
                                more rage if you sense danger when charging.<br>
                                <font style="color: #009fff">Be careful not to miss as the range of the charge attack is
                                    only 8 meters.</font>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="draconicChargeSkillLevel" onchange="calcDraconicChargeValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Teleport Distance (m):</b></span>
                        <input type="number" min="0" max="8" value="0" id="draconicChargeTeleRange"
                            onchange="calcDraconicChargeValues()" style="width: 30px;"><br>
                        <span class="sub-title"><b>Main Weapon Element:</b></span>
                        <select id="draconicChargeElement" onchange="calcDraconicChargeValues()">
                            <option value="Neutral" selected="">Neutral</option>
                            <option value="Fire">Fire</option>
                            <option value="Water">Water</option>
                            <option value="Wind">Wind</option>
                            <option value="Earth">Earth</option>
                            <option value="Light">Light</option>
                            <option value="Dark">Dark</option>
                        </select><br>
                        <span class="sub-title"><b>Skill is used in a combo:</b> </span>
                        <input type="checkbox" id="draconicChargeInCombo" onchange="calcDraconicChargeValues()"><br>
                        <div id="draconicChargeComboFalse" style="display: block;">
                            <span class="sub-title"><b>Charge Amount (%):</b></span>
                            <input type="number" min="20" max="100" value="20" id="draconicChargeChargeAmount"
                                onchange="calcDraconicChargeValues()" style="width: 50px;">
                        </div>
                        <div id="draconicChargeComboTrue" style="display: none;">
                            <span class="sub-title"> <b>Position in combo:</b></span>
                            <input type="number" value="1" min="1" max="10" id="draconicChargeComboCount"
                                onchange="calcDraconicChargeValues()" style="width: 30px;">
                        </div>
                        <br>
                        <span id="draconicChargeValues">
                            <li><b>Skill Constant (First Hit):</b> 300</li>
                            <li><b>Skill Constant (Second Hit):</b> 0</li>
                            <li><b>Skill Multiplier:</b> 11; multiplier for each hit</li>
                            <li><b>Hit Count:</b> 2 hits on the <b>main target</b>; 1 hit on all other targets; damage
                                calculation is done for each hit</li><br>
                            <li><b>Hit Range (First Hit):</b> Single target, but <b>can only hit if the target is within
                                    maximum teleport range</b></li>
                            <li><b>Hit Range (Second Hit):</b> Fan shape with radius of 4m and angle of 90°; in front of
                                the <b>caster after the teleport</b></li>
                            <li>The <b>First Hit</b> has the <b>Perfect Aim</b> attribute: it cannot [Miss] or [Graze],
                                but can be [Evaded]</li>
                            <li>The <b>Second Hit</b> will <b>always deal critical hits</b>; however, if it is [Evaded]
                                (exclude <b>Absolute/Forced Evasion</b>), it will result in a non-critical hit instead
                            </li><br><b>Skill Effect:</b>
                            <li>Upon casting this skill <b>manually</b>, you will enter <b>charge stance</b> and start
                                charging<ul>
                                    <li>&nbsp;&nbsp;&nbsp;- Gains 20% charge for every second of charging</li>
                                    <li>&nbsp;&nbsp;&nbsp;- The current charge amount will <b>instantly become 100%</b>
                                        as soon as the caster "senses" an AoE warning <b>during the charge</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- The skill will stop charging and be released immediately
                                        upon <b>using movement input</b> or <b>reaching 100% charge</b>; can only be
                                        released after reaching at least 20% charge</li>
                                </ul>
                            </li>
                            <li>Upon casting this skill <b>in a combo</b>, you will <b>immediately release the skill</b>
                                with a <b>fixed charge amount</b> that depends on this skill's position in the combo
                            </li>
                            <li>The caster will <b>teleport</b> to roughly 0m in front of the <b>main target</b> upon
                                release; can only teleport over a <b>maximum distance</b> of 8m, however</li>
                            <br><b>Extra info:</b>
                            <li>The said "distance from the target" of the <b>teleport</b> is the displayed distance
                                from the <b>caster</b> to the <b>edge of the target's circular hitbox</b> (vaguely
                                indicated by their target circle) after the <b>teleport</b>; if you are already within
                                said range, the <b>teleport</b> will be skipped</li>
                            <li>The <b>Second Hit</b> of this skill uses <b>[ATK + floor(MATK × 50%)] and target's
                                    MDEF</b> for its <b>base damage calculation</b>, and goes through <b>Physical Damage
                                    calculation</b> for the rest of its damage calculation; as a result, <b>Physical
                                    Pierce</b> cannot affect its damage, while <b>Magic Pierce</b> can</li>
                            <li>This skill is affected by <b>Long Range passive</b>, and is always affected by <b>Short
                                    Range Damage</b> stat, but not <b>Long Range Damage</b> stat, possibly due to how
                                the skill functions (teleport to 0m before the target first then deal damage, making it
                                always treated as "short range" as a result)</li>
                        </span>

                        <script>
                            function draconicComboCheck(inCombo, comboFalseSection, comboTrueSection) {
                                if (inCombo) {
                                    comboFalseSection.style = "display: none"
                                    comboTrueSection.style = "display: block"
                                }
                                else {
                                    comboFalseSection.style = "display: block"
                                    comboTrueSection.style = "display: none"
                                }
                            }

                            function calcDraconicChargeConstant(result) {
                                result.innerHTML = `<li><b>Skill Constant (First Hit):</b> 300</li>
                    <li><b>Skill Constant (Second Hit):</b> 0</li>`
                            }

                            function calcDraconicChargeMultiplier(level, inCombo, chargeInput, comboCount, result) {
                                var charge = 0
                                if (!inCombo) { charge = 1 * chargeInput }
                                else { charge = Math.max(10, (comboCount - 1) * 5) }
                                var multiplier = (5 + 0.5 * level) * (90 + charge) / 100
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; multiplier for each hit</li>
                    <li><b>Hit Count:</b> 2 hits on the <b>main target</b>; 1 hit on all other targets; damage calculation is done for each hit</li><br>`
                            }

                            function calcDraconicChargeHitRange(result) {
                                result.innerHTML += `<li><b>Hit Range (First Hit):</b> Single target, but <b>can only hit if the target is within maximum teleport range</b></li>
                    <li><b>Hit Range (Second Hit):</b> Fan shape with radius of 4m and angle of 90°; in front of the <b>caster after the teleport</b></li>`
                            }

                            function calcDraconicChargePhysPierce(teleRange, result) {
                                let pp = 10 * Math.max(0, teleRange * 1 - 1)
                                if (pp > 0) { result.innerHTML += `<li><b>Physical Pierce</b> of <b>First Hit</b> +${pp}% </li>` }
                            }

                            function calcDraconicChargeHitEffect(level, element, result) {
                                var ailment = ``
                                switch (element) {
                                    case "Fire": ailment = `Ignite`; break
                                    case "Water": ailment = `Freeze`; break
                                    case "Wind": ailment = `Slow`; break
                                    case "Earth": ailment = `Poison`; break
                                    case "Light": ailment = `Blind`; break
                                    case "Dark": ailment = `Curse`; break
                                }
                                var chance = level * level
                                result.innerHTML += `<li>The <b>First Hit</b> has the <b>Perfect Aim</b> attribute: it cannot [Miss] or [Graze], but can be [Evaded]</li>
                    <li>The <b>Second Hit</b> will <b>always deal critical hits</b>; however, if it is [Evaded] (exclude <b>Absolute/Forced Evasion</b>), it will result in a non-critical hit instead</li>`
                                if (element != "Neutral") {
                                    result.innerHTML += `<li><b>${ailment} Chance (Second Hit):</b> ${chance}%</li>
                    <li><b>${ailment} Duration:</b> 10 seconds</li>`
                                }
                            }

                            function draconicChargeSkillEffect(result) {
                                result.innerHTML += `<br><b>Skill Effect:</b>
                    <li>Upon casting this skill <b>manually</b>, you will enter <b>charge stance</b> and start charging<ul>
                    <li>&nbsp&nbsp&nbsp- Gains 20% charge for every second of charging</li>
                    <li>&nbsp&nbsp&nbsp- The current charge amount will <b>instantly become 100%</b> as soon as the caster "senses" an AoE warning <b>during the charge</b></li>
                    <li>&nbsp&nbsp&nbsp- The skill will stop charging and be released immediately upon <b>using movement input</b> or <b>reaching 100% charge</b>; can only be released after reaching at least 20% charge</li>
                    </ul></li>
                    <li>Upon casting this skill <b>in a combo</b>, you will <b>immediately release the skill</b> with a <b>fixed charge amount</b> that depends on this skill's position in the combo</li>
                    <li>The caster will <b>teleport</b> to roughly 0m in front of the <b>main target</b> upon release; can only teleport over a <b>maximum distance</b> of 8m, however</li>`
                            }

                            function addDraconicChargeExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                    <li>The said "distance from the target" of the <b>teleport</b> is the displayed distance from the <b>caster</b> to the <b>edge of the target's circular hitbox</b> (vaguely indicated by their target circle) after the <b>teleport</b>; if you are already within said range, the <b>teleport</b> will be skipped</li>
                    <li>The <b>Second Hit</b> of this skill uses <b>[ATK + floor(MATK × 50%)] and target's MDEF</b> for its <b>base damage calculation</b>, and goes through <b>Physical Damage calculation</b> for the rest of its damage calculation; as a result, <b>Physical Pierce</b> cannot affect its damage, while <b>Magic Pierce</b> can</li>
                    <li>This skill is affected by <b>Long Range passive</b>, and is always affected by <b>Short Range Damage</b> stat, but not <b>Long Range Damage</b> stat, possibly due to how the skill functions (teleport to 0m before the target first then deal damage, making it always treated as "short range" as a result)</li>`
                            }

                            function calcDraconicChargeValues() {
                                let levelSelector = document.getElementById('draconicChargeSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let teleRange = document.getElementById('draconicChargeTeleRange').value
                                let elementSelector = document.getElementById("draconicChargeElement")
                                let element = elementSelector[elementSelector.selectedIndex].value
                                let inCombo = document.getElementById("draconicChargeInCombo").checked
                                let comboFalseSection = document.getElementById("draconicChargeComboFalse")
                                let chargeInput = document.getElementById('draconicChargeChargeAmount').value
                                let comboTrueSection = document.getElementById("draconicChargeComboTrue")
                                let comboCount = document.getElementById("draconicChargeComboCount").value
                                let result = document.getElementById('draconicChargeValues')
                                draconicComboCheck(inCombo, comboFalseSection, comboTrueSection)
                                calcDraconicChargeConstant(result)
                                calcDraconicChargeMultiplier(level, inCombo, chargeInput, comboCount, result)
                                calcDraconicChargeHitRange(result)
                                calcDraconicChargeHitEffect(level, element, result)
                                calcDraconicChargePhysPierce(teleRange, result)
                                draconicChargeSkillEffect(result)
                                addDraconicChargeExtraInfo(result)
                            }

                            calcDraconicChargeValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/deadlyspear.png" width="34" height="34">
                                Deadly Spear
                            </p>
                            <p class="medium">
                                Skill Deadly Spear Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/ohs.png"><img src="../../images/icon/halb.png"><br>1-Handed
                            Sword/Halberd
                            only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>2</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Accurately thrust an enemy and deal fatal damage. It takes time to activate, but it
                                ignores certain amount of defense and has a high chace to inflict critical damage, and
                                when it happens, the MP Cost for the next skill used is halved.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>Power +20</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/ohs.png"></p>
                                <p>1 Handed Sword</p>
                            </div>
                            <p><b style="color: #E77577">Reduction on Critical Rate</b></p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="deadlySpearWeaponType" onchange="calcDeadlySpearValues()">
                            <option value="1h">1-Handed Sword</option>
                            <option value="hb" selected="">Halberd</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="deadlySpearSkillLevel" onchange="calcDeadlySpearValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total Critical Rate:</b></span>
                        <input type="number" style="width: 50px;" id="deadlySpearCritValues"
                            onchange="calcDeadlySpearValues()" min="0" value="25"><br>
                        <br>
                        <span id="deadlySpearValues">
                            <li><b>Skill Constant:</b> 110</li>
                            <li><b>Skill Multiplier:</b> 1.7</li><br>
                            <li><b>Base Charge Time:</b> 0 seconds (unaffected by CSPD)</li>
                            <li><b>Critical Rate</b> of <b>Deadly Spear</b> +75</li>
                            <li><b>Physical Pierce</b> of <b>Deadly Spear</b> +25%</li>
                            <li>Grants <b>Deadly Spear buff</b> if this skill deals a critical hit</li><br>
                            <b>Buff Effect:</b>
                            <li>The next <b>skill</b> has its <b>MP Cost halved</b>, rounded up to the nearest multiple
                                of 100</li>
                            <li><b>Buff Duration:</b> Until a skill is used</li><br>This skill's <b>maximum cast
                                range</b> is equal to the maximum auto attack range of the <b>main weapon</b>
                        </span>

                        <script>
                            function calcDeadlySpearConstant(level, result) {
                                let constant = 80 + (3 * level)
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}</li>`
                            }

                            function calcDeadlySpearMultiplier(level, weapon, result) {
                                let baseMultiplier = 1.2
                                let multiplier = baseMultiplier + 0.05 * level
                                if (weapon == '1h') { multiplier -= 0.2 }
                                multiplier = Math.round(multiplier * 100) / 100
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function calcDeadlySpearChargeTime(level, result) {
                                let chargeTime = 1.5 - 0.5 * Math.floor((level * 1 + 1) / 3)
                                let HTML = `<li><b>Base Charge Time:</b> ${chargeTime} second`
                                if (chargeTime != 1) { HTML += `s` }
                                HTML += ` (unaffected by CSPD)</li>`
                                result.innerHTML += HTML
                            }

                            function calcDeadlySpearCr(level, weapon, totalCr, result) {
                                let crBonus = 0
                                if (weapon == 'hb') { crBonus = totalCr * 3 }
                                else if (weapon == '1h') { crBonus = Math.floor(totalCr * 0.5) }
                                result.innerHTML += `<li><b>Critical Rate</b> of <b>Deadly Spear</b> +${crBonus}</li>`
                            }

                            function calcDeadlySpearPhysPierce(level, result) {
                                //storing pp into arrat
                                let physPierce = 5 + 5 * Math.ceil(level / 3)
                                result.innerHTML += `<li><b>Physical Pierce</b> of <b>Deadly Spear</b> +${physPierce}%</li>`
                            }

                            function deadlySpearExtraInformation(result) {
                                result.innerHTML += `<li>Grants <b>Deadly Spear buff</b> if this skill deals a critical hit</li><br>
                    <b>Buff Effect:</b>
                    <li>The next <b>skill</b> has its <b>MP Cost halved</b>, rounded up to the nearest multiple of 100</li>
                    <li><b>Buff Duration:</b> Until a skill is used</li>`
                            }

                            function calcDeadlySpearValues() {
                                let levelSelector = document.getElementById('deadlySpearSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('deadlySpearWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let totalCr = document.getElementById('deadlySpearCritValues').value
                                let result = document.getElementById('deadlySpearValues')
                                calcDeadlySpearConstant(level, result)
                                calcDeadlySpearMultiplier(level, weapon, result)
                                calcDeadlySpearChargeTime(level, result)
                                calcDeadlySpearCr(level, weapon, totalCr, result)
                                calcDeadlySpearPhysPierce(level, result)
                                deadlySpearExtraInformation(result)
                                result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
                            }

                            calcDeadlySpearValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/punishray.png" width="34" height="34">
                                Punish Ray
                            </p>
                            <p class="medium">
                                Skill Punish Ray Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/ohs.png"><img src="../../images/icon/halb.png"><br>1-Handed Sword/Halberd
                            only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Magic skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>0</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Cast a magic using the Halberd to resemble a staff. Deal magic damage affected by ATK.
                                Critical Rates of the next 3 skills increases.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>2x Power</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="punishRayWeaponType" onchange="calcPunishRayValues()">
                            <option value="1h">1-Handed Sword</option>
                            <option value="hb" selected="">Halberd</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="punishRaySkillLevel" onchange="calcPunishRayValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total INT:</b></span>
                        <input type="number" id="punishRayIntValues" value="1" style="width: 50px;"
                            onchange="calcPunishRayValues()"><br>
                        <span class="sub-title"><b>Cast Speed:</b></span>
                        <input type="number" style="width: 6em; text-align: right" value="0" id="punishRayCSPD"
                            onchange="calcPunishRayValues()"><br>
                        <br>
                        <span id="punishRayValues">
                            <li><b>Skill Constant:</b> 0</li>
                            <li><b>Skill Multiplier :</b> 2.5</li><br>
                            <li><b>Cast Time:</b> 2 seconds (affected by CSPD)</li>
                            <li>Grants <b>Punish Ray buff</b> upon successful cast</li><br>
                            <b>Buff Effect:</b>
                            <li>Gives <b>Critical Rate</b> boost to the next three skills:<ul>
                                    <li>&nbsp;&nbsp;- <b>First Skill</b> gains +150 Critical Rate</li>
                                    <li>&nbsp;&nbsp;- <b>Second Skill</b> gains +100 Critical Rate</li>
                                    <li>&nbsp;&nbsp;- <b>Third Skill</b> gains +50 Critical Rate</li>
                                </ul>
                            </li>
                            <li><b>Buff Duration:</b> Until all stacks are used; each skill used after <b>Punish Ray</b>
                                will consume one stack</li><br><b>Extra Info:</b>
                            <li>This skill uses <b>Physical Skill damage calculation</b> for its base damage, but uses
                                <b>Magic Skill damage calculation</b> for the rest of its damage calculation
                            </li>
                            <li>This skill inflicts <b>Magic Proration</b> </li>
                        </span>

                        <script>
                            function calcCastTime(baseCastTime, CSPD) {
                                var castTime = baseCastTime * 1
                                var modifier1 = CSPD / 2000
                                var modifier2 = (CSPD - 1000) / 18000
                                if (CSPD <= 1000) { castTime = castTime * (1 - modifier1) }
                                else { castTime = castTime * (1 - (0.5 + modifier2)) }
                                castTime = Math.ceil(castTime * 100) / 100
                                if (castTime < 0) { castTime = 0 }
                                return castTime
                            }

                            function calcPunsihRayConstant(result) {
                                result.innerHTML = `<li><b>Skill Constant:</b> 0</li>`
                            }

                            function calcPunishRayMultiplier(level, weapon, totalInt, result) {
                                let multiplier = 0.25 + 0.01 * (level * level) + (totalInt / 400)
                                if (weapon == 'hb') { multiplier *= 2 }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier :</b> ${multiplier}</li><br>`
                            }

                            function punishRayCastTime(CSPD, result) {
                                var castTime = calcCastTime(2, CSPD)
                                var HTML = `<li><b>Cast Time:</b> ${castTime} second`
                                if (castTime != 1) { HTML += `s` }
                                HTML += ` (affected by CSPD)</li>`
                                result.innerHTML += HTML
                            }

                            function calcPunishRayBuffEffect(weapon, level, result) {
                                let firstSkill = 15 * level
                                let secondSkill = 10 * level
                                let thirdSkill = 5 * level
                                if (weapon == '1h') {
                                    firstSkill = firstSkill / 1.5
                                    secondSkill = secondSkill / 2
                                    thirdSkill = Math.floor(thirdSkill / 2)
                                }
                                result.innerHTML += `<li>Grants <b>Punish Ray buff</b> upon successful cast</li><br>
                    <b>Buff Effect:</b>
                    <li>Gives <b>Critical Rate</b> boost to the next three skills:<ul>
                    <li>&nbsp&nbsp- <b>First Skill</b> gains +${firstSkill} Critical Rate</li>
                    <li>&nbsp&nbsp- <b>Second Skill</b> gains +${secondSkill} Critical Rate</li>
                    <li>&nbsp&nbsp- <b>Third Skill</b> gains +${thirdSkill} Critical Rate</li>
                    </ul></li>
                    <li><b>Buff Duration:</b> Until all stacks are used; each skill used after <b>Punish Ray</b> will consume one stack</li>`
                            }

                            function punishRayExtraInformation(result) {
                                result.innerHTML += `<br><b>Extra Info:</b>
                    <li>This skill uses <b>Physical Skill damage calculation</b> for its base damage, but uses <b>Magic Skill damage calculation</b> for the rest of its damage calculation</li>
                    <li>This skill inflicts <b>Magic Proration</b> </li>`
                            }

                            function calcPunishRayValues() {
                                let levelSelector = document.getElementById('punishRaySkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('punishRayWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let totalInt = document.getElementById('punishRayIntValues').value
                                var CSPD = document.getElementById("punishRayCSPD").value
                                let result = document.getElementById('punishRayValues')
                                calcPunsihRayConstant(result)
                                calcPunishRayMultiplier(level, weapon, totalInt, result)
                                punishRayCastTime(CSPD, result)
                                calcPunishRayBuffEffect(weapon, level, result)
                                punishRayExtraInformation(result)
                            }

                            calcPunishRayValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/strikestab.png" width="34" height="34">
                                Strike Stab
                            </p>
                            <p class="medium">
                                Skill Strike Stab Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/ohs.png"><img src="../../images/icon/halb.png"><br>1-Handed Sword/Halberd
                            only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>2</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Thrust an enemy with a quick movement. The damage increases if the target has a status
                                ailment. Have a low chance to deal critical.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>Skill Power +300<br> 2x Additional Damage Power with Status Ailment</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/ohs.png"></p>
                                <p>1 Handed Sword</p>
                            </div>
                            <p><b style="color: #E77577">Reduction on Critical Rate</b></p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="strikeStabWeaponType" onchange="calcStrikeStabValues()">
                            <option value="1h">1-Handed Sword</option>
                            <option value="hb" selected="">Halberd</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="strikeStabSkillLevel" onchange="calcStrikeStabValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Total STR:</b></span>
                        <input type="number" id="strikeStabStrValues" value="255" style="width: 50px;"
                            onchange="calcStrikeStabValues()"><br>
                        <span class="sub-title"><b>Target afflicted with an ailment:</b></span>
                        <input type="checkbox" id="isAilmentStrikeStab" onchange="calcStrikeStabValues()"><br>
                        <br>
                        <span id="strikeStabValues">
                            <li><b>Skill Constant:</b> 200; constant for each hit</li>
                            <li><b>Skill Multiplier:</b> 2.51; multiplier for each hit</li>
                            <li><b>Hit Count:</b> 3 hits; damage calculation is done <b>for the first hit</b>, then
                                <b>copied for the other hits</b>
                            </li><br>
                            <li><b>Base Critical Rate</b> of <b>Strike Stab</b> -50%</li><br>This skill's <b>maximum
                                cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>
                        </span>

                        <script>
                            function calcStrikeStabConstant(weapon, result) {
                                let constant = 100
                                if (weapon == 'hb') constant += 100
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}; constant for each hit</li>`
                            }

                            function calcStrikeStabMultiplier(level, weapon, isAilment, totalStr, result) {
                                let multiplier = 1.9 + (0.01 * level) + (totalStr / 500)
                                let bonusMultiplier = 0.1 * level
                                if (weapon == "hb") bonusMultiplier *= 2
                                if (isAilment) { multiplier += bonusMultiplier }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.00999999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; multiplier for each hit`
                            }

                            function calcStrikeStabHitCount(result) {
                                result.innerHTML += `<li><b>Hit Count:</b> 3 hits; damage calculation is done <b>for the first hit</b>, then <b>copied for the other hits</b></li><br>`
                            }

                            function calcStrikeStabCrPenalty(level, weapon, result) {
                                let penalty = 5 * level
                                if (weapon == "1h") { penalty = Math.floor(penalty * 0.5) + 50 }
                                result.innerHTML += `<li><b>Base Critical Rate</b> of <b>Strike Stab</b> -${penalty}%</li>`
                            }

                            function calcStrikeStabValues() {
                                let levelSelector = document.getElementById('strikeStabSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('strikeStabWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let totalStr = document.getElementById('strikeStabStrValues').value
                                let isAilment = document.getElementById('isAilmentStrikeStab').checked
                                let result = document.getElementById('strikeStabValues')
                                calcStrikeStabConstant(weapon, result)
                                calcStrikeStabMultiplier(level, weapon, isAilment, totalStr, result)
                                calcStrikeStabHitCount(result)
                                calcStrikeStabCrPenalty(level, weapon, result)
                                result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
                            }

                            calcStrikeStabValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/chronosdrive.png" width="34" height="34">
                                Chronos Drive
                            </p>
                            <p class="medium">
                                Skill Chronos Drive Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>400</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>4</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Repeat the fact that you penetrated a target. Grant a buff to restore small amount of MP
                                and deal damage over time to the target for a few seconds.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="chronosDriveSkillLevel" onchange="calcChronosDriveValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Base INT:</b></span>
                        <input type="number" value="1" id="chronosDriveIntValues" min="1" max="510"
                            onchange="calcChronosDriveValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>Attack Speed:</b></span>
                        <input type="number" style="width: 6em; text-align: right" value="0" id="chronosDriveASPD"
                            onchange="calcChronosDriveValues()"><br>
                        <span class="sub-title"><b>Bonus Motion Speed:</b></span>
                        <input type="number" style="width: 50px" value="0" max="50" id="chronosDriveMotionSpd"
                            onchange="calcChronosDriveValues()"><br>
                        <br>
                        <span id="chronosDriveValues">
                            <li><b>Skill Constant:</b> 400; total constant of all hits</li>
                            <li><b>Skill Multiplier:</b> 6; total multiplier of all hits</li>
                            <li><b>Hit Count:</b> 3 hits; damage calculation is done once then spread evenly between the
                                hits</li><br><b>Skill Effect:</b> Inflicts additional attacks over time to the target
                            for a certain duration
                            <li><b>Additional Attacks Duration:</b> 10 seconds</li>
                            <li><b>Additional Attacks Skill Constant:</b> 500; constant for each hit</li>
                            <li><b>Additional Attacks Skill Multiplier:</b> 0.5; multiplier for each hit</li>
                            <li><b>Delay between hits:</b> 2.6 seconds</li>
                            <li><b>Additional Attacks Hit Count:</b> 3 hits; dodge, Evasion, Guard, Anticipate, Guard
                                Break and critical calculations are done <b>for the first hit</b>, then <b>copied for
                                    the other hits</b>; the rest of damage calculation is done for each hit</li>
                            <li><b>Additional Attacks</b> can recover 30 MP every hit, to a total of 90 MP</li>
                            <br><b>Extra Info:</b>
                            <li>The delay between hits of the <b>Additional Attacks</b> is unaffected by any Motion
                                Speed modifiers that only apply on <b>Chronos Drive</b> (e.g. Swift Combo tag)</li>
                            <li>The <b>Additional Attacks</b> use <b>Magic Proration</b> for their damage calculation,
                                but <b>do not inflict proration</b></li>
                            <li>The <b>Additional Attacks</b> are unaffected by <b>Combo tags</b>, <b>Whack</b>,
                                <b>Short Range Damage</b> and <b>Long Range Damage</b> stats
                            </li><br>This skill's
                            <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main
                                weapon</b>
                        </span>

                        <script>
                            function calcAttackDelay(ASPD) {
                                const baseASPDModifier = 1100
                                var attackDelay = baseASPDModifier - ASPD
                                if (attackDelay < 0) { attackDelay = 0 }
                                return Math.ceil(attackDelay / 10) / 100
                            }

                            function calcChronosDriveMainHit(level, result) {
                                let constant = 40 * level
                                let multiplier = 1 + 0.5 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}; total constant of all hits</li>
                    <li><b>Skill Multiplier:</b> ${multiplier}; total multiplier of all hits</li>
                    <li><b>Hit Count:</b> 3 hits; damage calculation is done once then spread evenly between the hits</li><br>`
                            }

                            function calcChronosDriveAdditionalHits(level, intValue, ASPD, motionSpd, result) {
                                function rounding(value) {
                                    if (value - Math.floor(value * 100) / 100 < 0.009999) { value = Math.floor(value * 100) / 100 }
                                    else { value = Math.round(value * 100) / 100 }
                                    return value
                                }

                                let constantAdd = 250 + 25 * level
                                let multAdd = 0.4 + 0.01 * level + intValue / 500
                                multAdd = rounding(multAdd)

                                let duration = 4 + Math.ceil(level / 2) + Math.floor(level / 10)
                                let aaDelay = calcAttackDelay(ASPD)
                                let motionCheck = Math.max(0, ASPD - 1000)
                                let motion = Math.floor(motionCheck / 180) + motionSpd * 1
                                if (motion > 50) { motion = 50 }
                                let addDelay = aaDelay + 1.5 * (100 - motion) / 100
                                let hitCount = Math.floor(duration / addDelay)
                                addDelay = rounding(addDelay)
                                let HTML = `<b>Skill Effect:</b> Inflicts additional attacks over time to the target for a certain duration
                    <li><b>Additional Attacks Duration:</b> ${duration} seconds</li>
                    <li><b>Additional Attacks Skill Constant:</b> ${constantAdd}; constant for each hit</li>
                    <li><b>Additional Attacks Skill Multiplier:</b> ${multAdd}; multiplier for each hit</li>
                    <li><b>Delay between hits:</b> ${addDelay} second`
                                if (addDelay != 1) { HTML += `s` }
                                HTML += `</li>
                    <li><b>Additional Attacks Hit Count:</b> ${hitCount} hits; dodge, Evasion, Guard, Anticipate, Guard Break and critical calculations are done <b>for the first hit</b>, then <b>copied for the other hits</b>; the rest of damage calculation is done for each hit</li>
                    <li><b>Additional Attacks</b> can recover 30 MP every hit, to a total of ${hitCount * 30} MP</li>`
                                result.innerHTML += HTML
                            }

                            function addChronosDriveExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra Info:</b>
                    <li>The delay between hits of the <b>Additional Attacks</b> is unaffected by any Motion Speed modifiers that only apply on <b>Chronos Drive</b> (e.g. Swift Combo tag)</li>
                    <li>The <b>Additional Attacks</b> use <b>Magic Proration</b> for their damage calculation, but <b>do not inflict proration</b></li>
                    <li>The <b>Additional Attacks</b> are unaffected by <b>Combo tags</b>, <b>Whack</b>, <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>`
                            }

                            function calcChronosDriveValues() {
                                let levelSelector = document.getElementById('chronosDriveSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let intValue = document.getElementById('chronosDriveIntValues').value
                                let ASPD = document.getElementById('chronosDriveASPD').value
                                let motionSpd = document.getElementById('chronosDriveMotionSpd').value
                                let result = document.getElementById('chronosDriveValues')
                                calcChronosDriveMainHit(level, result)
                                calcChronosDriveAdditionalHits(level, intValue, ASPD, motionSpd, result)
                                addChronosDriveExtraInfo(result)
                                result.innerHTML += `<br>This skill's <b>maximum cast range</b> is equal to the maximum auto attack range of the <b>main weapon</b>`
                            }

                            calcChronosDriveValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/infinitedimension.png" width="34" height="34">
                                Infinite Dimension
                            </p>
                            <p class="medium">
                                Skill Infinite Dimension Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>200</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Repeated spear attacks that transcend time and space. Repeatedly performs wide-ranging
                                attacks around a target. Chance to inflict [Dazzled].<br>
                                <b style="color: gold">If Chronos Drive is in effect, extra MP will be recovered.</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="infiniteDimensionSkillLevel"
                            onchange="calcInfiniteDimensionValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Base STR:</b></span>
                        <input type="number" value="255" id="infDimensionStrValues" min="1" max="510"
                            onchange="calcInfiniteDimensionValues()" style="width: 50px;"><br>
                        <span class="sub-title"><b>"Chronos Drive" effect is active:</b></span>
                        <input type="checkbox" id="infDimensionCDrive" onchange="calcInfiniteDimensionValues()"><br>
                        <div id="infiniteDimensionChronosInput" style="display: none;">
                            <span class="sub-title"><b>Total Attack MP Recovery:</b></span>
                            <input type="number" id="infiniteDimensionAmprInput" value="30"
                                style="width: 3em; text-align: right" onchange="calcInfiniteDimensionValues()"><br>
                        </div>
                        <br>
                        <span id="infiniteDimensionValues">
                            <li><b>Skill Constant:</b> 200; total constant of all hits of each tick</li>
                            <li><b>Skill Multiplier:</b> 4.25; total multiplier of all hits of each tick</li>
                            <li><b>Hit Count:</b>
                                <ul>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>Number of Ticks:</b> 5 ticks; damage calculation is done
                                        for each tick</li>
                                    <li>&nbsp;&nbsp;&nbsp;- <b>Hits per Tick:</b> 2 hits; damage calculation is done
                                        once then spread evenly between the hits</li>
                                </ul>
                            </li><br>
                            <li><b>Hit Range (radius):</b> 6m; around the <b>main target's position when the skill is
                                    cast</b></li>
                            <li><b>Dazzled Chance:</b> 80%</li>
                            <li><b>Dazzled Duration:</b> 10 seconds</li><br><b>Extra Info:</b>
                            <li>The skill deals 1 tick (or 2 hits) every second; this is unaffected by any <b>Motion
                                    Speed modifier</b>, including <b>Swift</b> Combo tag or [Freeze]</li>
                            <li>This skill uses <b>Physical Proration</b> for its damage calculation, but <b>does not
                                    inflict proration</b></li>
                            <li>This skill will <b>end immediately</b> as soon as <b>the main target dies</b></li>
                            <li>This skill is unaffected by <b>Short Range Damage</b> and <b>Long Range Damage</b> stats
                            </li>
                        </span>

                        <script>
                            function infDimensionCDriveCheck(chDrive, chDriveSection) {
                                if (chDrive) { chDriveSection.style = "display: block" }
                                else { chDriveSection.style = "display: none" }
                            }

                            function calcInfiniteDimensionConstant(level, result) {
                                var constant = 20 * level
                                result.innerHTML = `<li><b>Skill Constant:</b> ${constant}; total constant of all hits of each tick</li>`
                            }

                            function calcInfiniteDimensionMultiplier(strValue, result) {
                                let multiplier = 4 + strValue / 1000
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.009999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}; total multiplier of all hits of each tick</li>
                    <li><b>Hit Count:</b><ul>
                    <li>&nbsp&nbsp&nbsp- <b>Number of Ticks:</b> 5 ticks; damage calculation is done for each tick</li>
                    <li>&nbsp&nbsp&nbsp- <b>Hits per Tick:</b> 2 hits; damage calculation is done once then spread evenly between the hits</li>
                    </ul></li><br>`
                            }

                            function addInfiniteDimensionHitRange(result) {
                                result.innerHTML += `<li><b>Hit Range (radius):</b> 6m; around the <b>main target's position when the skill is cast</b></li>`
                            }

                            function calcInfiniteDimensionSkillEffect(level, chDrive, ampr, result) {
                                var mpHeal = ampr * level / 10
                                if (mpHeal - Math.floor(mpHeal) < 0.999999999999) { mpHeal = Math.floor(mpHeal) }
                                else { mpHeal = Math.round(mpHeal) }
                                if (chDrive) { result.innerHTML += `<li>Recovers ${mpHeal} MP on each <b>tick</b>, to a total of ${mpHeal * 5} MP</li>` }
                            }

                            function calcInfiniteDimensionAilment(level, result) {
                                var chance = 8 * level
                                result.innerHTML += `<li><b>Dazzled Chance:</b> ${chance}%</li>
                    <li><b>Dazzled Duration:</b> 10 seconds</li>`
                            }

                            function addInfiniteDimensionExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra Info:</b>
                    <li>The skill deals 1 tick (or 2 hits) every second; this is unaffected by any <b>Motion Speed modifier</b>, including <b>Swift</b> Combo tag or [Freeze]</li>
                    <li>This skill uses <b>Physical Proration</b> for its damage calculation, but <b>does not inflict proration</b></li>
                    <li>This skill will <b>end immediately</b> as soon as <b>the main target dies</b></li>
                    <li>This skill is unaffected by <b>Short Range Damage</b> and <b>Long Range Damage</b> stats</li>`
                            }

                            function calcInfiniteDimensionValues() {
                                let levelSelector = document.getElementById('infiniteDimensionSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let strValue = document.getElementById('infDimensionStrValues').value
                                let chDrive = document.getElementById('infDimensionCDrive').checked
                                let chDriveSection = document.getElementById("infiniteDimensionChronosInput")
                                let ampr = document.getElementById("infiniteDimensionAmprInput").value
                                let result = document.getElementById('infiniteDimensionValues')
                                infDimensionCDriveCheck(chDrive, chDriveSection)
                                calcInfiniteDimensionConstant(level, result)
                                calcInfiniteDimensionMultiplier(strValue, result)
                                addInfiniteDimensionHitRange(result)
                                calcInfiniteDimensionSkillEffect(level, chDrive, ampr, result)
                                calcInfiniteDimensionAilment(level, result)
                                addInfiniteDimensionExtraInfo(result)
                            }

                            calcInfiniteDimensionValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/halberdmastery.png" width="34" height="34">
                                Halberd Mastery
                            </p>
                            <p class="medium">
                                Skill Halberd Mastery Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Get better at using Halberds. ATK increases when you equip a Halberd.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="halberdMasterySkillLevel" onchange="calcHalberdMasteryValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="halberdMasteryValues">
                            <li><b>ATK</b> +3%</li>
                            <li><b>Weapon ATK</b> +30%</li>
                        </span>

                        <script>
                            function calcHalberdMasteryAtk(level, result) {
                                var ATK = 1 + Math.ceil((level - 2) / 5)
                                result.innerHTML = `<li><b>ATK</b> +${ATK}%</li>`
                            }

                            function calcHalberdMasteryWeaponAtk(level, result) {
                                var weaponATK = 3 * level
                                result.innerHTML += `<li><b>Weapon ATK</b> +${weaponATK}%</li>`
                            }

                            function calcHalberdMasteryValues() {
                                let levelSelector = document.getElementById('halberdMasterySkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let result = document.getElementById('halberdMasteryValues')
                                calcHalberdMasteryAtk(level, result)
                                calcHalberdMasteryWeaponAtk(level, result)
                            }

                            calcHalberdMasteryValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/criticalspear.png" width="34" height="34">
                                Critical Spear
                            </p>
                            <p class="medium">
                                Skill Critical Spear Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Learn the mastery of Halberds. Critical Rate increases when you equip a Halberd.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="criticalSpearSkillLevel" onchange="calcCriticalSpearValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="criticalSpearValues">
                            <li><b>Critical Rate</b> +5%</li>
                            <li><b>Critical Rate</b> +5</li>
                        </span>

                        <script>
                            function calcCriticalSpearPercent(level, result) {
                                let percent = Math.floor(level / 2)
                                let HTML = ``
                                if (percent > 0) { HTML += `<li><b>Critical Rate</b> +${percent}%</li>` }
                                result.innerHTML = HTML
                            }

                            function calcCriticalSpearFlat(level, result) {
                                let flat = Math.ceil(level / 2)
                                result.innerHTML += `<li><b>Critical Rate</b> +${flat}</li>`
                            }

                            function calcCriticalSpearValues() {
                                let levelSelector = document.getElementById('criticalSpearSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let result = document.getElementById('criticalSpearValues')
                                calcCriticalSpearPercent(level, result)
                                calcCriticalSpearFlat(level, result)
                            }

                            calcCriticalSpearValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/tornadolance.png" width="34" height="34">
                                Tornado Lance
                            </p>
                            <p class="medium">
                                Skill Tornado Lance Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Gains 1 unit of tornado power when a halberd skill hits.<br>
                                Your halberd gets stronger as you accumulate more tornado power. Half of the tornado
                                power will be lost if attacked.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p><b style="color: gold">[About Tornado Power]</b><br>
                                Increases halberd's critical damage, chance of additional attack and guaranteed hit as
                                it accumulates.<br><br>
                                When the tornado power is lost due to getting attacked, dodge rate increases according
                                to the value of power lost.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select id="tornadoLanceLevel" onchange="calcTornadoLanceValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Number of stacks:</b></span>
                        <input type="number" id="tornadoLanceStackCount" value="1" onchange="calcTornadoLanceValues()"
                            style="width: 3em;" min="1" max="10"><br>
                        <br>
                        <span id="tornadoLanceValues">
                            <li>Upon successful hit (no [Miss]/[Evaded]) with an <b>Attacking Halberd Skill</b>, gains 1
                                <b>Tornado Lance buff stack</b>, up to a maximum of 10 stacks
                            </li>
                            <li>Upon getting attacked, loses half of the current stacks, rounded up</li><br><b>Buff
                                Effect:</b>
                            <li><b>Critical Damage</b> +2</li>
                            <li><b>Dodge</b> +10%</li>
                            <li><b>Chance to activate Additional Melee/Additional Magic</b> +2%</li>
                            <li><b>Graze Threshold</b> +8%; the effect of [Dazzled] <b>does not take this bonus into
                                    account</b></li>
                            <li><b>Stability</b> of <b>[Graze] hits</b> +1%</li>
                            <li>Loses 1 stack upon getting hit</li>
                            <li><b>Buff Duration:</b> 100 seconds; refreshes upon successful hit with an <b>Attacking
                                    Halberd Skill</b></li><br><b>Extra info:</b>
                            <li>The stack loss effect will not activate if the attack was "avoided" ([Miss]/[Evaded]
                                attack, or getting hit during [Invincible])</li>
                            <li>[Graze] reduces the <b>total Stability after applying hard cap (100%)</b> by half; the
                                Stability bonus of this buff is applied <b>additively</b> to the <b>Stability after
                                    [Graze]</b></li><br>Credits to <b>Phantom Library</b> and <b>Cy's Grimoire</b> for
                            the info of the skill
                        </span>

                        <script>
                            function calcTornadoLanceSkillEffect(result) {
                                result.innerHTML = `<li>Upon successful hit (no [Miss]/[Evaded]) with an <b>Attacking Halberd Skill</b>, gains 1 <b>Tornado Lance buff stack</b>, up to a maximum of 10 stacks</li>
                        <li>Upon getting attacked, loses half of the current stacks, rounded up</li>`
                            }

                            function calcTornadoLanceBuffEffect(level, stack, result) {
                                var cdmg = Math.floor(level * stack / 5)
                                var dodge = 10 * stack
                                var chance = Math.floor(2.5 * level * stack / 10)
                                var graze = Math.floor(8 * level * stack / 10)
                                var lose = Math.ceil(stack / 2)
                                var stkLost = lose + ` stack`
                                if (lose != 1) { stkLost += `s` }
                                result.innerHTML += `<br><b>Buff Effect:</b>
                        <li><b>Critical Damage</b> +${cdmg}</li>
                        <li><b>Dodge</b> +${dodge}%</li>
                        <li><b>Chance to activate Additional Melee/Additional Magic</b> +${chance}%</li>
                        <li><b>Graze Threshold</b> +${graze}%; the effect of [Dazzled] <b>does not take this bonus into account</b></li>
                        <li><b>Stability</b> of <b>[Graze] hits</b> +${stack}%</li>
                        <li>Loses ${stkLost} upon getting hit</li>
                        <li><b>Buff Duration:</b> 100 seconds; refreshes upon successful hit with an <b>Attacking Halberd Skill</b></li>`
                            }

                            function addTornadoLanceExtraInfo(result) {
                                result.innerHTML += `<br><b>Extra info:</b>
                        <li>The stack loss effect will not activate if the attack was "avoided" ([Miss]/[Evaded] attack, or getting hit during [Invincible])</li>
                        <li>[Graze] reduces the <b>total Stability after applying hard cap (100%)</b> by half; the Stability bonus of this buff is applied <b>additively</b> to the <b>Stability after [Graze]</b></li>`
                            }

                            function calcTornadoLanceValues() {
                                let levelSelector = document.getElementById("tornadoLanceLevel")
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let stack = document.getElementById("tornadoLanceStackCount").value
                                let result = document.getElementById("tornadoLanceValues")
                                calcTornadoLanceSkillEffect(result)
                                calcTornadoLanceBuffEffect(level, stack, result)
                                addTornadoLanceExtraInfo(result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> and <b>Cy's Grimoire</b> for the info of the skill`
                            }

                            calcTornadoLanceValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/quickaura.png" width="34" height="34">
                                Quick Aura
                            </p>
                            <p class="medium">
                                Skill Quick Aura Level 1 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>0</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Increase your speed with the fighting spirit. Activate this skill by consuming HP instead
                                of MP. Increase ASPD for a certain period of time.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>HP Cost -5%<br> Duration +120sec.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="quickAuraWeaponType" onchange="calcQuickAuraValues()">
                            <option value="hb" selected="">Halberd</option>
                            <option value="other">Other</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="quickAuraSkillLevel" onchange="calcQuickAuraValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="quickAuraValues"><b>Skill Effect:</b> Consumes 10% of your <b>MaxHP</b> and grants
                            <b>Quick Aura buff</b> upon cast; if you don't have enough HP, you will be left with 1 HP
                            but the effect of the buff will be reduced to that of <b>Skill Level 1</b><br><b>Buff
                                Effect:</b>
                            <li><b>Attack Speed</b> +25%</li>
                            <li><b>Attack Speed</b> +500</li>
                            <li><b>Buff Duration:</b> 5 minutes</li>
                        </span>

                        <script>
                            function calcQuickAuraSkillEffect(level, weapon, result) {
                                let hpConsumption = 15
                                if (weapon == 'hb') { hpConsumption -= 5 }
                                let HTML = `<b>Skill Effect:</b> Consumes ${hpConsumption}% of your <b>MaxHP</b> and grants <b>Quick Aura buff</b> upon cast; if you don't have enough HP, you will be left with 1 HP`
                                if (level != 1) { HTML += ` but the effect of the buff will be reduced to that of <b>Skill Level 1</b>` }
                                result.innerHTML = HTML
                            }

                            function calcQuickAuraBuffEffect(level, result) {
                                let flat = 50 * level
                                let percent = Math.floor(2.5 * level)
                                result.innerHTML += `<br><b>Buff Effect:</b>
                    <li><b>Attack Speed</b> +${percent}%</li>
                    <li><b>Attack Speed</b> +${flat}</li>`
                            }

                            function calcQuickAuraDuration(weapon, result) {
                                let duration = 3
                                if (weapon == 'hb') { duration += 2 }
                                result.innerHTML += `<li><b>Buff Duration:</b> ${duration} minutes</li>`
                            }

                            function calcQuickAuraValues() {
                                let levelSelector = document.getElementById('quickAuraSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('quickAuraWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let result = document.getElementById('quickAuraValues')
                                calcQuickAuraSkillEffect(level, weapon, result)
                                calcQuickAuraBuffEffect(level, result)
                                calcQuickAuraDuration(weapon, result)
                            }

                            calcQuickAuraValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/warcryofstruggle.png" width="34" height="34">
                                War Cry of Struggle
                            </p>
                            <p class="medium">
                                Skill War Cry of Struggle Level 2 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>No</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>The roar of life in a critical situation. Restore MP a little. The amount of the MP
                                restoration increases as the current HP is low.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>Charge Time is shortened.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details open="">
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select id="wcosWeaponType" onchange="calcWCOSValues()">
                            <option value="hb" selected="">Halberd</option>
                            <option value="other">Other</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select id="wcosSkillLevel" onchange="calcWCOSValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Cast Speed:</b></span>
                        <input type="number" style="width: 6em; text-align: right" value="0" id="wcosCSPD"
                            onchange="calcWCOSValues()"><br>
                        <span class="sub-title"><b>"Mega War Cry of Struggle" Registlet Level:</b></span>
                        <select id="wcosRegistlet" onchange="calcWCOSValues()">
                            <option value="0" selected="">Unequipped</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select><br>
                        <br>
                        <span id="wcosValues">
                            <li><b>Cast Time:</b> 2 seconds (affected by CSPD)</li>
                            <li><b>Skill Effect:</b> Recovers MP upon successfull cast; the amount is based on <b>your
                                    current HP percentage</b> when the skill is cast:<ul>
                                    <li>&nbsp;&nbsp;&nbsp;- 120 MP when your HP is <b>over 85%</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- 140 MP when your HP is at <b>71% to 85%</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- 180 MP when your HP is at <b>56% to 70%</b></li>
                                    <li>&nbsp;&nbsp;&nbsp;- 300 MP when your HP is at <b>55% or lower</b></li>
                                </ul>
                            </li>
                            <li><b>Base Aggro</b> of <b>War Cry of Struggle</b>: 4000 (affected by Aggro Modifiers)</li>
                            (Note: This is the official aggro value by <b>Asobimo</b>. Please check out <a
                                href="https://youtu.be/38C8513vj54?t=218" style="color:blue;"><b>Joji Torai's tests
                                    about aggro</b></a> for more detail)
                        </span>

                        <script>
                            function calcCastTime(baseCastTime, CSPD) {
                                var castTime = baseCastTime * 1
                                var modifier1 = CSPD / 2000
                                var modifier2 = (CSPD - 1000) / 18000
                                if (CSPD <= 1000) { castTime = castTime * (1 - modifier1) }
                                else { castTime = castTime * (1 - (0.5 + modifier2)) }
                                castTime = Math.ceil(castTime * 100) / 100
                                if (castTime < 0) { castTime = 0 }
                                return castTime
                            }

                            function calcWCOSCastTime(level, weapon, CSPD, result) {
                                var castTime = 6 - Math.ceil(level / 3)
                                if (weapon == "hb") { castTime -= 1 }
                                var finalCastTime = calcCastTime(castTime, CSPD)
                                var HTML = `<li><b>Cast Time:</b> ${finalCastTime} second`
                                if (finalCastTime != 1) { HTML += `s` }
                                HTML += ` (affected by CSPD)</li>`
                                result.innerHTML = HTML
                            }

                            function calcWCOSMpRestored(level, weapon, result) {
                                var mpRestored1 = 120
                                var mpRestored2 = 120 + (2 * level)
                                var mpRestored3 = 120 + (6 * level)
                                var mpRestored4 = 140 + (16 * level)
                                result.innerHTML += `<li><b>Skill Effect:</b> Recovers MP upon successfull cast; the amount is based on <b>your current HP percentage</b> when the skill is cast:<ul>
                    <li>&nbsp&nbsp&nbsp- ${mpRestored1} MP when your HP is <b>over 85%</b></li>
                    <li>&nbsp&nbsp&nbsp- ${mpRestored2} MP when your HP is at <b>71% to 85%</b></li>
                    <li>&nbsp&nbsp&nbsp- ${mpRestored3} MP when your HP is at <b>56% to 70%</b></li>
                    <li>&nbsp&nbsp&nbsp- ${mpRestored4} MP when your HP is at <b>55% or lower</b></li>
                    </ul></li>`
                            }

                            function calcWCOSAggro(registlet, result) {
                                var aggro = 1000 + 300 * registlet
                                result.innerHTML += `<li><b>Base Aggro</b> of <b>War Cry of Struggle</b>: ${aggro} (affected by Aggro Modifiers)</li>
                    (Note: This is the official aggro value by <b>Asobimo</b>. Please check out <a href="https://youtu.be/38C8513vj54?t=218" style="color:blue;"><b>Joji Torai's tests about aggro</b></a> for more detail)`
                            }

                            function calcWCOSValues() {
                                var weaponSelector = document.getElementById("wcosWeaponType")
                                var weapon = weaponSelector[weaponSelector.selectedIndex].value
                                var levelSelector = document.getElementById("wcosSkillLevel")
                                var CSPD = document.getElementById("wcosCSPD").value
                                var registletSelector = document.getElementById("wcosRegistlet")
                                var registlet = registletSelector[registletSelector.selectedIndex].value
                                var level = levelSelector[levelSelector.selectedIndex].value
                                var result = document.getElementById("wcosValues")
                                calcWCOSCastTime(level, weapon, CSPD, result)
                                calcWCOSMpRestored(level, weapon, result)
                                calcWCOSAggro(registlet, result)
                            }

                            calcWCOSValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/godspeedwield.png" width="34" height="34">
                                Godspeed Wield
                            </p>
                            <p class="medium">
                                Skill Godspeed Wield Level 4 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/all.png"><br>Available with all weapons
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Neutral</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>0</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Consumes MaxMP and able to stack 3 times at most. Enhances ASPD/Action Speed/Evasion
                                Recharge for a short time and greatly decreases Physical &amp; Magic Resistance. The
                                effect ends when taking damage.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>Boost on ASPD Buff<br> Reduce the decrease of Physical Resistance<br> Reduce the decrease
                                of Magic Resistance<br> Duration +30sec</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Weapon:</b></span>
                        <select name="weaponType" id="godspeedWieldWeaponType" onchange="calcGodspeedWieldValues()">
                            <option value="hb" selected="">Halberd</option>
                            <option value="other">Other</option>
                        </select><br>
                        <span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="godspeedWieldSkillLevel" onchange="calcGodspeedWieldValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <span class="sub-title"><b>Number of Stacks:</b></span>
                        <select name="skillLevel" id="godspeedWieldStack" onchange="calcGodspeedWieldValues()">
                            <option value="1" selected="">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                        </select><br>
                        <div id="gswAlmightyInput" style="display: block;">
                            <span class="sub-title"><b>"Almighty Wield" Skill Level:</b></span>
                            <select name="skillLevel" id="godspeedWieldAlmightyLevel"
                                onchange="calcGodspeedWieldValues()">
                                <option value="0" selected="">0</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>
                            </select>
                        </div>
                        <br>
                        <span id="godspeedWieldValues"><b>Buff Effect:</b>
                            <li><b>Attack Speed</b> +400</li>
                            <li><b>Motion Speed</b> +10%</li>
                            <li><b>Evasion Recharge</b> +10%</li>
                            <li style="color: #C70039"><b>MaxMP</b> -100</li>
                            <li style="color: #C70039"><b>Physical Resistance</b> -25%</li>
                            <li style="color: #C70039"><b>Magic Resistance</b> -25%</li>
                            <li><b>Buff Duration:</b> 60 seconds; casting <b>Godspeed Wield</b> before the duration ends
                                will <b>add 1 Godspeed Wield stack</b> and <b>refresh the duration</b></li>
                            <br><b>Taking damage</b> will remove the buff entirely
                        </span>

                        <script>
                            function gswWeaponCheck(weapon, almightySection) {
                                if (weapon == "hb") { almightySection.style = "display: block" }
                                else { almightySection.style = "display: none" }
                            }

                            function calcGodspeedWieldAspd(level, weapon, stack, result) {
                                let baseASPD = 30 * level
                                if (weapon == "hb") { baseASPD += 100 }
                                let ASPD = baseASPD * stack
                                result.innerHTML = `<b>Buff Effect:</b>
                    <li><b>Attack Speed</b> +${ASPD}</li>`
                            }

                            function calcGodspeedWieldMotionSpeed(level, stack, result) {
                                let baseMotionSpd = 1 * level
                                let motionSpd = baseMotionSpd * stack
                                result.innerHTML += `<li><b>Motion Speed</b> +${motionSpd}%</li>`
                            }

                            function calcGodspeedWieldEvaRecharge(level, stack, result) {
                                let baseEvasion = 1 * level
                                let evasion = baseEvasion * stack
                                result.innerHTML += `<li><b>Evasion Recharge</b> +${evasion}%</li>`
                            }

                            function calcGodspeedWieldPenalties(level, weapon, stack, almightyLevel, result) {
                                let mpReduc = 100 * stack
                                let baseResReduc = 100 - 3 * level
                                if (weapon == "hb") { baseResReduc -= 45 + Math.floor(almightyLevel / 2) }
                                let resReduc = baseResReduc * stack
                                result.innerHTML += `<li style = 'color: #C70039'><b>MaxMP</b> -${mpReduc}</li>
                    <li style = 'color: #C70039'><b>Physical Resistance</b> -${resReduc}%</li>
                    <li style = 'color: #C70039'><b>Magic Resistance</b> -${resReduc}%</li>`
                            }

                            function calcGodspeedWieldDuration(level, weapon, stack, almightyLevel, result) {
                                var duration = 10 + 2 * level
                                if (weapon == 'hb') { duration += 30 }
                                var chance = 10 * almightyLevel
                                var HTML = `<li><b>Buff Duration:</b> ${duration} seconds; casting <b>Godspeed Wield</b> before the duration ends will`
                                if (stack < 3) { HTML += ` <b>add 1 Godspeed Wield stack</b> and` }
                                HTML += ` <b>refresh the duration</b></li>
                    <br><b>Taking damage</b> will`
                                if (weapon == "hb" && chance > 0) {
                                    if (chance != 100) { HTML += ` have ${chance}% chance to only remove 1 stack from the buff, and` }
                                    else { HTML += ` remove 1 stack from the buff` }
                                }
                                if (weapon != "hb" || chance < 100) {
                                    if (weapon == "hb" && chance != 0) { HTML += ` ${100 - chance}% chance to` }
                                    HTML += ` remove the buff entirely`
                                }
                                result.innerHTML += HTML
                            }

                            function calcGodspeedWieldValues() {
                                let levelSelector = document.getElementById('godspeedWieldSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let weaponSelector = document.getElementById('godspeedWieldWeaponType')
                                let weapon = weaponSelector[weaponSelector.selectedIndex].value
                                let stackSelector = document.getElementById('godspeedWieldStack')
                                let stack = stackSelector[stackSelector.selectedIndex].value
                                let almightySection = document.getElementById('gswAlmightyInput')
                                let almightyLevelSelector = document.getElementById('godspeedWieldAlmightyLevel')
                                let almightyLevel = almightyLevelSelector[almightyLevelSelector.selectedIndex].value
                                let result = document.getElementById('godspeedWieldValues')
                                gswWeaponCheck(weapon, almightySection)
                                calcGodspeedWieldAspd(level, weapon, stack, result)
                                calcGodspeedWieldMotionSpeed(level, stack, result)
                                calcGodspeedWieldEvaRecharge(level, stack, result)
                                calcGodspeedWieldPenalties(level, weapon, stack, almightyLevel, result)
                                calcGodspeedWieldDuration(level, weapon, stack, almightyLevel, result)
                            }

                            calcGodspeedWieldValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/godspeedwield.png" width="34" height="34">
                                Almighty Wield
                            </p>
                            <p class="medium">
                                Skill Almighty Wield Level 5 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Passive</p>
                        </div>
                        <div>
                            <p class="accent-bold"></p>
                            <p>Neutral</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Alleviates the amount of each resistance decreased due to the skill "Godspeed Wield" and
                                possibly lowers the buffs level by 1 to keep them active.</p>
                        </div>
                        <div class="span-2">
                            <div class="accent-bold"
                                style="display:grid;grid-template-columns: 35px auto;grid-column-gap: 10px">
                                <p><img src="../../images/icon/halb.png"></p>
                                <p>Halberd</p>
                            </div>
                            <p>"Almighty Wield III" will be usable after acquiring Lv1.<br>
                                "Almighty Wield II" will be usable after acquiring Lv5.<br>
                                "Almighty Wield I" will be usable after acquiring Lv10.<br>
                                <br>
                                <b style="color: gold">Immediately gets 2 stacks of Godspeed Wield when using II and it
                                    won't stack more than that even if the skill is used again. After using II, you can
                                    reduce the effect by using I.</b>
                            </p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="almightyWieldSkillLevel" onchange="calcAlmightyWieldValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <br>
                        <span id="almightyWieldValues">
                            <li>Upon taking damage while <b>Godspeed Wield buff</b> is active, 100% chance to only lose
                                1 stack instead of removing the buff entirely</li>
                            <li><b>Reduces the Physical/Magic Resistance penalty</b> of each <b>Godspeed Wield stack</b>
                                by 5%</li>
                            <li>Enables the use of the Active Skill <b>Almighty Wield III</b> that will <b>always set
                                    Godspeed Wield stack count to 3</b> upon cast</li>
                            <li>Enables the use of the Active Skill <b>Almighty Wield II</b> that will <b>always set
                                    Godspeed Wield stack count to 2</b> upon cast</li>
                            <li>Enables the use of the Active Skill <b>Almighty Wield I</b> that will <b>always set
                                    Godspeed Wield stack count to 1</b> upon cast</li>
                            <ul>
                                <li>&nbsp;&nbsp;&nbsp;- The <b>Almighty Wield</b> Active Skills all behave the same way
                                    as <b>Godspeed Wield</b>, aside from <b>always setting Godspeed Wield stack count to
                                        a set number</b> instead of increasing the stack count on each cast</li>
                            </ul>
                        </span>

                        <script>
                            function calcAlmightyWieldEffect(level, result) {
                                var chance = 10 * level
                                var res = Math.floor(level / 2)
                                var activebehave = `Active Skill behaves`
                                if (level > 4) { activebehave = `Active Skills all behave` }
                                var HTML = `<li>Upon taking damage while <b>Godspeed Wield buff</b> is active, ${chance}% chance to only lose 1 stack instead of removing the buff entirely</li>`
                                if (res > 0) { HTML += `<li><b>Reduces the Physical/Magic Resistance penalty</b> of each <b>Godspeed Wield stack</b> by ${res}%</li>` }
                                HTML += `<li>Enables the use of the Active Skill <b>Almighty Wield III</b> that will <b>always set Godspeed Wield stack count to 3</b> upon cast</li>`
                                if (level > 4) {
                                    HTML += `<li>Enables the use of the Active Skill <b>Almighty Wield II</b> that will <b>always set Godspeed Wield stack count to 2</b> upon cast</li>`
                                    if (level == 10) { HTML += `<li>Enables the use of the Active Skill <b>Almighty Wield I</b> that will <b>always set Godspeed Wield stack count to 1</b> upon cast</li>` }
                                }
                                HTML += `<ul><li>&nbsp&nbsp&nbsp- The <b>Almighty Wield</b> ${activebehave} the same way as <b>Godspeed Wield</b>, aside from <b>always setting Godspeed Wield stack count to a set number</b> instead of increasing the stack count on each cast</li>
                    </ul>`
                                result.innerHTML = HTML
                            }

                            function calcAlmightyWieldValues() {
                                let levelSelector = document.getElementById('almightyWieldSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let result = document.getElementById('almightyWieldValues')
                                calcAlmightyWieldEffect(level, result)
                            }

                            calcAlmightyWieldValues()
                        </script>
                    </details>
                    <p></p>
                </div>

        <hr class="separator"/>

                <div>
                    <div style="display:grid;grid-template-columns: 1fr 1fr;">
                        <div>
                            <p class="card-title">
                                <img src="../../images/skills/busterlance.png" width="34" height="34">
                                Buster Lance
                            </p>
                            <p class="medium">
                                Skill Buster Lance Level 3 </p>
                        </div>
                        <div style="justify-self:end;">
                            <img src="../../images/icon/halb.png"><br>Halberd only
                        </div>
                    </div>
                    <hr class="separator"/>
                    <div class="monster-prop">
                        <div>
                            <p class="accent-bold">Type</p>
                            <p>Active, Physical skill</p>
                        </div>
                        <div>
                            <p class="accent-bold">Element</p>
                            <p>Weapon Dependent</p>
                        </div>
                        <div>
                            <p class="accent-bold">MP</p>
                            <p>100</p>
                        </div>
                        <!-- $result_string .= sprintf("<td><b>Aggro</b></td>	<td>%s</td>", $row['aggro_text']); -->
                        <div>
                            <p class="accent-bold">Combo start</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Combo middle</p>
                            <p>Yes</p>
                        </div>
                        <div>
                            <p class="accent-bold">Range</p>
                            <p>12</p>
                        </div>
                        <div class="span-2">
                            <p class="accent-bold">Description</p>
                            <p>Attack by throwing a spear from a distance. The further you are from the target, the
                                weaker it is. The skill will change if certain conditions are met and the distance-based
                                power depletion will also be minimized.</p>
                        </div>
                    </div>
                    <p class="accent-bold">Extras</p>
                    <p></p>
                    <details>
                        <summary>Show more...</summary><br><span class="sub-title"><b>Skill Level:</b></span>
                        <select name="skillLevel" id="busterLanceSkillLevel" onchange="calcBusterLanceValues()">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10" selected="">10</option>
                        </select><br>
                        <label for="totalSTR" class="sub-title"><b>Total STR:</b></label>
                        <input type="number" name="strValue" id="busterLanceTotalStr" value="255" style="width: 50px;"
                            onchange="calcBusterLanceValues()"><br>
                        <label for="totalAGI" class="sub-title"><b>Total AGI:</b></label>
                        <input type="number" name="agiValue" id="busterLanceTotalAgi" value="247" style="width: 50px;"
                            onchange="calcBusterLanceValues()"><br>
                        <label for="range" class="sub-title"><b>Distance from target (m):</b></label>
                        <input type="number" id="busterLanceTargetRange" value="1" min="0" max="12" style="width: 50px;"
                            onchange="calcBusterLanceValues()"><br>
                        <span class="sub-title"><b>Punish Ray buff is active:</b> </span>
                        <input type="checkbox" id="punishRayBuff" onchange="calcBusterLanceValues()"><br>
                        <div id="grandBusterLancePunishRay" style="display: none;">
                            <span class="sub-title"><b>"Punish Ray" Skill Level:</b> </span>
                            <select name="skillLevel" id="punishRayLevel" onchange="calcBusterLanceValues()">
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10" selected="">10</option>
                            </select><br>
                        </div>
                        <br>
                        <span id="busterLanceValues">
                            <li><b>Skill Damage Type:</b> Physical</li>
                            <li><b>Skill Constant:</b> 100</li>
                            <li><b>Skill Multiplier:</b> 7.51</li><br>
                            <li>This skill loses <b>Skill Multiplier</b> when attacking targets at 7m and above</li>
                            <li>Since <b>Buster Lance</b> is a <b>Physical Skill</b>, it is affected by <b>Whack</b>
                            </li><br>Credits to <b>Phantom Library</b> and Xenesis5 for the info of the skill
                        </span>

                        <script>
                            function grandBusterLanceCheck(grandBusterLance, grandBusterLanceSection) {
                                if (grandBusterLance) { grandBusterLanceSection.style = "display: block" }
                                else { grandBusterLanceSection.style = "display: none" }
                            }

                            function calcBusterLanceConstant(level, grandBusterLance, result) {
                                let damageType = ``
                                let constant = 100
                                if (grandBusterLance) { constant += 100; damageType += `Magic` }
                                else { damageType += `Physical` }
                                result.innerHTML = `<li><b>Skill Damage Type:</b> ${damageType}</li>
                    <li><b>Skill Constant:</b> ${constant}`
                            }

                            function calcBusterLanceMultiplier(level, strValue, agiValue, targetDistance, grandBusterLance, punishLevel, result) {
                                let multiplier = 5
                                if (grandBusterLance) { multiplier += 0.1 * punishLevel + strValue / 200 + agiValue / 200 - Math.max(0, targetDistance - 6) * (0.6 - level * 0.04) }
                                else { multiplier += strValue / 200 + agiValue / 200 - Math.max(0, targetDistance - 6) * (1 - level * 0.05) }
                                if (multiplier - Math.floor(multiplier * 100) / 100 < 0.009999) { multiplier = Math.floor(multiplier * 100) / 100 }
                                else { multiplier = Math.round(multiplier * 100) / 100 }
                                result.innerHTML += `<li><b>Skill Multiplier:</b> ${multiplier}</li><br>`
                            }

                            function calcBusterLanceSkillEffect(grandBusterLance, result) {
                                let HTML = `<li>This skill loses <b>Skill Multiplier</b> when attacking targets at 7m and above</li>`
                                if (grandBusterLance) {
                                    HTML += `<br><b>Skill effect:</b> The skill's name is changed to <b>Grand Buster Lance</b>, and its characteristics are <b>changed</b>
                    <li><b>Grand Buster Lance</b> is treated as a <b>Magic Skill</b> instead, therefore it is affected by <b>Concentrate</b> and not <b>Whack</b></li>
                    <li><b>Grand Buster Lance</b> uses ATK for its base damage and goes through <b>Physical Skill damage calculation</b>; therefore, it can [Miss], [Graze], be [Evaded], or deal Critical Hits</li>
                    <li><b>Grand Buster Lance</b> inflicts <b>Magic Proration</b>, and uses <b>Magic Proration</b> for its damage calculation</li>
                    <li>Casting <b>Grand Buster Lance</b> will refresh <b>Punish Ray buff</b> to 3 stacks</li>
                    <li><b>Grand Buster Lance</b> is actually cast as <b>Buster Lance</b> first (which is a <b>Physical Skill</b>, while itself is treated as a <b>Magic Skill</b>); as a result, it cannot be cast if the caster is inflicted with either [Bleed] or [Silence]</li>`}
                                else { HTML += `<li>Since <b>Buster Lance</b> is a <b>Physical Skill</b>, it is affected by <b>Whack</b></li>` }
                                result.innerHTML += HTML
                            }

                            function calcBusterLanceValues() {
                                let levelSelector = document.getElementById('busterLanceSkillLevel')
                                let level = levelSelector[levelSelector.selectedIndex].value
                                let strValue = document.getElementById('busterLanceTotalStr').value
                                let agiValue = document.getElementById('busterLanceTotalAgi').value
                                let targetRange = document.getElementById('busterLanceTargetRange').value
                                var grandBusterLance = document.getElementById("punishRayBuff").checked
                                var grandBusterLanceSection = document.getElementById("grandBusterLancePunishRay")
                                let punishLevelSelector = document.getElementById('punishRayLevel')
                                let punishLevel = punishLevelSelector[punishLevelSelector.selectedIndex].value
                                let result = document.getElementById('busterLanceValues')
                                grandBusterLanceCheck(grandBusterLance, grandBusterLanceSection)
                                calcBusterLanceConstant(level, grandBusterLance, result)
                                calcBusterLanceMultiplier(level, strValue, agiValue, targetRange, grandBusterLance, punishLevel, result)
                                calcBusterLanceSkillEffect(grandBusterLance, result)
                                result.innerHTML += `<br>Credits to <b>Phantom Library</b> and Xenesis5 for the info of the skill`
                            }

                            calcBusterLanceValues()
                        </script>
                    </details>
                    <p></p>
                </div>

            </div>
        </div>

</body>

<script src="../../templates/functions-skills-list/magic.js"></script>